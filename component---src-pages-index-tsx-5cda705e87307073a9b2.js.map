{"version":3,"file":"component---src-pages-index-tsx-5cda705e87307073a9b2.js","mappings":"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","sources":["webpack://cat-logic/./src/constants/device.ts","webpack://cat-logic/./node_modules/react-use-fusejs/dist/index.js","webpack://cat-logic/./src/components/atoms/HomeLogo.tsx","webpack://cat-logic/./src/components/molecules/SearchBox.tsx","webpack://cat-logic/./src/components/atoms/ColorfulParagraph.tsx","webpack://cat-logic/./src/components/atoms/Small.tsx","webpack://cat-logic/./src/components/molecules/WikiCatalog.tsx","webpack://cat-logic/./src/components/templates/Home.tsx","webpack://cat-logic/./src/pages/index.tsx","webpack://cat-logic/./src/components/atoms/Link.tsx","webpack://cat-logic/./src/utils/wiki.ts","webpack://cat-logic/./src/constants/theme.ts","webpack://cat-logic/./node_modules/fuse.js/dist/fuse.esm.js","webpack://cat-logic/./src/components/templates/layout/PageLayout.tsx"],"sourcesContent":["export default {\n  larger: \"min-width: 700px\",\n}\n","\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  default: () => src_default,\n  useFusejs: () => useFusejs,\n  useGatsbyPluginFusejs: () => useGatsbyPluginFusejs\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_fuse = __toESM(require(\"fuse.js\"));\nvar import_react = require(\"react\");\nfunction useFusejs(query, data, index, fuseOpts, parseOpts, searchOpts) {\n  const [instance, setInstance] = (0, import_react.useState)(null);\n  (0, import_react.useEffect)(() => {\n    if (!data || !index) {\n      setInstance(null);\n      return;\n    }\n    const inst = new import_fuse.default(data, fuseOpts, import_fuse.default.parseIndex(index, parseOpts));\n    setInstance(inst);\n  }, [data, index]);\n  return (0, import_react.useMemo)(() => {\n    if (!query || !instance) {\n      return [];\n    }\n    return instance?.search(query, searchOpts) || [];\n  }, [query, instance]);\n}\nfunction useGatsbyPluginFusejs(query, fusejs, fuseOpts, parseOpts, searchOpts) {\n  const [instance, setInstance] = (0, import_react.useState)(null);\n  (0, import_react.useEffect)(() => {\n    if (!fusejs?.data || !fusejs?.index) {\n      setInstance(null);\n      return;\n    }\n    const inst = new import_fuse.default(\n      fusejs.data,\n      fuseOpts,\n      import_fuse.default.parseIndex(JSON.parse(fusejs.index), parseOpts)\n    );\n    setInstance(inst);\n  }, [fusejs]);\n  return (0, import_react.useMemo)(() => {\n    if (!query || !instance) {\n      return [];\n    }\n    return instance?.search(query, searchOpts) || [];\n  }, [query, instance]);\n}\nvar src_default = useFusejs;\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  useFusejs,\n  useGatsbyPluginFusejs\n});\n//# sourceMappingURL=index.js.map","import * as React from \"react\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  height: 20rem;\n  display: flex;\n  align-items: center;\n`\n\nconst LogoFrame = styled.iframe`\n  border: none;\n  width: 100%;\n  height: 7rem;\n`\n\nexport default function HomeLogo() {\n  return (\n    <Container>\n      <LogoFrame src=\"https://edunga1.github.io/canvas-floating-alphabet/?w=CAT%20%20LOGIC&t=1&s=5&i=1\"/>\n    </Container>\n  )\n}\n","import * as React from \"react\"\nimport styled from \"styled-components\"\n\nconst InputBorder = styled.div`\n  max-width: fit-content;\n  font-size: 0;\n  padding: 2px;\n\n  // gardient border\n  --bg-size: 400%;\n  --color-one: hsl(15 90% 55%);\n  --color-two: hsl(40 95% 55%);\n  background: linear-gradient(\n      90deg,\n      var(--color-one),\n      var(--color-two),\n      var(--color-one)\n    )\n    0 0 / var(--bg-size) 100%;\n  @media (prefers-reduced-motion: no-preference) {\n    animation: move-bg 8s linear infinite;\n    @keyframes move-bg {\n      to {\n        background-position: var(--bg-size) 0;\n      }\n    }\n  }\n`\n\nconst Input = styled.input`\n  border: none;\n  outline: none;\n  min-width: 1rem;\n  height: 1.5rem;\n`\n\nexport default function SearchBox(\n  {\n    onChange,\n    holder = \"\",\n  }: {\n    onChange: (query: string) => void,\n    holder?: string,\n  }\n) {\n\n  return (\n    <InputBorder>\n      <Input\n        type=\"text\"\n        onChange={(e) => onChange(e.target.value)}\n        placeholder={holder}\n      />\n    </InputBorder>\n  )\n}\n\n","import * as React from \"react\"\nimport styled from \"styled-components\"\n\nconst P = styled.p`\n  font-weight: bold;\n  --bg-size: 400%;\n  --color-one: hsl(15 90% 55%);\n  --color-two: hsl(40 95% 55%);\n  background: linear-gradient(\n      90deg,\n      var(--color-one),\n      var(--color-two),\n      var(--color-one)\n    )\n    0 0 / var(--bg-size) 100%;\n  color: transparent;\n  background-clip: text;\n  -webkit-background-clip: text;\n\n  @media (prefers-reduced-motion: no-preference) {\n    animation: move-bg 8s linear infinite;\n    @keyframes move-bg {\n      to {\n        background-position: var(--bg-size) 0;\n      }\n    }\n  }\n`\n\nexport default function ColorfulParagraph(\n  {children}: { children: React.ReactNode }\n) {\n  return (<P>{children}</P>)\n}\n","import * as React from \"react\"\nimport styled from \"styled-components\"\nimport theme from \"../../constants/theme\"\n\nconst S = styled.small`\n  margin-left: .5rem;\n  color: ${theme.colors.foreground};\n  word-break: keep-all;\n`\n\nexport default function Small(\n  { children }: { children: React.ReactNode },\n) {\n  return (\n    <S>{children}</S>\n  )\n}\n","import * as React from \"react\"\nimport styled from \"styled-components\"\nimport Link from \"../atoms/Link\"\nimport ColorfulParagraph from \"../atoms/ColorfulParagraph\"\nimport Small from \"../atoms/Small\"\nimport theme from \"../../constants/theme\"\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n\n  a {\n    color: ${theme.colors.link};\n  }\n`\n\nconst CatalogTable = styled.table`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  table-layout: fixed;\n  border-collapse: collapse;\n\n  th {\n    width: 40%;\n    padding: 0.2rem 0;\n    text-align: right;\n    font-weight: normal;\n  }\n\n  td {\n    padding: 0;\n    width: 60%;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`\n\nexport default function WikiList(\n  { items, fallback }: WikiListProps,\n) {\n  const hasItems = items.length > 0\n  console.log(items)\n  return (\n    <Container>\n      {hasItems\n        ? <CatalogTable>\n          {items.map((item, i) => (\n            <tr key={i}>\n              <th>\n                <Link href={item.path}>{item.title}</Link>\n              </th>\n              <td>\n                {item.head && <i><Small>{item.head}</Small></i>}\n              </td>\n            </tr>\n          ))}\n        </CatalogTable>\n        : <ColorfulParagraph>{fallback}</ColorfulParagraph>\n      }\n    </Container>\n  )\n}\n\ninterface WikiListProps {\n  items: { title: string; path: string; head?: string }[]\n  fallback?: string\n}\n","import { Link } from \"gatsby\"\nimport * as React from \"react\"\nimport styled from \"styled-components\"\nimport theme from \"../../constants/theme\"\nimport HomeLogo from \"../atoms/HomeLogo\"\nimport SearchBox from \"../molecules/SearchBox\"\nimport WikiCatalog from \"../molecules/WikiCatalog\"\nimport PageLayout from \"./layout/PageLayout\"\n\nconst Counter = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.fonts.body};\n`\n\nconst SearchBoxContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  margin-bottom: 1rem;\n\n  > div > :first-child {\n    margin-bottom: 0.5rem;\n  }\n`\n\nexport default function Home({\n  items,\n  setQuery,\n}: {\n  items: Wiki[];\n  setQuery: (arg0: string) => void;\n}) {\n  return (\n    <PageLayout>\n      <div>\n        <HomeLogo />\n        <SearchBoxContainer>\n          <div>\n            <SearchBox onChange={setQuery} holder=\">\" />\n            <Counter>{items.length} docs</Counter>\n          </div>\n        </SearchBoxContainer>\n        <WikiCatalog items={items} fallback=\"No results found :(\" />\n      </div>\n    </PageLayout>\n  )\n}\n\nexport type Wiki = {\n  path: string;\n  title: string;\n  head: string;\n  lastModified?: Date;\n};\n","import * as React from \"react\"\nimport { graphql, HeadFC, PageProps } from \"gatsby\"\nimport \"./global.css\"\nimport { createWikiLink } from \"../utils/wiki\"\nimport { useGatsbyPluginFusejs } from \"react-use-fusejs\"\nimport Home, { Wiki } from \"../components/templates/Home\"\n\nexport default function IndexPage(\n  { data }: PageProps<Queries.IndexPageQuery>,\n) {\n  const allItems = parseWikiItems(data.allFile.nodes)\n  const [items, setItems] = React.useState(allItems)\n  const [query, setQuery] = React.useState(\"\")\n  const result = useGatsbyPluginFusejs(query, data.fusejs)\n\n  React.useEffect(() => {\n    if (query) {\n      setItems(mapSearchResultToWikiItem(result))\n    } else {\n      setItems(allItems)\n    }\n  }, [query, result])\n\n  return (\n    <Home\n      items={items}\n      setQuery={setQuery}\n    />\n  )\n}\n\nexport const Head: HeadFC = () => <title>Cat Logic - Home</title>\n\nexport const pageQuery = graphql`\n  query IndexPage {\n    allFile(\n      filter: {childMarkdownRemark: {id: {ne: null}}}\n      sort: {fields: {gitLogs: {date: DESC}}}\n    ) {\n      nodes {\n        name\n        childMarkdownRemark {\n          headings(depth: h1) {\n            value\n          }\n          fields {\n            slug\n            head\n          }\n          frontmatter {\n            created\n          }\n        }\n        fields {\n          gitLogs {\n            date\n          }\n        }\n      }\n    }\n\n    # search data\n    fusejs {\n      index\n      data\n    }\n  }\n`\ninterface SearchResult {\n  item: { name: string; title: string; head: string }\n  refIndex: number\n}\n\nfunction mapSearchResultToWikiItem(result: SearchResult[]): Wiki[] {\n  return result\n    .map(it => ({\n      path: createWikiLink(it.item.name),\n      title: it.item.title ?? \"(Untitled)\",\n      head: it.item.head ?? \"\",\n    }))\n}\n\nfunction parseWikiItems(nodes: Queries.IndexPageQuery[\"allFile\"][\"nodes\"]): Wiki[] {\n  return nodes\n    .concat()\n    .map(({ childMarkdownRemark, fields }) => {\n      const gitLogLatestDate = fields?.gitLogs?.at(0)?.date\n      const lastModified = gitLogLatestDate ? new Date(gitLogLatestDate) : undefined\n      const created = childMarkdownRemark?.frontmatter?.created ? new Date(childMarkdownRemark.frontmatter.created) : undefined\n      return {\n        path: createWikiLink(childMarkdownRemark?.fields?.slug ?? \"\"),\n        title: childMarkdownRemark?.headings?.at(0)?.value ?? \"(Untitled)\",\n        head: childMarkdownRemark?.fields?.head ?? \"\",\n        lastModified: lastModified ?? created,\n      }\n    })\n    .sort((a, b) => {\n      const aa = a.lastModified?.getTime() ?? 0\n      const bb = b.lastModified?.getTime() ?? 0\n      return bb - aa\n    })\n}\n","import * as React from \"react\"\nimport styled from \"styled-components\"\nimport { Link as GatsbyLink } from \"gatsby\"\n\nconst StyledGatsbyLink = styled(GatsbyLink)`\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nexport default function Link(\n  { children, href }: { children: React.ReactNode; href: string },\n) {\n  return (\n    <StyledGatsbyLink to={href}>{children}</StyledGatsbyLink>\n  )\n}\n\n","export function createWikiLink(slug: string) {\n  if (slug.startsWith('/')) return `/wiki${slug}`\n  return `/wiki/${slug}`\n}\n","export default {\n  colors: {\n    foreground: \"#333333\",\n    highlight: \"#512DA8\",\n    lowlight: \"#BDBDBD\",\n    link: \"#0D47A1\",\n    linkVisited: \"#607AA1\",\n    linkHover: \"#AF15C0\",\n    background: \"#F5F5F5\",\n    backgroundHighlight: \"#D0D0D0\",\n  },\n  fonts: {\n    body: \"-apple-system, Roboto, sans-serif, serif\",\n    heading: \"-apple-system, Roboto, sans-serif, serif\",\n  }\n}\n","/**\n * Fuse.js v6.6.2 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2022 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction isArray(value) {\n  return !Array.isArray\n    ? getTag(value) === '[object Array]'\n    : Array.isArray(value)\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\nconst INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value\n  }\n  let result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value)\n}\n\nfunction isString(value) {\n  return typeof value === 'string'\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number'\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\nfunction isBoolean(value) {\n  return (\n    value === true ||\n    value === false ||\n    (isObjectLike(value) && getTag(value) == '[object Boolean]')\n  )\n}\n\nfunction isObject(value) {\n  return typeof value === 'object'\n}\n\n// Checks if `value` is object-like.\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null\n}\n\nfunction isBlank(value) {\n  return !value.trim().length\n}\n\n// Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\nfunction getTag(value) {\n  return value == null\n    ? value === undefined\n      ? '[object Undefined]'\n      : '[object Null]'\n    : Object.prototype.toString.call(value)\n}\n\nconst EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\n\nconst INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\n\nconst LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>\n  `Invalid value for key ${key}`;\n\nconst PATTERN_LENGTH_TOO_LARGE = (max) =>\n  `Pattern length exceeds max of ${max}.`;\n\nconst MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;\n\nconst INVALID_KEY_WEIGHT_VALUE = (key) =>\n  `Property 'weight' in key '${key}' must be a positive integer`;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nclass KeyStore {\n  constructor(keys) {\n    this._keys = [];\n    this._keyMap = {};\n\n    let totalWeight = 0;\n\n    keys.forEach((key) => {\n      let obj = createKey(key);\n\n      totalWeight += obj.weight;\n\n      this._keys.push(obj);\n      this._keyMap[obj.id] = obj;\n\n      totalWeight += obj.weight;\n    });\n\n    // Normalize weights so that their sum is equal to 1\n    this._keys.forEach((key) => {\n      key.weight /= totalWeight;\n    });\n  }\n  get(keyId) {\n    return this._keyMap[keyId]\n  }\n  keys() {\n    return this._keys\n  }\n  toJSON() {\n    return JSON.stringify(this._keys)\n  }\n}\n\nfunction createKey(key) {\n  let path = null;\n  let id = null;\n  let src = null;\n  let weight = 1;\n  let getFn = null;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'))\n    }\n\n    const name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name))\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n    getFn = key.getFn;\n  }\n\n  return { path, id, weight, src, getFn }\n}\n\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.')\n}\n\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key\n}\n\nfunction get(obj, path) {\n  let list = [];\n  let arr = false;\n\n  const deepGet = (obj, path, index) => {\n    if (!isDefined(obj)) {\n      return\n    }\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      let key = path[index];\n\n      const value = obj[key];\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n      if (\n        index === path.length - 1 &&\n        (isString(value) || isNumber(value) || isBoolean(value))\n      ) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true;\n        // Search each item in the array.\n        for (let i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  };\n\n  // Backwards compatibility (since path used to be a string)\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n\n  return arr ? list : list[0]\n}\n\nconst MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\n\nconst BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: (a, b) =>\n    a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1\n};\n\nconst FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\n\nconst AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false,\n  // The weight to determine how much field length norm effects scoring.\n  fieldNormWeight: 1\n};\n\nvar Config = {\n  ...BasicOptions,\n  ...MatchOptions,\n  ...FuzzyOptions,\n  ...AdvancedOptions\n};\n\nconst SPACE = /[^ ]+/g;\n\n// Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\nfunction norm(weight = 1, mantissa = 3) {\n  const cache = new Map();\n  const m = Math.pow(10, mantissa);\n\n  return {\n    get(value) {\n      const numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens)\n      }\n\n      // Default function is 1/sqrt(x), weight makes that variable\n      const norm = 1 / Math.pow(numTokens, 0.5 * weight);\n\n      // In place of `toFixed(mantissa)`, for faster computation\n      const n = parseFloat(Math.round(norm * m) / m);\n\n      cache.set(numTokens, n);\n\n      return n\n    },\n    clear() {\n      cache.clear();\n    }\n  }\n}\n\nclass FuseIndex {\n  constructor({\n    getFn = Config.getFn,\n    fieldNormWeight = Config.fieldNormWeight\n  } = {}) {\n    this.norm = norm(fieldNormWeight, 3);\n    this.getFn = getFn;\n    this.isCreated = false;\n\n    this.setIndexRecords();\n  }\n  setSources(docs = []) {\n    this.docs = docs;\n  }\n  setIndexRecords(records = []) {\n    this.records = records;\n  }\n  setKeys(keys = []) {\n    this.keys = keys;\n    this._keysMap = {};\n    keys.forEach((key, idx) => {\n      this._keysMap[key.id] = idx;\n    });\n  }\n  create() {\n    if (this.isCreated || !this.docs.length) {\n      return\n    }\n\n    this.isCreated = true;\n\n    // List is Array<String>\n    if (isString(this.docs[0])) {\n      this.docs.forEach((doc, docIndex) => {\n        this._addString(doc, docIndex);\n      });\n    } else {\n      // List is Array<Object>\n      this.docs.forEach((doc, docIndex) => {\n        this._addObject(doc, docIndex);\n      });\n    }\n\n    this.norm.clear();\n  }\n  // Adds a doc to the end of the index\n  add(doc) {\n    const idx = this.size();\n\n    if (isString(doc)) {\n      this._addString(doc, idx);\n    } else {\n      this._addObject(doc, idx);\n    }\n  }\n  // Removes the doc at the specified index of the index\n  removeAt(idx) {\n    this.records.splice(idx, 1);\n\n    // Change ref index of every subsquent doc\n    for (let i = idx, len = this.size(); i < len; i += 1) {\n      this.records[i].i -= 1;\n    }\n  }\n  getValueForItemAtKeyId(item, keyId) {\n    return item[this._keysMap[keyId]]\n  }\n  size() {\n    return this.records.length\n  }\n  _addString(doc, docIndex) {\n    if (!isDefined(doc) || isBlank(doc)) {\n      return\n    }\n\n    let record = {\n      v: doc,\n      i: docIndex,\n      n: this.norm.get(doc)\n    };\n\n    this.records.push(record);\n  }\n  _addObject(doc, docIndex) {\n    let record = { i: docIndex, $: {} };\n\n    // Iterate over every key (i.e, path), and fetch the value at that key\n    this.keys.forEach((key, keyIndex) => {\n      let value = key.getFn ? key.getFn(doc) : this.getFn(doc, key.path);\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      if (isArray(value)) {\n        let subRecords = [];\n        const stack = [{ nestedArrIndex: -1, value }];\n\n        while (stack.length) {\n          const { nestedArrIndex, value } = stack.pop();\n\n          if (!isDefined(value)) {\n            continue\n          }\n\n          if (isString(value) && !isBlank(value)) {\n            let subRecord = {\n              v: value,\n              i: nestedArrIndex,\n              n: this.norm.get(value)\n            };\n\n            subRecords.push(subRecord);\n          } else if (isArray(value)) {\n            value.forEach((item, k) => {\n              stack.push({\n                nestedArrIndex: k,\n                value: item\n              });\n            });\n          } else ;\n        }\n        record.$[keyIndex] = subRecords;\n      } else if (isString(value) && !isBlank(value)) {\n        let subRecord = {\n          v: value,\n          n: this.norm.get(value)\n        };\n\n        record.$[keyIndex] = subRecord;\n      }\n    });\n\n    this.records.push(record);\n  }\n  toJSON() {\n    return {\n      keys: this.keys,\n      records: this.records\n    }\n  }\n}\n\nfunction createIndex(\n  keys,\n  docs,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex\n}\n\nfunction parseIndex(\n  data,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const { keys, records } = data;\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex\n}\n\nfunction computeScore$1(\n  pattern,\n  {\n    errors = 0,\n    currentLocation = 0,\n    expectedLocation = 0,\n    distance = Config.distance,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  const accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy\n  }\n\n  const proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + proximity / distance\n}\n\nfunction convertMaskToIndices(\n  matchmask = [],\n  minMatchCharLength = Config.minMatchCharLength\n) {\n  let indices = [];\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices\n}\n\n// Machine word size\nconst MAX_BITS = 32;\n\nfunction search(\n  text,\n  pattern,\n  patternAlphabet,\n  {\n    location = Config.location,\n    distance = Config.distance,\n    threshold = Config.threshold,\n    findAllMatches = Config.findAllMatches,\n    minMatchCharLength = Config.minMatchCharLength,\n    includeMatches = Config.includeMatches,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))\n  }\n\n  const patternLen = pattern.length;\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length;\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen));\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = expectedLocation;\n\n  // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n  const computeMatches = minMatchCharLength > 1 || includeMatches;\n  // A mask of the matches, used for building the indices\n  const matchMask = computeMatches ? Array(textLen) : [];\n\n  let index;\n\n  // Get all exact matches, here for speed up\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    let score = computeScore$1(pattern, {\n      currentLocation: index,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      let i = 0;\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  let lastBitArr = [];\n  let finalScore = 1;\n  let binMax = patternLen + textLen;\n\n  const mask = 1 << (patternLen - 1);\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0;\n    let binMid = binMax;\n\n    while (binMin < binMid) {\n      const score = computeScore$1(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n\n      if (score <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    let start = Math.max(1, expectedLocation - binMid + 1);\n    let finish = findAllMatches\n      ? textLen\n      : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << i) - 1;\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1;\n      let charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (i) {\n        bitArr[j] |=\n          ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore$1(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance,\n          ignoreLocation\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = computeScore$1(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  const result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    const indices = convertMaskToIndices(matchMask, minMatchCharLength);\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result\n}\n\nfunction createPatternAlphabet(pattern) {\n  let mask = {};\n\n  for (let i = 0, len = pattern.length; i < len; i += 1) {\n    const char = pattern.charAt(i);\n    mask[char] = (mask[char] || 0) | (1 << (len - i - 1));\n  }\n\n  return mask\n}\n\nclass BitapSearch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    this.options = {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return\n    }\n\n    const addChunk = (pattern, startIndex) => {\n      this.chunks.push({\n        pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex\n      });\n    };\n\n    const len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      let i = 0;\n      const remainder = len % MAX_BITS;\n      const end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        const startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  searchIn(text) {\n    const { isCaseSensitive, includeMatches } = this.options;\n\n    if (!isCaseSensitive) {\n      text = text.toLowerCase();\n    }\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      };\n\n      if (includeMatches) {\n        result.indices = [[0, text.length - 1]];\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      ignoreLocation\n    } = this.options;\n\n    let allIndices = [];\n    let totalScore = 0;\n    let hasMatches = false;\n\n    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {\n      const { isMatch, score, indices } = search(text, pattern, alphabet, {\n        location: location + startIndex,\n        distance,\n        threshold,\n        findAllMatches,\n        minMatchCharLength,\n        includeMatches,\n        ignoreLocation\n      });\n\n      if (isMatch) {\n        hasMatches = true;\n      }\n\n      totalScore += score;\n\n      if (isMatch && indices) {\n        allIndices = [...allIndices, ...indices];\n      }\n    });\n\n    let result = {\n      isMatch: hasMatches,\n      score: hasMatches ? totalScore / this.chunks.length : 1\n    };\n\n    if (hasMatches && includeMatches) {\n      result.indices = allIndices;\n    }\n\n    return result\n  }\n}\n\nclass BaseMatch {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n  static isMultiMatch(pattern) {\n    return getMatch(pattern, this.multiRegex)\n  }\n  static isSingleMatch(pattern) {\n    return getMatch(pattern, this.singleRegex)\n  }\n  search(/*text*/) {}\n}\n\nfunction getMatch(pattern, exp) {\n  const matches = pattern.match(exp);\n  return matches ? matches[1] : null\n}\n\n// Token: 'file\n\nclass ExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'exact'\n  }\n  static get multiRegex() {\n    return /^=\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^=(.*)$/\n  }\n  search(text) {\n    const isMatch = text === this.pattern;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !fire\n\nclass InverseExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!(.*)$/\n  }\n  search(text) {\n    const index = text.indexOf(this.pattern);\n    const isMatch = index === -1;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: ^file\n\nclass PrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'prefix-exact'\n  }\n  static get multiRegex() {\n    return /^\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !^fire\n\nclass InversePrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-prefix-exact'\n  }\n  static get multiRegex() {\n    return /^!\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = !text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: .file$\n\nclass SuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'suffix-exact'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = text.endsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [text.length - this.pattern.length, text.length - 1]\n    }\n  }\n}\n\n// Token: !.file$\n\nclass InverseSuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-suffix-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^!(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = !text.endsWith(this.pattern);\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\nclass FuzzyMatch extends BaseMatch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    super(pattern);\n    this._bitapSearch = new BitapSearch(pattern, {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    });\n  }\n  static get type() {\n    return 'fuzzy'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^(.*)$/\n  }\n  search(text) {\n    return this._bitapSearch.searchIn(text)\n  }\n}\n\n// Token: 'file\n\nclass IncludeMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'include'\n  }\n  static get multiRegex() {\n    return /^'\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^'(.*)$/\n  }\n  search(text) {\n    let location = 0;\n    let index;\n\n    const indices = [];\n    const patternLen = this.pattern.length;\n\n    // Get all exact matches\n    while ((index = text.indexOf(this.pattern, location)) > -1) {\n      location = index + patternLen;\n      indices.push([index, location - 1]);\n    }\n\n    const isMatch = !!indices.length;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices\n    }\n  }\n}\n\n// ❗Order is important. DO NOT CHANGE.\nconst searchers = [\n  ExactMatch,\n  IncludeMatch,\n  PrefixExactMatch,\n  InversePrefixExactMatch,\n  InverseSuffixExactMatch,\n  SuffixExactMatch,\n  InverseExactMatch,\n  FuzzyMatch\n];\n\nconst searchersLen = searchers.length;\n\n// Regex to split by spaces, but keep anything in quotes together\nconst SPACE_RE = / +(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nconst OR_TOKEN = '|';\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nfunction parseQuery(pattern, options = {}) {\n  return pattern.split(OR_TOKEN).map((item) => {\n    let query = item\n      .trim()\n      .split(SPACE_RE)\n      .filter((item) => item && !!item.trim());\n\n    let results = [];\n    for (let i = 0, len = query.length; i < len; i += 1) {\n      const queryItem = query[i];\n\n      // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n      let found = false;\n      let idx = -1;\n      while (!found && ++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isMultiMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue\n      }\n\n      // 2. Handle single query matches (i.e, once that are *not* quoted)\n      idx = -1;\n      while (++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isSingleMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          break\n        }\n      }\n    }\n\n    return results\n  })\n}\n\n// These extended matchers can return an array of matches, as opposed\n// to a singl match\nconst MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass ExtendedSearch {\n  constructor(\n    pattern,\n    {\n      isCaseSensitive = Config.isCaseSensitive,\n      includeMatches = Config.includeMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      ignoreLocation = Config.ignoreLocation,\n      findAllMatches = Config.findAllMatches,\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance\n    } = {}\n  ) {\n    this.query = null;\n    this.options = {\n      isCaseSensitive,\n      includeMatches,\n      minMatchCharLength,\n      findAllMatches,\n      ignoreLocation,\n      location,\n      threshold,\n      distance\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  static condition(_, options) {\n    return options.useExtendedSearch\n  }\n\n  searchIn(text) {\n    const query = this.query;\n\n    if (!query) {\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n\n    const { includeMatches, isCaseSensitive } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n\n    let numMatches = 0;\n    let allIndices = [];\n    let totalScore = 0;\n\n    // ORs\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n      const searchers = query[i];\n\n      // Reset indices\n      allIndices.length = 0;\n      numMatches = 0;\n\n      // ANDs\n      for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {\n        const searcher = searchers[j];\n        const { isMatch, indices, score } = searcher.search(text);\n\n        if (isMatch) {\n          numMatches += 1;\n          totalScore += score;\n          if (includeMatches) {\n            const type = searcher.constructor.type;\n            if (MultiMatchSet.has(type)) {\n              allIndices = [...allIndices, ...indices];\n            } else {\n              allIndices.push(indices);\n            }\n          }\n        } else {\n          totalScore = 0;\n          numMatches = 0;\n          allIndices.length = 0;\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (numMatches) {\n        let result = {\n          isMatch: true,\n          score: totalScore / numMatches\n        };\n\n        if (includeMatches) {\n          result.indices = allIndices;\n        }\n\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n}\n\nconst registeredSearchers = [];\n\nfunction register(...args) {\n  registeredSearchers.push(...args);\n}\n\nfunction createSearcher(pattern, options) {\n  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    let searcherClass = registeredSearchers[i];\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options)\n    }\n  }\n\n  return new BitapSearch(pattern, options)\n}\n\nconst LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\n\nconst KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nconst isExpression = (query) =>\n  !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n\nconst isPath = (query) => !!query[KeyType.PATH];\n\nconst isLeaf = (query) =>\n  !isArray(query) && isObject(query) && !isExpression(query);\n\nconst convertToExplicit = (query) => ({\n  [LogicalOperator.AND]: Object.keys(query).map((key) => ({\n    [key]: query[key]\n  }))\n});\n\n// When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\nfunction parse(query, options, { auto = true } = {}) {\n  const next = (query) => {\n    let keys = Object.keys(query);\n\n    const isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query))\n    }\n\n    if (isLeaf(query)) {\n      const key = isQueryPath ? query[KeyType.PATH] : keys[0];\n\n      const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))\n      }\n\n      const obj = {\n        keyId: createKeyId(key),\n        pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj\n    }\n\n    let node = {\n      children: [],\n      operator: keys[0]\n    };\n\n    keys.forEach((key) => {\n      const value = query[key];\n\n      if (isArray(value)) {\n        value.forEach((item) => {\n          node.children.push(next(item));\n        });\n      }\n    });\n\n    return node\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query)\n}\n\n// Practical scoring function\nfunction computeScore(\n  results,\n  { ignoreFieldNorm = Config.ignoreFieldNorm }\n) {\n  results.forEach((result) => {\n    let totalScore = 1;\n\n    result.matches.forEach(({ key, norm, score }) => {\n      const weight = key ? key.weight : null;\n\n      totalScore *= Math.pow(\n        score === 0 && weight ? Number.EPSILON : score,\n        (weight || 1) * (ignoreFieldNorm ? 1 : norm)\n      );\n    });\n\n    result.score = totalScore;\n  });\n}\n\nfunction transformMatches(result, data) {\n  const matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return\n  }\n\n  matches.forEach((match) => {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return\n    }\n\n    const { indices, value } = match;\n\n    let obj = {\n      indices,\n      value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction format(\n  results,\n  docs,\n  {\n    includeMatches = Config.includeMatches,\n    includeScore = Config.includeScore\n  } = {}\n) {\n  const transformers = [];\n\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n\n  return results.map((result) => {\n    const { idx } = result;\n\n    const data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach((transformer) => {\n        transformer(result, data);\n      });\n    }\n\n    return data\n  })\n}\n\nclass Fuse {\n  constructor(docs, options = {}, index) {\n    this.options = { ...Config, ...options };\n\n    if (\n      this.options.useExtendedSearch &&\n      !true\n    ) {\n      throw new Error(EXTENDED_SEARCH_UNAVAILABLE)\n    }\n\n    this._keyStore = new KeyStore(this.options.keys);\n\n    this.setCollection(docs, index);\n  }\n\n  setCollection(docs, index) {\n    this._docs = docs;\n\n    if (index && !(index instanceof FuseIndex)) {\n      throw new Error(INCORRECT_INDEX_TYPE)\n    }\n\n    this._myIndex =\n      index ||\n      createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn,\n        fieldNormWeight: this.options.fieldNormWeight\n      });\n  }\n\n  add(doc) {\n    if (!isDefined(doc)) {\n      return\n    }\n\n    this._docs.push(doc);\n    this._myIndex.add(doc);\n  }\n\n  remove(predicate = (/* doc, idx */) => false) {\n    const results = [];\n\n    for (let i = 0, len = this._docs.length; i < len; i += 1) {\n      const doc = this._docs[i];\n      if (predicate(doc, i)) {\n        this.removeAt(i);\n        i -= 1;\n        len -= 1;\n\n        results.push(doc);\n      }\n    }\n\n    return results\n  }\n\n  removeAt(idx) {\n    this._docs.splice(idx, 1);\n    this._myIndex.removeAt(idx);\n  }\n\n  getIndex() {\n    return this._myIndex\n  }\n\n  search(query, { limit = -1 } = {}) {\n    const {\n      includeMatches,\n      includeScore,\n      shouldSort,\n      sortFn,\n      ignoreFieldNorm\n    } = this.options;\n\n    let results = isString(query)\n      ? isString(this._docs[0])\n        ? this._searchStringList(query)\n        : this._searchObjectList(query)\n      : this._searchLogical(query);\n\n    computeScore(results, { ignoreFieldNorm });\n\n    if (shouldSort) {\n      results.sort(sortFn);\n    }\n\n    if (isNumber(limit) && limit > -1) {\n      results = results.slice(0, limit);\n    }\n\n    return format(results, this._docs, {\n      includeMatches,\n      includeScore\n    })\n  }\n\n  _searchStringList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { records } = this._myIndex;\n    const results = [];\n\n    // Iterate over every string in the index\n    records.forEach(({ v: text, i: idx, n: norm }) => {\n      if (!isDefined(text)) {\n        return\n      }\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        results.push({\n          item: text,\n          idx,\n          matches: [{ score, value: text, norm, indices }]\n        });\n      }\n    });\n\n    return results\n  }\n\n  _searchLogical(query) {\n\n    const expression = parse(query, this.options);\n\n    const evaluate = (node, item, idx) => {\n      if (!node.children) {\n        const { keyId, searcher } = node;\n\n        const matches = this._findMatches({\n          key: this._keyStore.get(keyId),\n          value: this._myIndex.getValueForItemAtKeyId(item, keyId),\n          searcher\n        });\n\n        if (matches && matches.length) {\n          return [\n            {\n              idx,\n              item,\n              matches\n            }\n          ]\n        }\n\n        return []\n      }\n\n      const res = [];\n      for (let i = 0, len = node.children.length; i < len; i += 1) {\n        const child = node.children[i];\n        const result = evaluate(child, item, idx);\n        if (result.length) {\n          res.push(...result);\n        } else if (node.operator === LogicalOperator.AND) {\n          return []\n        }\n      }\n      return res\n    };\n\n    const records = this._myIndex.records;\n    const resultMap = {};\n    const results = [];\n\n    records.forEach(({ $: item, i: idx }) => {\n      if (isDefined(item)) {\n        let expResults = evaluate(expression, item, idx);\n\n        if (expResults.length) {\n          // Dedupe when adding\n          if (!resultMap[idx]) {\n            resultMap[idx] = { idx, item, matches: [] };\n            results.push(resultMap[idx]);\n          }\n          expResults.forEach(({ matches }) => {\n            resultMap[idx].matches.push(...matches);\n          });\n        }\n      }\n    });\n\n    return results\n  }\n\n  _searchObjectList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { keys, records } = this._myIndex;\n    const results = [];\n\n    // List is Array<Object>\n    records.forEach(({ $: item, i: idx }) => {\n      if (!isDefined(item)) {\n        return\n      }\n\n      let matches = [];\n\n      // Iterate over every key (i.e, path), and fetch the value at that key\n      keys.forEach((key, keyIndex) => {\n        matches.push(\n          ...this._findMatches({\n            key,\n            value: item[keyIndex],\n            searcher\n          })\n        );\n      });\n\n      if (matches.length) {\n        results.push({\n          idx,\n          item,\n          matches\n        });\n      }\n    });\n\n    return results\n  }\n  _findMatches({ key, value, searcher }) {\n    if (!isDefined(value)) {\n      return []\n    }\n\n    let matches = [];\n\n    if (isArray(value)) {\n      value.forEach(({ v: text, i: idx, n: norm }) => {\n        if (!isDefined(text)) {\n          return\n        }\n\n        const { isMatch, score, indices } = searcher.searchIn(text);\n\n        if (isMatch) {\n          matches.push({\n            score,\n            key,\n            value: text,\n            idx,\n            norm,\n            indices\n          });\n        }\n      });\n    } else {\n      const { v: text, n: norm } = value;\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        matches.push({ score, key, value: text, norm, indices });\n      }\n    }\n\n    return matches\n  }\n}\n\nFuse.version = '6.6.2';\nFuse.createIndex = createIndex;\nFuse.parseIndex = parseIndex;\nFuse.config = Config;\n\n{\n  Fuse.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\nexport { Fuse as default };\n","import * as React from \"react\"\nimport styled from \"styled-components\"\nimport device from \"../../../constants/device\"\n\nconst Container = styled.div`\n  --height-offset: 3rem;\n\n  display: grid;\n  grid-template-areas: \"margin main side\";\n  padding-top: var(--height-offset);\n\n  @media (${device.larger}) {\n    grid-template-columns: 0.3fr 3fr 1fr;\n  }\n`\n\nconst Main = styled.div`\n  display: grid;\n  grid-area: main;\n  width: 100%;\n  padding: 0 1rem;\n`\n\nconst Side = styled.div`\n  display: none;\n  grid-area: side;\n  grid-area: side;\n  position: sticky;\n  top: 0;\n  max-height: calc(100vh - var(--height-offset));\n  padding: 1rem 1rem;\n  overflow-y: auto;\n\n  @media (${device.larger}) {\n    display: block;\n  }\n`\n\nconst Margin = styled.div`\n  display: none;\n  grid-area: margin;\n\n  @media (${device.larger}) {\n    display: block;\n  }\n`\n\nexport default function PageLayout({\n  children,\n}: {\n  children: React.ReactNode | React.ReactNode[];\n}) {\n  const [main, side] = Array.isArray(children)\n    ? [children[0], children.slice(1)]\n    : [children, null]\n  return (\n    <Container>\n      {side && <Margin />}\n      <Main>{main}</Main>\n      {side && <Side>{side}</Side>}\n    </Container>\n  )\n}\n"],"names":["larger","mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","src_exports","target","all","name","__export","default","src_default","useFusejs","useGatsbyPluginFusejs","module","exports","value","import_fuse","isNodeMode","__esModule","__toESM","import_react","query","data","index","fuseOpts","parseOpts","searchOpts","instance","setInstance","useState","useEffect","inst","parseIndex","useMemo","search","fusejs","JSON","parse","Container","styled","div","withConfig","displayName","componentId","LogoFrame","iframe","HomeLogo","React","src","InputBorder","Input","input","SearchBox","_ref","onChange","holder","type","e","placeholder","P","p","ColorfulParagraph","children","S","small","theme","colors","foreground","Small","link","CatalogTable","table","WikiList","items","fallback","hasItems","length","console","log","map","item","i","Link","href","path","title","head","Counter","fonts","body","SearchBoxContainer","Home","setQuery","PageLayout","WikiCatalog","IndexPage","allItems","allFile","nodes","concat","_ref2","_fields$gitLogs","_fields$gitLogs$at","_childMarkdownRemark$","_childMarkdownRemark$2","_childMarkdownRemark$3","_childMarkdownRemark$4","_childMarkdownRemark$5","_childMarkdownRemark$6","_childMarkdownRemark$7","_childMarkdownRemark$8","childMarkdownRemark","fields","gitLogLatestDate","gitLogs","at","date","lastModified","Date","undefined","created","frontmatter","createWikiLink","slug","headings","sort","a","b","_a$lastModified$getTi","_a$lastModified","_b$lastModified$getTi","_b$lastModified","aa","getTime","setItems","result","it","_it$item$title","_it$item$head","mapSearchResultToWikiItem","Head","StyledGatsbyLink","GatsbyLink","startsWith","highlight","lowlight","linkVisited","linkHover","background","backgroundHighlight","heading","isArray","Array","getTag","isString","isNumber","isBoolean","isObject","isObjectLike","isDefined","isBlank","trim","toString","hasOwn","KeyStore","constructor","keys","this","_keys","_keyMap","totalWeight","forEach","obj","createKey","weight","push","id","keyId","toJSON","stringify","getFn","createKeyPath","createKeyId","Error","MISSING_KEY_PROPERTY","INVALID_KEY_WEIGHT_VALUE","split","join","Config","isCaseSensitive","includeScore","shouldSort","sortFn","score","idx","includeMatches","findAllMatches","minMatchCharLength","location","threshold","distance","useExtendedSearch","list","arr","deepGet","baseToString","len","ignoreLocation","ignoreFieldNorm","fieldNormWeight","SPACE","FuseIndex","norm","mantissa","cache","Map","m","Math","pow","numTokens","match","has","n","parseFloat","round","set","clear","isCreated","setIndexRecords","setSources","docs","records","setKeys","_keysMap","doc","docIndex","_addString","_addObject","add","size","removeAt","splice","getValueForItemAtKeyId","record","v","$","keyIndex","subRecords","stack","nestedArrIndex","pop","subRecord","k","createIndex","myIndex","computeScore$1","pattern","errors","currentLocation","expectedLocation","accuracy","proximity","abs","MAX_BITS","text","patternAlphabet","patternLen","textLen","max","min","currentThreshold","bestLocation","computeMatches","matchMask","indexOf","lastBitArr","finalScore","binMax","mask","binMin","binMid","floor","start","finish","bitArr","j","charMatch","charAt","isMatch","indices","matchmask","end","convertMaskToIndices","createPatternAlphabet","char","BitapSearch","options","toLowerCase","chunks","addChunk","startIndex","alphabet","remainder","substr","searchIn","allIndices","totalScore","hasMatches","BaseMatch","isMultiMatch","getMatch","multiRegex","isSingleMatch","singleRegex","exp","matches","FuzzyMatch","super","_bitapSearch","IncludeMatch","searchers","endsWith","searchersLen","SPACE_RE","MultiMatchSet","Set","ExtendedSearch","filter","results","queryItem","found","searcher","token","parseQuery","condition","_","numMatches","qLen","pLen","registeredSearchers","createSearcher","searcherClass","LogicalOperator","KeyType","isExpression","convertToExplicit","auto","next","isQueryPath","isPath","isLeaf","LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY","node","operator","transformMatches","refIndex","transformScore","Fuse","_keyStore","setCollection","_docs","_myIndex","remove","predicate","getIndex","limit","_searchStringList","_searchObjectList","_searchLogical","Number","EPSILON","computeScore","slice","transformers","transformer","format","expression","evaluate","_findMatches","res","child","resultMap","expResults","version","config","args","register","device","Main","Side","Margin","main","side"],"sourceRoot":""}