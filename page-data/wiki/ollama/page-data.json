{"componentChunkName":"component---src-components-gatsby-templates-wiki-tsx","path":"/wiki/ollama/","result":{"data":{"file":{"fields":{"gitLogs":[{"hash":"087fdb525eff65a5bcc1774e449b7e9380f3535c","date":"2024-08-27T11:21:35Z"},{"hash":"f2c7bd0afc3e4be46ee4c50a6d2301c6b6f19086","date":"2024-08-25T05:40:05Z"},{"hash":"42ef2612bb2d076fc478b6e3f1e17d220e14ed52","date":"2024-08-25T05:39:04Z"},{"hash":"034f4cab871ff49e58aafa590c7a262e12992cbe","date":"2024-08-25T05:28:08Z"}]},"childMarkdownRemark":{"headings":[{"value":"Ollama"}],"fields":{"slug":"/ollama/","relatedDocs":[{"slug":"javascript","similarity":0.5757007472},{"slug":"web","similarity":0.5875957976},{"slug":"2016-08-27-gdg-webtech-workshop-nnn","similarity":0.5937558799},{"slug":"crontab","similarity":0.5227789244},{"slug":"gradle","similarity":0.4697652787},{"slug":"idea-methodology","similarity":0.5279452626},{"slug":"podman","similarity":0.3456115409},{"slug":"2016-11-16-google-campus-two-things-you-must-keep-in-google-play","similarity":0.5503148907},{"slug":"spring-framework","similarity":0.5887279551},{"slug":"aws","similarity":0.4709919567},{"slug":"git","similarity":0.483142051},{"slug":"algorithm-practice","similarity":0.459796023},{"slug":"docker","similarity":0.5022662316},{"slug":"scp","similarity":0.3316735939},{"slug":"mac-os","similarity":0.5351269307},{"slug":"testing","similarity":0.5252582415},{"slug":"machine-learning","similarity":0.6169646355},{"slug":"devops","similarity":0.3945403581},{"slug":"python","similarity":0.4908478048},{"slug":"object-oriented-programming","similarity":0.564046142},{"slug":"linux","similarity":0.3327651117},{"slug":"sfml","similarity":0.4566769179},{"slug":"windows","similarity":0.463790362},{"slug":"markdown","similarity":0.4981299862},{"slug":"cat-logic","similarity":0.5673940654},{"slug":"vuejs","similarity":0.3936592398},{"slug":"shell","similarity":0.5943459375},{"slug":"html","similarity":0.5419258494},{"slug":"vimenter-2023","similarity":0.467633697},{"slug":"data-analysis","similarity":0.5618082519},{"slug":"hardware","similarity":0.3110284306},{"slug":"programming-convention","similarity":0.4314695111},{"slug":"webgl","similarity":0.4641339926},{"slug":"sentry","similarity":0.3888791594},{"slug":"valve","similarity":0.3242567302},{"slug":"security","similarity":0.3853010834},{"slug":"reactjs","similarity":0.571921481},{"slug":"airflow","similarity":0.3877027769},{"slug":"computer-graphics","similarity":0.3442242994},{"slug":"elasticsearch","similarity":0.5532563731},{"slug":"unicode","similarity":0.4150070461},{"slug":"logging","similarity":0.4810263127},{"slug":"tools","similarity":0.5963685364},{"slug":"programming-paradigm","similarity":0.5629223726},{"slug":"system-failures","similarity":0.3978968476},{"slug":"company","similarity":0.4221142198},{"slug":"amazon-redshift","similarity":0.3156670014},{"slug":"inspiration","similarity":0.4315799797},{"slug":"gatsbyjs","similarity":0.539827663},{"slug":"design-pattern","similarity":0.5489187628},{"slug":"tmux","similarity":0.4863072358},{"slug":"game","similarity":0.4430100287},{"slug":"kubernetes","similarity":0.3727911085},{"slug":"nodejs","similarity":0.590470409},{"slug":"continuous-integration-and-deployment","similarity":0.3473458692},{"slug":"rust","similarity":0.5428981277},{"slug":"book","similarity":0.3597089525},{"slug":"jetbrains","similarity":0.4904682184},{"slug":"quotation","similarity":0.3685547873},{"slug":"postgresql","similarity":0.4447617364},{"slug":"jira","similarity":0.3992137721},{"slug":"large-language-model","similarity":0.6660392817},{"slug":"swagger","similarity":0.3994155347},{"slug":"architecture","similarity":0.5614367128},{"slug":"godot","similarity":0.4739027729},{"slug":"curl","similarity":0.5757412911},{"slug":"unity3d","similarity":0.5156379904},{"slug":"jargon","similarity":0.5174719922},{"slug":"language-server-protocol","similarity":0.3825679041},{"slug":"clean-code","similarity":0.5202508874},{"slug":"java","similarity":0.5365322792},{"slug":"windows-subsystem-for-linux","similarity":0.5067247772},{"slug":"test-driven-development","similarity":0.3018277132},{"slug":"philosophy","similarity":0.5357873697},{"slug":"github","similarity":0.5622040782},{"slug":"network","similarity":0.3978519061},{"slug":"ollama","similarity":1},{"slug":"kotlin","similarity":0.5405621195},{"slug":"c-sharp","similarity":0.4018218212},{"slug":"angularjs","similarity":0.553787291},{"slug":"treesitter","similarity":0.4371238181},{"slug":"vim","similarity":0.4935480174},{"slug":"ionic-framework","similarity":0.4470357129},{"slug":"physics","similarity":0.4426670204},{"slug":"html-canvas","similarity":0.3949770185},{"slug":"reverse-engineering","similarity":0.421956302},{"slug":"space","similarity":0.3774373043},{"slug":"css","similarity":0.5006819716},{"slug":"code-review","similarity":0.5602720763},{"slug":"software-development","similarity":0.5255059044},{"slug":"database","similarity":0.5081521537},{"slug":"reactive-extensions","similarity":0.3309026197},{"slug":"redis","similarity":0.3356781284},{"slug":"mail","similarity":0.3274347875},{"slug":"experience-review","similarity":0.4079306301},{"slug":"google-analytics","similarity":0.4325681998},{"slug":"data-structure","similarity":0.4221643242},{"slug":"vimwiki","similarity":0.4598568944},{"slug":"embeddings","similarity":0.4862590262},{"slug":"추론 애플리케이션","similarity":0.4347709919}]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#ollama\">Ollama</a></p>\n<ul>\n<li>\n<p><a href=\"#docker%EB%A1%9C-ollama-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\">Docker로 Ollama 시작하기</a></p>\n</li>\n<li>\n<p><a href=\"#ollama-tool-calling\">Ollama tool-calling</a></p>\n<ul>\n<li><a href=\"#tool-calling-%EC%98%88%EC%A0%9C\">tool-calling 예제</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"ollama\" style=\"position:relative;\"><a href=\"#ollama\" aria-label=\"ollama permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ollama</h1>\n<p>Ollama는 LLM을 로컬에서 쉽게 사용할 수 있게 만든 도구다.</p>\n<p><a href=\"https://github.com/ollama/ollama\">https://github.com/ollama/ollama</a></p>\n<p>cli와 <a href=\"../python\">python</a> 라이브러리를 제공한다.\n간단한 모델 테스트 정도는 cli로 확인하고, Ollama로 AI Assistant를 만드는 용도로 라이브러리를 사용하면 된다.</p>\n<ol>\n<li><a href=\"https://github.com/ollama/ollama\">ollama</a> binary</li>\n<li>cli 클라이언트와 서버를 제공</li>\n<li><code class=\"language-text\">114343</code> 포트로 http 서버 제공</li>\n<li>cli, rest api로 서버 제어 및 모델 다운로드, 실행 가능</li>\n<li><a href=\"https://github.com/ollama/ollama\">ollama-python</a> 라이브러리</li>\n<li>Python으로 Ollama를 사용하는 라이브러리</li>\n</ol>\n<h2 id=\"docker로-ollama-시작하기\" style=\"position:relative;\"><a href=\"#docker%EB%A1%9C-ollama-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" aria-label=\"docker로 ollama 시작하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker로 Ollama 시작하기</h2>\n<p>모델 저장소를 제공하여, 유명한 모델이나 다른 사람이 커스텀한 모델을 쉽게 다운받아 사용할 수 있다.\n<a href=\"https://ollama.com/\">홈페이지</a>에서 검색할 수 있다.</p>\n<p>실행은 Docker로 하자:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">-v</span> ollama:/root/.ollama <span class=\"token parameter variable\">-p</span> <span class=\"token number\">11434</span>:11434 <span class=\"token parameter variable\">--name</span> ollama ollama/ollama</code></pre></div>\n<p>GPU를 사용할 수 있지만 나는 WSL2 환경에서 실행하지 못하고 있다:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--gpus</span><span class=\"token operator\">=</span>all <span class=\"token parameter variable\">-v</span> ollama:/root/.ollama <span class=\"token parameter variable\">-p</span> <span class=\"token number\">11434</span>:11434 <span class=\"token parameter variable\">--name</span> ollama ollama/ollama</code></pre></div>\n<p>백그라운드로 실행해 두고, <a href=\"../shell\">shell</a>에서 실행해보자:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-ti</span> ollama ollama run llama2\npulling manifest\npulling 8934d96d3f08<span class=\"token punctuation\">..</span>. <span class=\"token number\">100</span>% ▕█████████████████████████████████████████████████████▏ <span class=\"token number\">3.8</span> GB\npulling 8c17c2ebb0ea<span class=\"token punctuation\">..</span>. <span class=\"token number\">100</span>% ▕█████████████████████████████████████████████████████▏ <span class=\"token number\">7.0</span> KB\npulling 7c23fb36d801<span class=\"token punctuation\">..</span>. <span class=\"token number\">100</span>% ▕█████████████████████████████████████████████████████▏ <span class=\"token number\">4.8</span> KB\npulling 2e0493f67d0c<span class=\"token punctuation\">..</span>. <span class=\"token number\">100</span>% ▕█████████████████████████████████████████████████████▏   <span class=\"token number\">59</span> B\npulling fa304d675061<span class=\"token punctuation\">..</span>. <span class=\"token number\">100</span>% ▕█████████████████████████████████████████████████████▏   <span class=\"token number\">91</span> B\npulling 42ba7f8a01dd<span class=\"token punctuation\">..</span>. <span class=\"token number\">100</span>% ▕█████████████████████████████████████████████████████▏  <span class=\"token number\">557</span> B\nverifying sha256 digest\nwriting manifest\nremoving any unused layers\nsuccess\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> hi?\nHello<span class=\"token operator\">!</span> It's <span class=\"token function\">nice</span> to meet you. Is there something I can <span class=\"token builtin class-name\">help</span> you with or would you like to chat?</code></pre></div>\n<p><code class=\"language-text\">ollama run &lt;LLM></code>으로만 실행해도 모델 다운로드 후 바로 대화할 수 있다.</p>\n<h2 id=\"ollama-tool-calling\" style=\"position:relative;\"><a href=\"#ollama-tool-calling\" aria-label=\"ollama tool calling permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ollama tool-calling</h2>\n<p>2024년 7월 26일, <a href=\"https://github.com/ollama/ollama/releases/tag/v0.3.0\">0.3.0 버전</a>을 출시하면서 tool-calling 기능이 추가되었다.\n<a href=\"../large-language-model#phidata\">phidata</a>의 tools 기능과 같은 기능이다.\nphidata는 python 함수의 docstring을 명세하면 프롬프트에 자동으로 추가해 주는 반면에,\nollama는 tool 정보를 따로 명세해야 한다.</p>\n<p>사용자가 정의한 함수를 AI 모델에 알려주면, AI가 자연어로 된 답변 대신 함수 호출을 위한 규격화된 정보를 응답한다.\n즉, 함수를 Ollama가 호출해 주는 것은 아니고, 함수(도구) 이름과 인자를 응답에 포함시키는 것이다.\n이 정보를 이용해 함수를 호출하는 프로세스를 구현하고, 그 결과를 다시 AI에 전달하여 최종 답변을 얻는다.</p>\n<p>공식 문서는 파이썬 예제는 다음과 같다.\n날씨를 가져오는 도구를 정의하고, 토론토의 날씨를 물어보는 예제다.\n도구를 직접 실행하지 않으므로 구현은 필요하지 않다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> ollama\n\nresponse <span class=\"token operator\">=</span> ollama.chat<span class=\"token punctuation\">(</span>\n    <span class=\"token assign-left variable\">model</span><span class=\"token operator\">=</span><span class=\"token string\">'llama3.1'</span>,\n    <span class=\"token assign-left variable\">messages</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">'role'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'user'</span>, <span class=\"token string\">'content'</span><span class=\"token builtin class-name\">:</span> \n        <span class=\"token string\">'What is the weather in Toronto?'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>,\n\n    <span class=\"token comment\"># provide a weather checking tool to the model</span>\n    <span class=\"token assign-left variable\">tools</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'type'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'function'</span>,\n      <span class=\"token string\">'function'</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'name'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'get_current_weather'</span>,\n        <span class=\"token string\">'description'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'Get the current weather for a city'</span>,\n        <span class=\"token string\">'parameters'</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token string\">'type'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'object'</span>,\n          <span class=\"token string\">'properties'</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">'city'</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token string\">'type'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'string'</span>,\n              <span class=\"token string\">'description'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'The name of the city'</span>,\n            <span class=\"token punctuation\">}</span>,\n          <span class=\"token punctuation\">}</span>,\n          <span class=\"token string\">'required'</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'city'</span><span class=\"token punctuation\">]</span>,\n        <span class=\"token punctuation\">}</span>,\n      <span class=\"token punctuation\">}</span>,\n    <span class=\"token punctuation\">}</span>,\n  <span class=\"token punctuation\">]</span>,\n<span class=\"token punctuation\">)</span>\n\nprint<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">[</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위 코드를 실행하면 응답과 함께 도구 호출 정보를 일련의 양식으로 응답한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'role'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'assistant'</span>,\n  <span class=\"token string\">'content'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">''</span>,\n  <span class=\"token string\">'tool_calls'</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'function'</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'name'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'get_current_weather'</span>,\n        <span class=\"token string\">'arguments'</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token string\">'city'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'Toronto'</span>,\n        <span class=\"token punctuation\">}</span>,\n      <span class=\"token punctuation\">}</span>,\n    <span class=\"token punctuation\">}</span>,\n  <span class=\"token punctuation\">]</span>,\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 양식으로 함수를 실행하는 것은 사용자가 구현한다.\n<a href=\"https://github.com/ollama/ollama-python/blob/main/examples/tools/main.py\">파이썬으로 작성된 공식 예제</a>가 있으니 참고하자.\n함수 호출까지 구현하는 것이 번거로워 보이지만, 모듈화를 잘 해두면 편리하게 사용할 수 있을 거 같다.\n특이한 점은, 도구 사용 응답인 경우 챗 응답은 비어있다.\n그래서 함수 반환값을 <code class=\"language-text\">role=tool</code>로 설정하고, <code class=\"language-text\">이전 프롬프트</code> + <code class=\"language-text\">이전 응답</code> + <code class=\"language-text\">함수 반환값</code>를 다시 AI에 전달하여 최종 응답을 얻는 프로세스로 되어있다.\n컨텍스트를 유지하기 위한 방식인 모양이다.</p>\n<p><a href=\"https://ollama.com/blog/tool-support\">설명에 따르면</a>, 특정 모델만 지원한다.\nOllama 공식 홈페이지의 <a href=\"https://ollama.com/search?c=tools\">모델 목록</a>에서 <code class=\"language-text\">tools</code> 카테고리를 확인하면 된다.</p>\n<hr>\n<p>도커로 위 예제를 실행할 환경을 구축하려면.</p>\n<ol>\n<li>ollama 실행: <code class=\"language-text\">docker run -d -v ollama:/root/.ollama -p 11434:11434 --name ollama ollama/ollama</code></li>\n<li>Llama 3.1 모델 다운로드: <code class=\"language-text\">docker exec -ti ollama ollama run llama3.1</code></li>\n<li>Ollama python dependency 설치: <code class=\"language-text\">pip install ollama</code></li>\n</ol>\n<h3 id=\"tool-calling-예제\" style=\"position:relative;\"><a href=\"#tool-calling-%EC%98%88%EC%A0%9C\" aria-label=\"tool calling 예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tool-calling 예제</h3>\n<p>공식 예제를 참고하여, 웹 페이지를 요약하는 도구를 만들어 보았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Sequence\n\n<span class=\"token keyword\">import</span> ollama\n<span class=\"token keyword\">import</span> requests\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[tool] Making GET request to'</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text\n\n\navailable_functions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'get'</span><span class=\"token punctuation\">:</span> get<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nmessages<span class=\"token punctuation\">:</span> Sequence<span class=\"token punctuation\">[</span>ollama<span class=\"token punctuation\">.</span>Message<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span><span class=\"token string\">'role'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Summarize this page: \"https://www.reddit.com/r/pathofexile/comments/1exyavx/325_updated_guide_to_recombinators/\"'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n\nresponse <span class=\"token operator\">=</span> ollama<span class=\"token punctuation\">.</span>chat<span class=\"token punctuation\">(</span>\n    model<span class=\"token operator\">=</span><span class=\"token string\">'llama3.1'</span><span class=\"token punctuation\">,</span>\n    messages<span class=\"token operator\">=</span>messages<span class=\"token punctuation\">,</span>\n    tools<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">'type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'function'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Make a GET request to a URL'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'parameters'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token string\">'type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'properties'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token string\">'url'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token string\">'type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'URL of the webpage to scrape'</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'required'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'url'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[assistant]'</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">[</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nmessages<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">[</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> response<span class=\"token punctuation\">[</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'tool_calls'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> tool <span class=\"token keyword\">in</span> response<span class=\"token punctuation\">[</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'tool_calls'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        function <span class=\"token operator\">=</span> available_functions<span class=\"token punctuation\">[</span>tool<span class=\"token punctuation\">[</span><span class=\"token string\">'function'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n        tool_response <span class=\"token operator\">=</span> function<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>tool<span class=\"token punctuation\">[</span><span class=\"token string\">'function'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'arguments'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[tool] returned:'</span><span class=\"token punctuation\">,</span> tool_response<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[tool] return value size:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>tool_response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        messages<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'role'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'tool'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">:</span> tool_response<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nfinal_response <span class=\"token operator\">=</span> ollama<span class=\"token punctuation\">.</span>chat<span class=\"token punctuation\">(</span>model<span class=\"token operator\">=</span><span class=\"token string\">'llama3.1'</span><span class=\"token punctuation\">,</span> messages<span class=\"token operator\">=</span>messages<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>final_response<span class=\"token punctuation\">[</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>중간마다 로그를 찍어서 도구가 호출되는지 확인했다.</p>\n<p>URL을 요약해 달라는 요청을 하면, GET 요청을 보내고, 그 결과를 요약해서 응답한다.\n문제는 html 태그 등 컨텍스트가 너무 많아서 그런지 요약이 잘 안된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>assistant<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'role'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'assistant'</span>, <span class=\"token string\">'content'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">''</span>, <span class=\"token string\">'tool_calls'</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">'function'</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'get'</span>, <span class=\"token string\">'arguments'</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'url'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'https://www.reddit.com/r/pathofexail/comments/1exyavx/325_updated_guide_to_recombinators/'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">[</span>tool<span class=\"token punctuation\">]</span> Making GET request to https://www.reddit.com/r/pathofexail/comments/1exyavx/325_updated_guide_to_recombinators/\n<span class=\"token punctuation\">[</span>tool<span class=\"token punctuation\">]</span> returned:\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE html<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>html <span class=\"token assign-left variable\">lang</span><span class=\"token operator\">=</span><span class=\"token string\">\"en-US\"</span> <span class=\"token assign-left variable\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"is-shredtop-pdp theme-beta\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>head <span class=\"token assign-left variable\">prefix</span><span class=\"token operator\">=</span>\"\n<span class=\"token punctuation\">[</span>tool<span class=\"token punctuation\">]</span> <span class=\"token builtin class-name\">return</span> value size: <span class=\"token number\">336690</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'role'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'assistant'</span>, <span class=\"token string\">'content'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'This is a HTML code snippet that appears to be a Reddit page, likely generated by the Reddit platform. Here\\'</span>s a breakdown of what I can see:<span class=\"token punctuation\">\\</span>n<span class=\"token punctuation\">\\</span>n**Header**<span class=\"token punctuation\">\\</span>n<span class=\"token punctuation\">\\</span>nThe <span class=\"token function\">top</span> section contains various JavaScript files and Faceplate-loader components, <span class=\"token function\">which</span> are likely used <span class=\"token keyword\">for</span> loading different parts of the page. The <span class=\"token variable\"><span class=\"token variable\">`</span>reddit-header-large<span class=\"token variable\">`</span></span> component is also present.<span class=\"token punctuation\">\\</span>n<span class=\"token punctuation\">\\</span>n**Main Content**<span class=\"token punctuation\">\\</span>n<span class=\"token punctuation\">\\</span>nThe main content area includes a Shreddit app container, <span class=\"token function\">which</span> contains various UI components such as:<span class=\"token punctuation\">\\</span>n<span class=\"token punctuation\">\\</span>n* A hamburger menu <span class=\"token punctuation\">(</span>represented by the <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token operator\">&lt;</span>faceplate-partial <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"hamburger-menu\"</span> <span class=\"token assign-left variable\">src</span><span class=\"token operator\">=</span><span class=\"token string\">\"/svc/shreddit/hamburger-menu\"</span> <span class=\"token assign-left variable\">loading</span><span class=\"token operator\">=</span><span class=\"token string\">\"programmatic\"</span><span class=\"token operator\">></span><span class=\"token variable\">`</span></span> element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>n* An alert controller <span class=\"token punctuation\">(</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token operator\">&lt;</span>alert-controller<span class=\"token operator\">></span><span class=\"token variable\">`</span></span> component<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>n* A share menu <span class=\"token punctuation\">(</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token operator\">&lt;</span>share-menu<span class=\"token operator\">></span><span class=\"token variable\">`</span></span> component<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>n* An award dialog <span class=\"token punctuation\">(</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token operator\">&lt;</span>award-dialog<span class=\"token operator\">></span><span class=\"token variable\">`</span></span> component<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>n* A comment share menu <span class=\"token punctuation\">(</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token operator\">&lt;</span>comment-share-menu<span class=\"token operator\">></span><span class=\"token variable\">`</span></span> component<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>n* A lead gen dialog <span class=\"token punctuation\">(</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token operator\">&lt;</span>lead-gen-dialog<span class=\"token operator\">></span><span class=\"token variable\">`</span></span> component<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>n<span class=\"token punctuation\">\\</span>n**Canonical URL and Redirect**<span class=\"token punctuation\">\\</span>n<span class=\"token punctuation\">\\</span>nThe page includes a canonical URL updater and a redirect element, <span class=\"token function\">which</span> suggests that this page is a redirect to another URL. In this case, it appears to be a redirect to <span class=\"token variable\"><span class=\"token variable\">`</span>/r/pathofexile/comments/1exyavx/325_updated_guide_to_recombinators/<span class=\"token variable\">`</span></span>.<span class=\"token punctuation\">\\</span>n<span class=\"token punctuation\">\\</span>n**Performance Metrics and Navigation Timings**<span class=\"token punctuation\">\\</span>n<span class=\"token punctuation\">\\</span>nThe page includes two script elements <span class=\"token punctuation\">(</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token operator\">&lt;</span>shreddit-perfmetric-collector<span class=\"token operator\">></span><span class=\"token variable\">`</span></span> and <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token operator\">&lt;</span>shreddit-navtimings-collector<span class=\"token operator\">></span><span class=\"token variable\">`</span></span><span class=\"token punctuation\">)</span> that are likely used <span class=\"token keyword\">for</span> collecting performance metrics and navigation timings.<span class=\"token punctuation\">\\</span>n<span class=\"token punctuation\">\\</span>n**Other Scripts**<span class=\"token punctuation\">\\</span>n<span class=\"token punctuation\">\\</span>nThere are also three script elements <span class=\"token punctuation\">(</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token comment\">#recaptcha-script</span><span class=\"token variable\">`</span></span>, <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token comment\">#googleid-signin-script</span><span class=\"token variable\">`</span></span>, and <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token comment\">#appleid-signin-script</span><span class=\"token variable\">`</span></span><span class=\"token punctuation\">)</span> that appear to be related to sign-in functionality using Google ID and Apple ID services.<span class=\"token punctuation\">\\</span>n<span class=\"token punctuation\">\\</span>nOverall, this code snippet appears to be a Reddit page with various UI components and scripts <span class=\"token keyword\">for</span> loading different parts of the page. If you have any specific questions or would like me to explain further, please <span class=\"token builtin class-name\">let</span> me know<span class=\"token operator\">!</span>'<span class=\"token punctuation\">}</span></code></pre></div>\n<p>텍스트 요약이 아니라, HTML 요약이 되었다.</p>"}},"allMarkdownRemark":{"nodes":[{"headings":[{"value":"2016-11-16 캠퍼스 스타트업 스쿨의 \"구글 플레이에서 꼭 지켜야 할 두 가지\""}],"fields":{"slug":"/2016-11-16-google-campus-two-things-you-must-keep-in-google-play/"}},{"headings":[{"value":"2016-08-27 GDG WebTech Workshop \"측정하는 놈, 로딩하는 놈, 그리는 놈\""}],"fields":{"slug":"/2016-08-27-gdg-webtech-workshop-nnn/"}},{"headings":[{"value":"Amazon Redshift"}],"fields":{"slug":"/amazon-redshift/"}},{"headings":[{"value":"알고리즘"}],"fields":{"slug":"/algorithm/"}},{"headings":[{"value":"Airflow"}],"fields":{"slug":"/airflow/"}},{"headings":[{"value":"Architecture"}],"fields":{"slug":"/architecture/"}},{"headings":[{"value":"Angular JS"}],"fields":{"slug":"/angularjs/"}},{"headings":[{"value":"C# Programming Language"}],"fields":{"slug":"/c-sharp/"}},{"headings":[{"value":"Amazon Web Service"}],"fields":{"slug":"/aws/"}},{"headings":[{"value":"책"}],"fields":{"slug":"/book/"}},{"headings":[{"value":"The Cat Logic"}],"fields":{"slug":"/cat-logic/"}},{"headings":[{"value":"크롬 브라우저"}],"fields":{"slug":"/chrome-browser/"}},{"headings":[{"value":"Clean Code"}],"fields":{"slug":"/clean-code/"}},{"headings":[{"value":"코드 리뷰"}],"fields":{"slug":"/code-review/"}},{"headings":[{"value":"회사"}],"fields":{"slug":"/company/"}},{"headings":[{"value":"crontab"}],"fields":{"slug":"/crontab/"}},{"headings":[{"value":"CI/CD"}],"fields":{"slug":"/continuous-integration-and-deployment/"}},{"headings":[{"value":"Computer Graphics"}],"fields":{"slug":"/computer-graphics/"}},{"headings":[{"value":"CSS"}],"fields":{"slug":"/css/"}},{"headings":[{"value":"CURL"}],"fields":{"slug":"/curl/"}},{"headings":[{"value":"Data analysis"}],"fields":{"slug":"/data-analysis/"}},{"headings":[{"value":"자료구조"}],"fields":{"slug":"/data-structure/"}},{"headings":[{"value":"Database"}],"fields":{"slug":"/database/"}},{"headings":[{"value":"Design Pattern"}],"fields":{"slug":"/design-pattern/"}},{"headings":[{"value":"DevOps"}],"fields":{"slug":"/devops/"}},{"headings":[{"value":"Docker"}],"fields":{"slug":"/docker/"}},{"headings":[{"value":"Elasticsearch"}],"fields":{"slug":"/elasticsearch/"}},{"headings":[{"value":"임베딩"}],"fields":{"slug":"/embeddings/"}},{"headings":[{"value":"세미나 및 컨퍼런스 후기"}],"fields":{"slug":"/experience-review/"}},{"headings":[{"value":"GatsbyJS"}],"fields":{"slug":"/gatsbyjs/"}},{"headings":[{"value":"Game"}],"fields":{"slug":"/game/"}},{"headings":[{"value":"Git"}],"fields":{"slug":"/git/"}},{"headings":[{"value":"GitHub"}],"fields":{"slug":"/github/"}},{"headings":[{"value":"Godot Engine"}],"fields":{"slug":"/godot/"}},{"headings":[{"value":"Google Analytics"}],"fields":{"slug":"/google-analytics/"}},{"headings":[{"value":"Gradle"}],"fields":{"slug":"/gradle/"}},{"headings":[{"value":"Hardware"}],"fields":{"slug":"/hardware/"}},{"headings":[{"value":"Canvas"}],"fields":{"slug":"/html-canvas/"}},{"headings":[{"value":"HTML"}],"fields":{"slug":"/html/"}},{"headings":[{"value":"아이디어 방법론"}],"fields":{"slug":"/idea-methodology/"}},{"headings":[{"value":"영감을 주는 것"}],"fields":{"slug":"/inspiration/"}},{"headings":[{"value":"개발 용어"}],"fields":{"slug":"/jargon/"}},{"headings":[{"value":"Ionic Framework"}],"fields":{"slug":"/ionic-framework/"}},{"headings":[{"value":"Java Programming Language"}],"fields":{"slug":"/java/"}},{"headings":[{"value":"Javascript & Typescript Programming Language"}],"fields":{"slug":"/javascript/"}},{"headings":[{"value":"JetBrains"}],"fields":{"slug":"/jetbrains/"}},{"headings":[{"value":"Jira"}],"fields":{"slug":"/jira/"}},{"headings":[{"value":"Kotlin Programming Language"}],"fields":{"slug":"/kotlin/"}},{"headings":[{"value":"Kubernetes"}],"fields":{"slug":"/kubernetes/"}},{"headings":[{"value":"Language Server Protocol"}],"fields":{"slug":"/language-server-protocol/"}},{"headings":[{"value":"Large Language Model"}],"fields":{"slug":"/large-language-model/"}},{"headings":[{"value":"Logging"}],"fields":{"slug":"/logging/"}},{"headings":[{"value":"Linux"}],"fields":{"slug":"/linux/"}},{"headings":[{"value":"Mac OS"}],"fields":{"slug":"/mac-os/"}},{"headings":[{"value":"Mail"}],"fields":{"slug":"/mail/"}},{"headings":[{"value":"Machine Learning"}],"fields":{"slug":"/machine-learning/"}},{"headings":[{"value":"Markdown"}],"fields":{"slug":"/markdown/"}},{"headings":[{"value":"Network"}],"fields":{"slug":"/network/"}},{"headings":[{"value":"Node JS"}],"fields":{"slug":"/nodejs/"}},{"headings":[{"value":"Object Oriented Programming"}],"fields":{"slug":"/object-oriented-programming/"}},{"headings":[{"value":"OpenAI"}],"fields":{"slug":"/openai/"}},{"headings":[{"value":"Ollama"}],"fields":{"slug":"/ollama/"}},{"headings":[{"value":"Phidata"}],"fields":{"slug":"/phidata/"}},{"headings":[{"value":"개인적인 철학"}],"fields":{"slug":"/philosophy/"}},{"headings":[{"value":"Podman"}],"fields":{"slug":"/podman/"}},{"headings":[{"value":"Physics"}],"fields":{"slug":"/physics/"}},{"headings":[{"value":"PostgreSQL"}],"fields":{"slug":"/postgresql/"}},{"headings":[{"value":"Programming Convention"}],"fields":{"slug":"/programming-convention/"}},{"headings":[{"value":"Programming Paradigm"}],"fields":{"slug":"/programming-paradigm/"}},{"headings":[{"value":"Python Programming Language"}],"fields":{"slug":"/python/"}},{"headings":[{"value":"인용문"}],"fields":{"slug":"/quotation/"}},{"headings":[{"value":"Redis"}],"fields":{"slug":"/redis/"}},{"headings":[{"value":"Reactive Extensions (Reactive X, RX)"}],"fields":{"slug":"/reactive-extensions/"}},{"headings":[{"value":"React JS"}],"fields":{"slug":"/reactjs/"}},{"headings":[{"value":"Reverse Engineering"}],"fields":{"slug":"/reverse-engineering/"}},{"headings":[{"value":"Rust Programming Language"}],"fields":{"slug":"/rust/"}},{"headings":[{"value":"SCP"}],"fields":{"slug":"/scp/"}},{"headings":[{"value":"Sentry - APM & Error Tracking"}],"fields":{"slug":"/sentry/"}},{"headings":[{"value":"보안"}],"fields":{"slug":"/security/"}},{"headings":[{"value":"SFML"}],"fields":{"slug":"/sfml/"}},{"headings":[{"value":"소프트웨어 개발"}],"fields":{"slug":"/software-development/"}},{"headings":[{"value":"Shell 명령어"}],"fields":{"slug":"/shell/"}},{"headings":[{"value":"우주"}],"fields":{"slug":"/space/"}},{"headings":[{"value":"Swagger"}],"fields":{"slug":"/swagger/"}},{"headings":[{"value":"시스템 장애"}],"fields":{"slug":"/system-failures/"}},{"headings":[{"value":"Spring framework"}],"fields":{"slug":"/spring-framework/"}},{"headings":[{"value":"Tmux"}],"fields":{"slug":"/tmux/"}},{"headings":[{"value":"Testing"}],"fields":{"slug":"/testing/"}},{"headings":[{"value":"개발/비개발 도구"}],"fields":{"slug":"/tools/"}},{"headings":[{"value":"Treesitter"}],"fields":{"slug":"/treesitter/"}},{"headings":[{"value":"Unicode"}],"fields":{"slug":"/unicode/"}},{"headings":[{"value":"Unity 3D"}],"fields":{"slug":"/unity3d/"}},{"headings":[{"value":"Valve사의 신규 입사자를 위한 핸드북"}],"fields":{"slug":"/valve/"}},{"headings":[{"value":"Vim"}],"fields":{"slug":"/vim/"}},{"headings":[{"value":"테스트 주도 개발 (Test Driven Development)"}],"fields":{"slug":"/test-driven-development/"}},{"headings":[{"value":"VimEnter 2023"}],"fields":{"slug":"/vimenter-2023/"}},{"headings":[{"value":"VimWiki"}],"fields":{"slug":"/vimwiki/"}},{"headings":[{"value":"Vue JS"}],"fields":{"slug":"/vuejs/"}},{"headings":[{"value":"웹 개발"}],"fields":{"slug":"/web/"}},{"headings":[{"value":"WebGL"}],"fields":{"slug":"/webgl/"}},{"headings":[{"value":"Windows Subsystem for Linux (WSL)"}],"fields":{"slug":"/windows-subsystem-for-linux/"}},{"headings":[{"value":"Windows"}],"fields":{"slug":"/windows/"}},{"headings":[{"value":"추론 애플리케이션"}],"fields":{"slug":"/인공지능/용어/추론 애플리케이션/"}}]},"site":{"siteMetadata":{"gitHubRepositoryUrl":"https://github.com/edunga1/cat-logic"}}},"pageContext":{"id":"3049d2af-4d9a-5a83-8f21-0154a09513dc"}},"staticQueryHashes":[],"slicesMap":{}}