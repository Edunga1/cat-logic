{"componentChunkName":"component---src-components-gatsby-templates-wiki-tsx","path":"/wiki/webgl/","result":{"data":{"markdownRemark":{"headings":[{"value":"WebGL"}],"fields":{"slug":"/webgl/","relatedDocs":[{"slug":"javascript","similarity":0.4227385938},{"slug":"web","similarity":0.4878968866},{"slug":"2016-08-27-gdg-webtech-workshop-nnn","similarity":0.5690602162},{"slug":"crontab","similarity":0.226921812},{"slug":"idea-methodology","similarity":0.3965305721},{"slug":"2016-11-16-google-campus-two-things-you-must-keep-in-google-play","similarity":0.4850050802},{"slug":"spring-framework","similarity":0.4080261344},{"slug":"aws","similarity":0.4120830602},{"slug":"git","similarity":0.33989174},{"slug":"algorithm-practice","similarity":0.4204195136},{"slug":"docker","similarity":0.447733897},{"slug":"scp","similarity":0.1917099614},{"slug":"mac-os","similarity":0.4337974708},{"slug":"testing","similarity":0.4069314901},{"slug":"machine-learning","similarity":0.459223906},{"slug":"devops","similarity":0.3198696066},{"slug":"python","similarity":0.3513146044},{"slug":"object-oriented-programming","similarity":0.4721362746},{"slug":"linux","similarity":0.2631093068},{"slug":"sfml","similarity":0.4131784081},{"slug":"windows","similarity":0.3911218238},{"slug":"markdown","similarity":0.3577545312},{"slug":"cat-logic","similarity":0.3747837724},{"slug":"vuejs","similarity":0.3895424732},{"slug":"shell","similarity":0.4171877961},{"slug":"html","similarity":0.4032781179},{"slug":"vimenter-2023","similarity":0.3876929396},{"slug":"data-analysis","similarity":0.4221060423},{"slug":"hardware","similarity":0.3598751225},{"slug":"programming-convention","similarity":0.3670005671},{"slug":"webgl","similarity":1},{"slug":"sentry","similarity":0.2625234488},{"slug":"valve","similarity":0.3486900292},{"slug":"reactjs","similarity":0.4799688775},{"slug":"airflow","similarity":0.3402206168},{"slug":"computer-graphics","similarity":0.4519156584},{"slug":"programming-philosophy","similarity":0.3965850634},{"slug":"elasticsearch","similarity":0.3967760348},{"slug":"unicode","similarity":0.3551676806},{"slug":"logging","similarity":0.3037290806},{"slug":"tools","similarity":0.4362488976},{"slug":"programming-paradigm","similarity":0.4633994177},{"slug":"system-failures","similarity":0.2780032405},{"slug":"amazon-redshift","similarity":0.3098863787},{"slug":"inspiration","similarity":0.3697277051},{"slug":"gatsbyjs","similarity":0.4799651349},{"slug":"design-pattern","similarity":0.4553055276},{"slug":"game","similarity":0.393398789},{"slug":"kubernetes","similarity":0.3352852077},{"slug":"llm-tools","similarity":0.3886763293},{"slug":"nodejs","similarity":0.5025887092},{"slug":"continuous-integration-and-deployment","similarity":0.2623122876},{"slug":"rust","similarity":0.3647057132},{"slug":"book","similarity":0.3151216001},{"slug":"jetbrains","similarity":0.397578483},{"slug":"quotation","similarity":0.2618747898},{"slug":"postgresql","similarity":0.3461324029},{"slug":"jira","similarity":0.2960434716},{"slug":"swagger","similarity":0.3424177643},{"slug":"architecture","similarity":0.4534074321},{"slug":"unity3d","similarity":0.433086852},{"slug":"jargon","similarity":0.4252990881},{"slug":"language-server-protocol","similarity":0.3321316342},{"slug":"clean-code","similarity":0.4326125165},{"slug":"java","similarity":0.4294117015},{"slug":"windows-subsystem-for-linux","similarity":0.444277825},{"slug":"test-driven-development","similarity":0.2539376195},{"slug":"github","similarity":0.4089022252},{"slug":"network","similarity":0.3474686532},{"slug":"kotlin","similarity":0.4142148153},{"slug":"c-sharp","similarity":0.4122209022},{"slug":"angularjs","similarity":0.443292697},{"slug":"vim","similarity":0.3705067927},{"slug":"ionic-framework","similarity":0.3647208485},{"slug":"physics","similarity":0.5507947399},{"slug":"html-canvas","similarity":0.5080965129},{"slug":"reverse-engineering","similarity":0.3740480703},{"slug":"space","similarity":0.3574405535},{"slug":"css","similarity":0.462227207},{"slug":"code-review","similarity":0.388930557},{"slug":"software-development","similarity":0.4228771961},{"slug":"database","similarity":0.3860489926},{"slug":"reactive-extensions","similarity":0.2350585914},{"slug":"redis","similarity":0.2271883596},{"slug":"mail","similarity":0.2101930812},{"slug":"experience-review","similarity":0.3855519087},{"slug":"google-analytics","similarity":0.3630528478},{"slug":"data-structure","similarity":0.4498727749},{"slug":"vimwiki","similarity":0.3563529789},{"slug":"embeddings","similarity":0.3915979026},{"slug":"추론 애플리케이션","similarity":0.4293245947}]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#webgl\">WebGL</a></p>\n<ul>\n<li><a href=\"#webgl2\">WebGL2</a></li>\n<li><a href=\"#%EC%85%B0%EC%9D%B4%EB%8D%94shader\">셰이더(Shader)</a></li>\n<li><a href=\"#references\">References</a></li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"webgl\" style=\"position:relative;\"><a href=\"#webgl\" aria-label=\"webgl permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WebGL</h1>\n<h2 id=\"webgl2\" style=\"position:relative;\"><a href=\"#webgl2\" aria-label=\"webgl2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WebGL2</h2>\n<blockquote>\n<p>GPU에서 실행되는 코드를 제공해만 합니다. 그 코드는 두 개 함수 쌍 형태로 제공되어야 하고, 각각의 함수는 정점 셰이더(vertex shader)와 프래그먼트 셰이더(fragment shader)라고 불립니다. 각각은 매우 엄격한 타입(strictly-types)을 가지는 C/C++과 유사한 GLSL(GL Shader Language)로 작성되어야 합니다.</p>\n</blockquote>\n<p>WebGL2는 두 가지 언어로 개발한다.</p>\n<p>canvas와 context를 통해 WebGL2 API와 커뮤니케이션하는 Javascript 코드와:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> gl <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webgl2\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>GLSL이라는 언어로 셰이더와 프라그먼트를 작성하는 코드로 이루어진다:</p>\n<div class=\"gatsby-highlight\" data-language=\"glsl\"><pre class=\"language-glsl\"><code class=\"language-glsl\">##version <span class=\"token number\">300</span> es\n\n<span class=\"token keyword\">precision</span> <span class=\"token keyword\">highp</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">uniform</span> <span class=\"token keyword\">vec4</span> u_color<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">out</span> <span class=\"token keyword\">vec4</span> outColor<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  outColor <span class=\"token operator\">=</span> u_color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>GLSL 코드는 JS 코드에서 template string을 통해 작성하거나 <script> 태그를 통해 작성할 수 있다:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> vertexShaderSource <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#version 300 es\n\nin vec2 a_position;\n\nuniform vec2 u_resolution;\n\nvoid main() {\n  vec2 zeroToOne = a_position / u_resolution;\n  vec2 zeroToTwo = zeroToOne * 2.0;\n  vec2 clipSpace = zeroToTwo - 1.0;\n\n  gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\n}\n</span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<h2 id=\"셰이더shader\" style=\"position:relative;\"><a href=\"#%EC%85%B0%EC%9D%B4%EB%8D%94shader\" aria-label=\"셰이더shader permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>셰이더(Shader)</h2>\n<blockquote>\n<p>WebGL은 단순한 래스터화(rasterization) 엔진일 뿐입니다. WebGL은 여러분이 작성한 코드로 점, 선 및 삼각형들을 그릴 뿐입니다.</p>\n</blockquote>\n<blockquote>\n<p>WebGL에서는 무언가를 그릴때 마다 두개의 셰이더가 필요합니다. 정점 셰이더와 프래그먼트 셰이더입니다.</p>\n</blockquote>\n<blockquote>\n<p>프래그먼트 셰이더의 역할은 현재 래스터화 되는 픽셀에 색상을 할당하는 것입니다.</p>\n</blockquote>\n<blockquote>\n<p>프래그먼트 셰이더는 픽셀당 한번씩 호출 됩니다. 호출 될 때마다 여러분이 지정한 out 변수를 어떤 색상으로 설정해야 합니다.</p>\n</blockquote>\n<p>셰이더는 정점 셰이더와 프래그먼트 셰이더 두 가지가 있다.</p>\n<p>정점 셰이더는 공간 좌표를 설정하고, 프래그먼트 셰이더는 픽셀에 색상을 할당한다.</p>\n<p>위에서 말하는 <strong>래스터화</strong> 의미는 정점 셰이더에 공간을 설정하면 그 공간을 채우는 픽셀을 프래그먼트 셰이더가 채운다는 의미이다.</p>\n<p>여기서 2D API와의 성능 차이가 나오는 것이 아닐까?<br>\n<a href=\"https://stackoverflow.com/questions/28867297/why-webgl-is-faster-than-canvas\">Why WebGL is faster than Canvas?</a></p>\n<h2 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h2>\n<p>WebGL2 기초:<br>\n<a href=\"https://webgl2fundamentals.org/webgl/lessons/ko/\">https://webgl2fundamentals.org/webgl/lessons/ko/</a></p>"}},"pageContext":{"id":"55bc7fd0-1a21-5b48-af25-b87928693c4c"}},"staticQueryHashes":[],"slicesMap":{}}