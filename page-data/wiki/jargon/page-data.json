{"componentChunkName":"component---src-components-gatsby-templates-wiki-tsx","path":"/wiki/jargon/","result":{"data":{"file":{"fields":{"gitLogs":[{"hash":"009c63e0922c4088f23eceff8de21ec2cdcfa576","date":"2023-08-23T11:29:40+09:00"},{"hash":"ee34ec929ca5967011a21066c20f3f1b9f8c7fbe","date":"2023-07-22T21:53:32Z"},{"hash":"e8b5e5e97e4424ec69197ec702460b61e8880cef","date":"2023-01-01T15:11:35Z"},{"hash":"d0fe82907fce1a0bdf2e5109bf42dbd8396dc9be","date":"2023-01-01T14:04:15Z"}]},"childMarkdownRemark":{"headings":[{"value":"개발 용어"}],"fields":{"slug":"/jargon/","relatedDocs":[{"slug":"reverse-engineering","similarity":0.2707108148},{"slug":"kubernetes","similarity":0.3616696308},{"slug":"hardware","similarity":0.2894572038},{"slug":"network","similarity":0.3967172573},{"slug":"physics","similarity":0.3696362253},{"slug":"experience-review","similarity":0.3324825936},{"slug":"css","similarity":0.370314887},{"slug":"gradle","similarity":0.4367265175},{"slug":"redis","similarity":0.3784039228},{"slug":"apm","similarity":0.3882513818},{"slug":"embeddings","similarity":0.3313944866},{"slug":"clean-code","similarity":0.4786952005},{"slug":"scp","similarity":0.2002108774},{"slug":"vimwiki","similarity":0.3072666451},{"slug":"amazon-redshift","similarity":0.2893036703},{"slug":"github","similarity":0.3516173718},{"slug":"jargon","similarity":1},{"slug":"windows","similarity":0.3554337461},{"slug":"test-driven-development","similarity":0.3763986584},{"slug":"c-sharp","similarity":0.4082871929},{"slug":"linux","similarity":0.3309983901},{"slug":"valve","similarity":0.3534930827},{"slug":"sentry","similarity":0.3300513161},{"slug":"phidata","similarity":0.3472229215},{"slug":"continuous-integration-and-deployment","similarity":0.3749827862},{"slug":"object-oriented-programming","similarity":0.4341970618},{"slug":"webgl","similarity":0.340295447},{"slug":"quotation","similarity":0.3185460289},{"slug":"airflow","similarity":0.3471191925},{"slug":"reactjs","similarity":0.4380358681},{"slug":"unicode","similarity":0.3500989044},{"slug":"sfml","similarity":0.3217652758},{"slug":"data-structure","similarity":0.3914058081},{"slug":"java","similarity":0.4342046568},{"slug":"system-failures","similarity":0.2901538682},{"slug":"swagger","similarity":0.4035722459},{"slug":"postgresql","similarity":0.3691934782},{"slug":"reactive-extensions","similarity":0.4973650352},{"slug":"windows-subsystem-for-linux","similarity":0.3532505768},{"slug":"mail","similarity":0.3126217402},{"slug":"unity3d","similarity":0.3473745394},{"slug":"code-review","similarity":0.4160047406},{"slug":"programming-paradigm","similarity":0.5143392501},{"slug":"elasticsearch","similarity":0.4061476133},{"slug":"idea-methodology","similarity":0.3448943844},{"slug":"software-development","similarity":0.5260740934},{"slug":"devops","similarity":0.4156687693},{"slug":"html-canvas","similarity":0.4103016394},{"slug":"podman","similarity":0.2419217086},{"slug":"ionic-framework","similarity":0.3238966348},{"slug":"data-analysis","similarity":0.4699959816},{"slug":"security","similarity":0.3473285892},{"slug":"html","similarity":0.3400909878},{"slug":"computer-graphics","similarity":0.3064750849},{"slug":"vuejs","similarity":0.3359730461},{"slug":"crontab","similarity":0.3390395038},{"slug":"database","similarity":0.4369033076},{"slug":"인공지능/용어/추론 애플리케이션","similarity":0.3916431476},{"slug":"python","similarity":0.3435143616},{"slug":"tools","similarity":0.4230427787},{"slug":"nodejs","similarity":0.4927166063},{"slug":"rust","similarity":0.4405822897},{"slug":"treesitter","similarity":0.3226005222},{"slug":"spring-framework","similarity":0.4819125603},{"slug":"chrome-browser","similarity":0.3479232898},{"slug":"markdown","similarity":0.3782255653},{"slug":"shell","similarity":0.4031231169},{"slug":"logging","similarity":0.4035704008},{"slug":"jetbrains","similarity":0.4494851606},{"slug":"google-analytics","similarity":0.3374832825},{"slug":"curl","similarity":0.3223600753},{"slug":"inspiration","similarity":0.378961165},{"slug":"philosophy","similarity":0.4928404152},{"slug":"programming-convention","similarity":0.5065009106},{"slug":"design-pattern","similarity":0.4948489493},{"slug":"algorithm","similarity":0.3494754788},{"slug":"javascript","similarity":0.4884682671},{"slug":"architecture","similarity":0.4213030547},{"slug":"jira","similarity":0.3617069309},{"slug":"book","similarity":0.3620989017},{"slug":"vim-plugins","similarity":0.3262594311},{"slug":"aws","similarity":0.3657661852},{"slug":"gatsbyjs","similarity":0.4445091297},{"slug":"game","similarity":0.4725204119},{"slug":"kotlin","similarity":0.4498917171},{"slug":"bk","similarity":0.2288721496},{"slug":"cat-logic","similarity":0.4089623587},{"slug":"playwright","similarity":0.3203680019},{"slug":"vimenter-2023","similarity":0.2866767928},{"slug":"git","similarity":0.3508711224},{"slug":"language-server-protocol","similarity":0.3524526502},{"slug":"model-context-protocol","similarity":0.3515154545},{"slug":"vim","similarity":0.3197739282},{"slug":"2016-08-27-gdg-webtech-workshop-nnn","similarity":0.4275525994},{"slug":"openai","similarity":0.2849151643},{"slug":"ollama","similarity":0.3000568014},{"slug":"2016-11-16-google-campus-two-things-you-must-keep-in-google-play","similarity":0.3575435125},{"slug":"space","similarity":0.294296725},{"slug":"testing","similarity":0.5161737967},{"slug":"angularjs","similarity":0.4313386747},{"slug":"company","similarity":0.3775535581},{"slug":"mac-os","similarity":0.3630393689},{"slug":"godot","similarity":0.4352656486},{"slug":"web","similarity":0.4214515247},{"slug":"docker","similarity":0.364929037},{"slug":"machine-learning","similarity":0.3352065081},{"slug":"tmux","similarity":0.3270267897},{"slug":"large-language-model","similarity":0.3077998149}]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EA%B0%9C%EB%B0%9C-%EC%9A%A9%EC%96%B4\">개발 용어</a></p>\n<ul>\n<li>\n<p><a href=\"#business-rule-business-logic-logic\">Business Rule, Business Logic, Logic</a></p>\n<ul>\n<li><a href=\"#business-logic\">Business Logic</a></li>\n<li><a href=\"#logic\">Logic</a></li>\n<li><a href=\"#business-rule\">Business Rule</a></li>\n<li><a href=\"#%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4-%EA%B7%9C%EC%B9%99%EA%B3%BC-%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4-%EB%A1%9C%EC%A7%81%EC%9D%84-%EC%99%9C-%EB%B6%84%EB%A6%AC%ED%95%98%EC%97%AC-%EC%95%8C%EC%95%84%EC%95%BC-%ED%95%A0%EA%B9%8C-feat-clean-architecture\">비즈니스 규칙과 비즈니스 로직을 왜 분리하여 알아야 할까? (feat. Clean Architecture)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%99%80-%EA%B4%80%EB%A0%A8%EB%90%9C-%EC%9A%A9%EC%96%B4%EB%93%A4\">테스트와 관련된 용어들</a></p>\n<ul>\n<li><a href=\"#test-double\">Test Double</a></li>\n<li><a href=\"#test-stub\">Test Stub</a></li>\n<li><a href=\"#mock-object\">Mock Object</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#debounce\">Debounce</a></p>\n</li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"개발-용어\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C-%EC%9A%A9%EC%96%B4\" aria-label=\"개발 용어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발 용어</h1>\n<h2 id=\"business-rule-business-logic-logic\" style=\"position:relative;\"><a href=\"#business-rule-business-logic-logic\" aria-label=\"business rule business logic logic permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Business Rule, Business Logic, Logic</h2>\n<p>아키텍처에 대한 이야기가 나오면 위 단어들이 빠지지 않는다.</p>\n<p>위 단어들이 무엇을 의미하고 왜 <strong>분리하여</strong> 알아야 하는지 알아본다.</p>\n<h3 id=\"business-logic\" style=\"position:relative;\"><a href=\"#business-logic\" aria-label=\"business logic permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Business Logic</h3>\n<p>비즈니스 로직은 말 그대로 비즈니스와 관계되어 있다.</p>\n<p>'출금' 기능을 구현한다고 하면 다음 처럼 구현할 수 있을 것이다:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>amount <span class=\"token operator\">&lt;=</span> balance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>            <span class=\"token comment\">// 잔고가 충분하면</span>\n    balance <span class=\"token operator\">-=</span> amount<span class=\"token punctuation\">;</span>              <span class=\"token comment\">// 잔고 감소</span>\n    <span class=\"token keyword\">let</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">'update...'</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 데이터베이스 잔고 업데이트 쿼리</span>\n    <span class=\"token function\">query</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span> balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 쿼리 전송</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'not enough balance.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 충분하지 않으면 사용자에게 알림</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>기능을 동작시키기 위한 모든 코드가 비지니스 로직이 된다.</p>\n<h3 id=\"logic\" style=\"position:relative;\"><a href=\"#logic\" aria-label=\"logic permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Logic</h3>\n<p>그럼 일반 로직은 무엇인가?</p>\n<p>위 예시 코드에는 나타나지 않은 DB에 연결하거나, Server를 실행 시키는 등</p>\n<p>시스템이 동작하기 위한 코드들이다. 따라서 비즈니스와 별개로 반드시 필요한 코드다.</p>\n<h3 id=\"business-rule\" style=\"position:relative;\"><a href=\"#business-rule\" aria-label=\"business rule permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Business Rule</h3>\n<p>비즈니스 로직이 구현에 가깝다면 비즈니스 룰은 말 그대로 원칙이다.</p>\n<p>위 예시 코드에서 '잔고가 충분하면', '잔고 감소', '사용자에게 알림'과 같이 자연어로 표현 가능하다.</p>\n<p>클라이언트가 제시한 비즈니스 규칙을 개발자가 비즈니스 로직으로 구현할 수 있다.</p>\n<p>비즈니스 로직이 비즈니스 룰을 설명 할 수도 있다.</p>\n<h3 id=\"비즈니스-규칙과-비즈니스-로직을-왜-분리하여-알아야-할까-feat-clean-architecture\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4-%EA%B7%9C%EC%B9%99%EA%B3%BC-%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4-%EB%A1%9C%EC%A7%81%EC%9D%84-%EC%99%9C-%EB%B6%84%EB%A6%AC%ED%95%98%EC%97%AC-%EC%95%8C%EC%95%84%EC%95%BC-%ED%95%A0%EA%B9%8C-feat-clean-architecture\" aria-label=\"비즈니스 규칙과 비즈니스 로직을 왜 분리하여 알아야 할까 feat clean architecture permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비즈니스 규칙과 비즈니스 로직을 왜 분리하여 알아야 할까? (feat. Clean Architecture)</h3>\n<p>아키텍처를 설계하면 유지보수의 문제에 직면하게 된다.\n좋은 아키텍처는 좋은 유지보수성을 나타낸다.</p>\n<p>어느날 클라이언트가 '잔고가 없어도 사용자에게 알리지 않게 해주세요.'라고 말했다 치자.\n문제는</p>\n<p><strong>비즈니스 룰과 관련된 코드</strong>: '잔고가 충분하면', '잔고 감소', '사용자에게 알림'</p>\n<p><strong>그렇지 않은 코드</strong>: '데이터베이스 잔고 업데이트 쿼리', '쿼리 전송'</p>\n<p>위 코드들이 서로 섞여 있어서 가독성이 그렇게 좋지 않다는 것이다.\n따라서 어떤 코드를 변경해야 사용자에 대한 알림이 가지 않는지, 그리고 해당 코드는 몇 줄에 걸쳐 나타나는지 분석해야 한다.\n쿼리 수정을 할 때도 이런 문제는 발생한다.</p>\n<p><a href=\"https://blog.coderifleman.com/2017/12/18/the-clean-architecture/?utm_medium=social&#x26;utm_source=gaerae.com&#x26;utm_campaign=%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%8A%A4%EB%9F%BD%EB%8B%A4\">Clean Architecture</a>는\n비즈니스를 규칙을 명시적으로 작성하고 비즈니스 로직과 계층을 분리하고, 비즈니스 로직을 작게 만들도록 한다.</p>\n<p>계층을 분리함으로써 의존성을 분리하여 테스트하기 쉽게 한다. 잘 분리된 코드는 분석하기도 쉽다.</p>\n<h2 id=\"테스트와-관련된-용어들\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%99%80-%EA%B4%80%EB%A0%A8%EB%90%9C-%EC%9A%A9%EC%96%B4%EB%93%A4\" aria-label=\"테스트와 관련된 용어들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트와 관련된 용어들</h2>\n<h3 id=\"test-double\" style=\"position:relative;\"><a href=\"#test-double\" aria-label=\"test double permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test Double</h3>\n<p>Stub, Mock, Fake 등 테스트 도구들을 통칭하는 말.</p>\n<h3 id=\"test-stub\" style=\"position:relative;\"><a href=\"#test-stub\" aria-label=\"test stub permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test Stub</h3>\n<p>결과가 정해진 기능(function).</p>\n<p>항상 같은 결과만 나오게 한다거나, 특정 인자에는 특정 결과만 반환하도록 한다.</p>\n<p>NodeJS에는 SinonJS가 그 역할을 한다.</p>\n<h3 id=\"mock-object\" style=\"position:relative;\"><a href=\"#mock-object\" aria-label=\"mock object permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mock Object</h3>\n<p>오브젝트를 흉내내는 것.</p>\n<p>의존하는 모듈이 사이드이펙트를 가지거나, 아직 구현이 안되어서 로직을 흉내내어 동작케하는 것.</p>\n<p>예:</p>\n<ul>\n<li>모듈이 데이터베이스를 업데이트하면 안되므로 모듈의 로직을 흉내내어 메모리에만 올려둔다.</li>\n<li>네트워크 요청이 필요한 경우 실제로 발생시키지 않고 해당 인자를 기반하여 결과를 반환한다.</li>\n<li>의존하는 모듈이 아직 구현 되지 않아서 임시로 흉내내어 사용한다.</li>\n</ul>\n<h2 id=\"debounce\" style=\"position:relative;\"><a href=\"#debounce\" aria-label=\"debounce permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Debounce</h2>\n<p>비슷한 단어: Throttle</p>\n<p>debounce는 클라이언트에서는 사용자 입력의 노이즈를 제거하는 용어로 주로 사용된다.\n보통 서버 요청할 때 버튼이 두 번 눌러져서 요청이 두 번 발생하는 동시 요청 문제가 흔하다.\n서버에서 동시 호출에 대한 방어 로직을 구현하는 것과 별개로, 클라이언트에서도 debounce를 이용한 UI 문제를 해결해 볼 수 있다.</p>\n<p>kotlin은 Flow의 operator로 <code class=\"language-text\">debounce()</code>를 <a href=\"https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/debounce.html\">제공</a>한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\">flow <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1010</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1010</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 3, 4, 5</span></code></pre></div>\n<p>첫 번째 값을 가져오고, 새 값이 설정한 시간 이내로 발생한 거라면 제거한다.</p>\n<p>ReactiveX에서도 debounce operator를 <a href=\"https://reactivex.io/documentation/operators/debounce.html\">제공</a>한다.</p>\n<blockquote>\n<p>only emit an item from an Observable if a particular timespan has passed without it emitting another item</p>\n</blockquote>\n<p>RX 구현체에선 <code class=\"language-text\">debounce</code>, <code class=\"language-text\">throttle</code> 함께 많이 사용하는 것으로 보인다.</p>\n<blockquote>\n<p>Language-Specific Information:</p>\n<ul>\n<li>RxClojure</li>\n<li>RxCpp</li>\n<li>RxGroovy debounce throttleWithTimeout</li>\n<li>RxJava 1․x debounce throttleWithTimeout</li>\n<li>RxJava 2․x debounce throttleWithTimeout</li>\n<li>RxJS debounce debounceWithSelector throttleWithTimeout</li>\n<li>RxKotlin debounce throttleWithTimeout</li>\n<li>RxNET Throttle</li>\n<li>RxPHP throttle</li>\n<li>RxPY debounce throttle_with_selector throttle_with_timeout</li>\n<li>Rxrb</li>\n<li>RxScala debounce throttleWithTimeout</li>\n<li>RxSwift debounce throttle</li>\n</ul>\n</blockquote>"}},"allMarkdownRemark":{"nodes":[{"headings":[{"value":"2016-08-27 GDG WebTech Workshop \"측정하는 놈, 로딩하는 놈, 그리는 놈\""}],"fields":{"slug":"/2016-08-27-gdg-webtech-workshop-nnn/"}},{"headings":[{"value":"Airflow"}],"fields":{"slug":"/airflow/"}},{"headings":[{"value":"2016-11-16 캠퍼스 스타트업 스쿨의 \"구글 플레이에서 꼭 지켜야 할 두 가지\""}],"fields":{"slug":"/2016-11-16-google-campus-two-things-you-must-keep-in-google-play/"}},{"headings":[{"value":"알고리즘"}],"fields":{"slug":"/algorithm/"}},{"headings":[{"value":"Amazon Redshift"}],"fields":{"slug":"/amazon-redshift/"}},{"headings":[{"value":"Angular JS"}],"fields":{"slug":"/angularjs/"}},{"headings":[{"value":"Architecture"}],"fields":{"slug":"/architecture/"}},{"headings":[{"value":"APM"}],"fields":{"slug":"/apm/"}},{"headings":[],"fields":{"slug":"/bk/"}},{"headings":[{"value":"Amazon Web Service"}],"fields":{"slug":"/aws/"}},{"headings":[{"value":"책"}],"fields":{"slug":"/book/"}},{"headings":[{"value":"C# Programming Language"}],"fields":{"slug":"/c-sharp/"}},{"headings":[{"value":"The Cat Logic"}],"fields":{"slug":"/cat-logic/"}},{"headings":[{"value":"크롬 브라우저"}],"fields":{"slug":"/chrome-browser/"}},{"headings":[{"value":"Clean Code"}],"fields":{"slug":"/clean-code/"}},{"headings":[{"value":"코드 리뷰"}],"fields":{"slug":"/code-review/"}},{"headings":[{"value":"회사"}],"fields":{"slug":"/company/"}},{"headings":[{"value":"CI/CD"}],"fields":{"slug":"/continuous-integration-and-deployment/"}},{"headings":[{"value":"crontab"}],"fields":{"slug":"/crontab/"}},{"headings":[{"value":"Computer Graphics"}],"fields":{"slug":"/computer-graphics/"}},{"headings":[{"value":"CSS"}],"fields":{"slug":"/css/"}},{"headings":[{"value":"CURL"}],"fields":{"slug":"/curl/"}},{"headings":[{"value":"Data analysis"}],"fields":{"slug":"/data-analysis/"}},{"headings":[{"value":"자료구조"}],"fields":{"slug":"/data-structure/"}},{"headings":[{"value":"Design Pattern"}],"fields":{"slug":"/design-pattern/"}},{"headings":[{"value":"Database"}],"fields":{"slug":"/database/"}},{"headings":[{"value":"DevOps"}],"fields":{"slug":"/devops/"}},{"headings":[{"value":"Docker"}],"fields":{"slug":"/docker/"}},{"headings":[{"value":"세미나 및 컨퍼런스 후기"}],"fields":{"slug":"/experience-review/"}},{"headings":[{"value":"Elasticsearch"}],"fields":{"slug":"/elasticsearch/"}},{"headings":[{"value":"임베딩"}],"fields":{"slug":"/embeddings/"}},{"headings":[{"value":"Game"}],"fields":{"slug":"/game/"}},{"headings":[{"value":"GatsbyJS"}],"fields":{"slug":"/gatsbyjs/"}},{"headings":[{"value":"Git"}],"fields":{"slug":"/git/"}},{"headings":[{"value":"GitHub"}],"fields":{"slug":"/github/"}},{"headings":[{"value":"Godot Engine"}],"fields":{"slug":"/godot/"}},{"headings":[{"value":"Google Analytics"}],"fields":{"slug":"/google-analytics/"}},{"headings":[{"value":"Hardware"}],"fields":{"slug":"/hardware/"}},{"headings":[{"value":"Gradle"}],"fields":{"slug":"/gradle/"}},{"headings":[{"value":"Canvas"}],"fields":{"slug":"/html-canvas/"}},{"headings":[{"value":"HTML"}],"fields":{"slug":"/html/"}},{"headings":[{"value":"아이디어 방법론"}],"fields":{"slug":"/idea-methodology/"}},{"headings":[{"value":"Ionic Framework"}],"fields":{"slug":"/ionic-framework/"}},{"headings":[{"value":"영감을 주는 것"}],"fields":{"slug":"/inspiration/"}},{"headings":[{"value":"개발 용어"}],"fields":{"slug":"/jargon/"}},{"headings":[{"value":"JetBrains"}],"fields":{"slug":"/jetbrains/"}},{"headings":[{"value":"Javascript & Typescript Programming Language"}],"fields":{"slug":"/javascript/"}},{"headings":[{"value":"Java Programming Language"}],"fields":{"slug":"/java/"}},{"headings":[{"value":"Kubernetes"}],"fields":{"slug":"/kubernetes/"}},{"headings":[{"value":"Jira"}],"fields":{"slug":"/jira/"}},{"headings":[{"value":"Kotlin Programming Language"}],"fields":{"slug":"/kotlin/"}},{"headings":[{"value":"Large Language Model"}],"fields":{"slug":"/large-language-model/"}},{"headings":[{"value":"Language Server Protocol"}],"fields":{"slug":"/language-server-protocol/"}},{"headings":[{"value":"Linux"}],"fields":{"slug":"/linux/"}},{"headings":[{"value":"Logging"}],"fields":{"slug":"/logging/"}},{"headings":[{"value":"Mac OS"}],"fields":{"slug":"/mac-os/"}},{"headings":[{"value":"Machine Learning"}],"fields":{"slug":"/machine-learning/"}},{"headings":[{"value":"Model Context Protocol(MCP)"}],"fields":{"slug":"/model-context-protocol/"}},{"headings":[{"value":"Mail"}],"fields":{"slug":"/mail/"}},{"headings":[{"value":"Markdown"}],"fields":{"slug":"/markdown/"}},{"headings":[{"value":"Network"}],"fields":{"slug":"/network/"}},{"headings":[{"value":"Node JS"}],"fields":{"slug":"/nodejs/"}},{"headings":[{"value":"Object Oriented Programming"}],"fields":{"slug":"/object-oriented-programming/"}},{"headings":[{"value":"Ollama"}],"fields":{"slug":"/ollama/"}},{"headings":[{"value":"Agno"}],"fields":{"slug":"/phidata/"}},{"headings":[{"value":"OpenAI"}],"fields":{"slug":"/openai/"}},{"headings":[{"value":"개인적인 철학"}],"fields":{"slug":"/philosophy/"}},{"headings":[{"value":"Physics"}],"fields":{"slug":"/physics/"}},{"headings":[{"value":"Playwright"}],"fields":{"slug":"/playwright/"}},{"headings":[{"value":"Podman"}],"fields":{"slug":"/podman/"}},{"headings":[{"value":"PostgreSQL"}],"fields":{"slug":"/postgresql/"}},{"headings":[{"value":"Programming Paradigm"}],"fields":{"slug":"/programming-paradigm/"}},{"headings":[{"value":"Programming Convention"}],"fields":{"slug":"/programming-convention/"}},{"headings":[{"value":"인용문"}],"fields":{"slug":"/quotation/"}},{"headings":[{"value":"Reactive Extensions"}],"fields":{"slug":"/reactive-extensions/"}},{"headings":[{"value":"React JS"}],"fields":{"slug":"/reactjs/"}},{"headings":[{"value":"Python Programming Language"}],"fields":{"slug":"/python/"}},{"headings":[{"value":"Redis"}],"fields":{"slug":"/redis/"}},{"headings":[{"value":"Reverse Engineering"}],"fields":{"slug":"/reverse-engineering/"}},{"headings":[{"value":"Rust Programming Language"}],"fields":{"slug":"/rust/"}},{"headings":[{"value":"보안"}],"fields":{"slug":"/security/"}},{"headings":[{"value":"SCP"}],"fields":{"slug":"/scp/"}},{"headings":[{"value":"Sentry - APM & Error Tracking"}],"fields":{"slug":"/sentry/"}},{"headings":[{"value":"Shell 명령어"}],"fields":{"slug":"/shell/"}},{"headings":[{"value":"SFML"}],"fields":{"slug":"/sfml/"}},{"headings":[{"value":"소프트웨어 개발"}],"fields":{"slug":"/software-development/"}},{"headings":[{"value":"우주"}],"fields":{"slug":"/space/"}},{"headings":[{"value":"Swagger"}],"fields":{"slug":"/swagger/"}},{"headings":[{"value":"Spring framework"}],"fields":{"slug":"/spring-framework/"}},{"headings":[{"value":"시스템 장애"}],"fields":{"slug":"/system-failures/"}},{"headings":[{"value":"Testing"}],"fields":{"slug":"/testing/"}},{"headings":[{"value":"테스트 주도 개발 (Test Driven Development)"}],"fields":{"slug":"/test-driven-development/"}},{"headings":[{"value":"개발/비개발 도구"}],"fields":{"slug":"/tools/"}},{"headings":[{"value":"Tmux"}],"fields":{"slug":"/tmux/"}},{"headings":[{"value":"Unicode"}],"fields":{"slug":"/unicode/"}},{"headings":[{"value":"Unity 3D"}],"fields":{"slug":"/unity3d/"}},{"headings":[{"value":"Treesitter"}],"fields":{"slug":"/treesitter/"}},{"headings":[{"value":"Valve사의 신규 입사자를 위한 핸드북"}],"fields":{"slug":"/valve/"}},{"headings":[{"value":"Vim Plugins"}],"fields":{"slug":"/vim-plugins/"}},{"headings":[{"value":"Vim"}],"fields":{"slug":"/vim/"}},{"headings":[{"value":"VimEnter 2023"}],"fields":{"slug":"/vimenter-2023/"}},{"headings":[{"value":"Vue JS"}],"fields":{"slug":"/vuejs/"}},{"headings":[{"value":"VimWiki"}],"fields":{"slug":"/vimwiki/"}},{"headings":[{"value":"웹 개발"}],"fields":{"slug":"/web/"}},{"headings":[{"value":"Windows Subsystem for Linux (WSL)"}],"fields":{"slug":"/windows-subsystem-for-linux/"}},{"headings":[{"value":"WebGL"}],"fields":{"slug":"/webgl/"}},{"headings":[{"value":"Windows"}],"fields":{"slug":"/windows/"}},{"headings":[{"value":"추론 애플리케이션"}],"fields":{"slug":"/인공지능/용어/추론 애플리케이션/"}},{"headings":[{"value":"유튜브 요약 프롬프트"}],"fields":{"slug":"/인공지능/프롬프트/youtube-summary/"}}]},"site":{"siteMetadata":{"gitHubRepositoryUrl":"https://github.com/edunga1/cat-logic"}}},"pageContext":{"id":"d4e3f5db-97ea-593d-96f3-12981ce93674"}},"staticQueryHashes":[],"slicesMap":{}}