{"componentChunkName":"component---src-components-gatsby-templates-wiki-tsx","path":"/wiki/github/","result":{"data":{"markdownRemark":{"headings":[{"value":"GitHub"}],"fields":{"relatedDocs":[{"slug":"javascript","similarity":0.7729935304},{"slug":"web","similarity":0.7985689836},{"slug":"2016-08-27-gdg-webtech-workshop-nnn","similarity":0.7633051395},{"slug":"crontab","similarity":0.7563926023},{"slug":"idea-methodology","similarity":0.7257728986},{"slug":"2016-11-16-google-campus-two-things-you-must-keep-in-google-play","similarity":0.7623245047},{"slug":"spring-framework","similarity":0.78639134},{"slug":"aws","similarity":0.7984795949},{"slug":"git","similarity":0.7982280885},{"slug":"algorithm-practice","similarity":0.7021715424},{"slug":"docker","similarity":0.761866681},{"slug":"scp","similarity":0.7449378377},{"slug":"mac-os","similarity":0.7929023798},{"slug":"testing","similarity":0.7423548895},{"slug":"machine-learning","similarity":0.772646666},{"slug":"devops","similarity":0.7550632848},{"slug":"python","similarity":0.7524002504},{"slug":"object-oriented-programming","similarity":0.7263460495},{"slug":"linux","similarity":0.7753784286},{"slug":"sfml","similarity":0.747643734},{"slug":"windows","similarity":0.7450378239},{"slug":"markdown","similarity":0.7613093666},{"slug":"cat-logic","similarity":0.7855080578},{"slug":"vuejs","similarity":0.7287194383},{"slug":"shell","similarity":0.7741035366},{"slug":"html","similarity":0.7659844401},{"slug":"vimenter-2023","similarity":0.760237103},{"slug":"data-analysis","similarity":0.7189895628},{"slug":"hardware","similarity":0.7274481534},{"slug":"programming-convention","similarity":0.7738412197},{"slug":"webgl","similarity":0.7488253708},{"slug":"sentry","similarity":0.7751305749},{"slug":"valve","similarity":0.7326602061},{"slug":"reactjs","similarity":0.7649540257},{"slug":"airflow","similarity":0.7550472677},{"slug":"computer-graphics","similarity":0.7046905102},{"slug":"programming-philosophy","similarity":0.7543415907},{"slug":"elasticsearch","similarity":0.7669221177},{"slug":"unicode","similarity":0.7356064494},{"slug":"logging","similarity":0.7614712116},{"slug":"tools","similarity":0.7907111144},{"slug":"programming-paradigm","similarity":0.7251434522},{"slug":"inspiration","similarity":0.7535341144},{"slug":"gatsbyjs","similarity":0.8003352151},{"slug":"design-pattern","similarity":0.7306491447},{"slug":"game","similarity":0.7445849196},{"slug":"kubernetes","similarity":0.7579107383},{"slug":"nodejs","similarity":0.7841393152},{"slug":"continuous-integration-and-deployment","similarity":0.768915124},{"slug":"rust","similarity":0.7629197999},{"slug":"book","similarity":0.7426137237},{"slug":"jetbrains","similarity":0.7909898977},{"slug":"quotation","similarity":0.7520391239},{"slug":"jira","similarity":0.7594579796},{"slug":"swagger","similarity":0.7833085181},{"slug":"architecture","similarity":0.8061966213},{"slug":"unity3d","similarity":0.7756476425},{"slug":"jargon","similarity":0.7457108764},{"slug":"language-server-protocol","similarity":0.7390093219},{"slug":"clean-code","similarity":0.7639262576},{"slug":"java","similarity":0.7116824514},{"slug":"windows-subsystem-for-linux","similarity":0.7851026515},{"slug":"test-driven-development","similarity":0.7382348728},{"slug":"github","similarity":1},{"slug":"network","similarity":0.7266961314},{"slug":"kotlin","similarity":0.7450710302},{"slug":"c-sharp","similarity":0.7272258369},{"slug":"angularjs","similarity":0.7708706756},{"slug":"vim","similarity":0.7682925051},{"slug":"ionic-framework","similarity":0.7487747357},{"slug":"physics","similarity":0.7565057149},{"slug":"html-canvas","similarity":0.7209882711},{"slug":"reverse-engineering","similarity":0.7510162723},{"slug":"css","similarity":0.7290334994},{"slug":"code-review","similarity":0.767095624},{"slug":"software-development","similarity":0.7729852974},{"slug":"database","similarity":0.7498830159},{"slug":"reactive-extensions","similarity":0.7252234806},{"slug":"redis","similarity":0.7108828184},{"slug":"mail","similarity":0.7594083358},{"slug":"experience-review","similarity":0.7540185892},{"slug":"google-analytics","similarity":0.7629581013},{"slug":"data-structure","similarity":0.7328044911},{"slug":"vimwiki","similarity":0.7862006366},{"slug":"추론 애플리케이션","similarity":0.7620593011}]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#github\">GitHub</a></p>\n<ul>\n<li>\n<p><a href=\"#github-api%EB%A1%9C-release-%EB%90%9C-%ED%8C%8C%EC%9D%BC-%EB%8B%A4%EC%9A%B4%EB%B0%9B%EA%B8%B0\">Github API로 Release 된 파일 다운받기</a></p>\n</li>\n<li>\n<p><a href=\"#github-cli\">GitHub CLI</a></p>\n<ul>\n<li><a href=\"#github-cli-copilot\">GitHub CLI Copilot</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"github\" style=\"position:relative;\"><a href=\"#github\" aria-label=\"github permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub</h1>\n<h2 id=\"github-api로-release-된-파일-다운받기\" style=\"position:relative;\"><a href=\"#github-api%EB%A1%9C-release-%EB%90%9C-%ED%8C%8C%EC%9D%BC-%EB%8B%A4%EC%9A%B4%EB%B0%9B%EA%B8%B0\" aria-label=\"github api로 release 된 파일 다운받기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Github API로 Release 된 파일 다운받기</h2>\n<p><a href=\"https://developer.github.com/v3/\">Github API를 사용하기 위한 토큰 발급, 권한 설정 및 인증 방법은 생략</a></p>\n<p>Release 관련 API는 <a href=\"https://developer.github.com/v3/repos/releases/\">https://developer.github.com/v3/repos/releases/</a>\n여기서 볼 수 있다.</p>\n<hr>\n<p>Release 목록 API</p>\n<deckgo-highlight-code   >\n          <code slot=\"code\">GET https://api.github.com/repos/:owner/:repo/releases</code>\n        </deckgo-highlight-code>\n<p>Release 목록(또는 Latest라면 정보 하나)을 가져오면 success(200)와 함께 이런 형태로 전송 된다.</p>\n<deckgo-highlight-code language=\"json\"  >\n          <code slot=\"code\">{\n  &quot;url&quot;: &quot;https://api.github.com/repos/octocat/Hello-World/releases/1&quot;,\n  &quot;html_url&quot;: &quot;https://github.com/octocat/Hello-World/releases/v1.0.0&quot;,\n  &quot;assets_url&quot;: &quot;https://api.github.com/repos/octocat/Hello-World/releases/1/assets&quot;,\n  &quot;upload_url&quot;: &quot;https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}&quot;,\n  &quot;tarball_url&quot;: &quot;https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0&quot;,\n  &quot;zipball_url&quot;: &quot;https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0&quot;,\n  &quot;id&quot;: 1,\n  &quot;tag_name&quot;: &quot;v1.0.0&quot;,\n  &quot;target_commitish&quot;: &quot;master&quot;,\n  &quot;name&quot;: &quot;v1.0.0&quot;,\n  &quot;body&quot;: &quot;Description of the release&quot;,\n  &quot;draft&quot;: false,\n  &quot;prerelease&quot;: false,\n  &quot;created_at&quot;: &quot;2013-02-27T19:35:32Z&quot;,\n  &quot;published_at&quot;: &quot;2013-02-27T19:35:32Z&quot;,\n  &quot;author&quot;: {\n    &quot;login&quot;: &quot;octocat&quot;,\n    &quot;id&quot;: 1,\n    &quot;avatar_url&quot;: &quot;https://github.com/images/error/octocat_happy.gif&quot;,\n    &quot;gravatar_id&quot;: &quot;&quot;,\n    &quot;url&quot;: &quot;https://api.github.com/users/octocat&quot;,\n    &quot;html_url&quot;: &quot;https://github.com/octocat&quot;,\n    &quot;followers_url&quot;: &quot;https://api.github.com/users/octocat/followers&quot;,\n    &quot;following_url&quot;: &quot;https://api.github.com/users/octocat/following{/other_user}&quot;,\n    &quot;gists_url&quot;: &quot;https://api.github.com/users/octocat/gists{/gist_id}&quot;,\n    &quot;starred_url&quot;: &quot;https://api.github.com/users/octocat/starred{/owner}{/repo}&quot;,\n    &quot;subscriptions_url&quot;: &quot;https://api.github.com/users/octocat/subscriptions&quot;,\n    &quot;organizations_url&quot;: &quot;https://api.github.com/users/octocat/orgs&quot;,\n    &quot;repos_url&quot;: &quot;https://api.github.com/users/octocat/repos&quot;,\n    &quot;events_url&quot;: &quot;https://api.github.com/users/octocat/events{/privacy}&quot;,\n    &quot;received_events_url&quot;: &quot;https://api.github.com/users/octocat/received_events&quot;,\n    &quot;type&quot;: &quot;User&quot;,\n    &quot;site_admin&quot;: false\n  },\n  &quot;assets&quot;: [\n    {\n      &quot;url&quot;: &quot;https://api.github.com/repos/octocat/Hello-World/releases/assets/1&quot;,\n      &quot;browser_download_url&quot;: &quot;https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip&quot;,\n      &quot;id&quot;: 1,\n      &quot;name&quot;: &quot;example.zip&quot;,\n      &quot;label&quot;: &quot;short description&quot;,\n      &quot;state&quot;: &quot;uploaded&quot;,\n      &quot;content_type&quot;: &quot;application/zip&quot;,\n      &quot;size&quot;: 1024,\n      &quot;download_count&quot;: 42,\n      &quot;created_at&quot;: &quot;2013-02-27T19:35:32Z&quot;,\n      &quot;updated_at&quot;: &quot;2013-02-27T19:35:32Z&quot;,\n      &quot;uploader&quot;: {\n        &quot;login&quot;: &quot;octocat&quot;,\n        &quot;id&quot;: 1,\n        &quot;avatar_url&quot;: &quot;https://github.com/images/error/octocat_happy.gif&quot;,\n        &quot;gravatar_id&quot;: &quot;&quot;,\n        &quot;url&quot;: &quot;https://api.github.com/users/octocat&quot;,\n        &quot;html_url&quot;: &quot;https://github.com/octocat&quot;,\n        &quot;followers_url&quot;: &quot;https://api.github.com/users/octocat/followers&quot;,\n        &quot;following_url&quot;: &quot;https://api.github.com/users/octocat/following{/other_user}&quot;,\n        &quot;gists_url&quot;: &quot;https://api.github.com/users/octocat/gists{/gist_id}&quot;,\n        &quot;starred_url&quot;: &quot;https://api.github.com/users/octocat/starred{/owner}{/repo}&quot;,\n        &quot;subscriptions_url&quot;: &quot;https://api.github.com/users/octocat/subscriptions&quot;,\n        &quot;organizations_url&quot;: &quot;https://api.github.com/users/octocat/orgs&quot;,\n        &quot;repos_url&quot;: &quot;https://api.github.com/users/octocat/repos&quot;,\n        &quot;events_url&quot;: &quot;https://api.github.com/users/octocat/events{/privacy}&quot;,\n        &quot;received_events_url&quot;: &quot;https://api.github.com/users/octocat/received_events&quot;,\n        &quot;type&quot;: &quot;User&quot;,\n        &quot;site_admin&quot;: false\n      }\n    }\n  ]\n}</code>\n        </deckgo-highlight-code>\n<p>업로드한 파일 URL을 얻기 위해서는 <code>assets</code> 정보에 접근해야 한다.\n<code>assets</code> 또한 많은 정보를 가지고 있다.\n여러개의 asset을 가지고 있을 수 있기 때문에 적당한 것을 찾는 것이 선행되어야 할 것이다.</p>\n<p>여기서 <strong>두 가지</strong> URL을 사용할 수 있는데, <code>assets[].browser_download_url</code>와 <code>assets[].url</code>이다.</p>\n<hr>\n<p><code>browser_download_url</code>은 실제 파일에 대한 링크를 가지고 있어서 <strong>권한만 있다면</strong> 쉽게 이용할 수 있다.\n문제는 private repository인 경우 not found(404)만 반환한다.</p>\n<p>사용자가 클라이언트에서 깃허브에 로그인 세션을 가지고 있다면 404가 아닌 파일을 받을 수 있겠지만..</p>\n<hr>\n<p>private repository는 <code>url</code>을 이용해야 한다.\n<code>url</code>은 <strong>Github API</strong> 주소이기 때문에 <code>url</code>로 http <strong>GET</strong> 요청을 해야한다.</p>\n<deckgo-highlight-code   >\n          <code slot=\"code\">GET https://api.github.com/repos/octocat/Hello-World/releases/assets/1</code>\n        </deckgo-highlight-code>\n<deckgo-highlight-code language=\"json\"  >\n          <code slot=\"code\">{\n  &quot;url&quot;: &quot;https://api.github.com/repos/octocat/Hello-World/releases/assets/1&quot;,\n  &quot;browser_download_url&quot;: &quot;https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip&quot;,\n  &quot;id&quot;: 1,\n  &quot;name&quot;: &quot;example.zip&quot;,\n  &quot;label&quot;: &quot;short description&quot;,\n  &quot;state&quot;: &quot;uploaded&quot;,\n  &quot;content_type&quot;: &quot;application/zip&quot;,\n  &quot;size&quot;: 1024,\n  &quot;download_count&quot;: 42,\n  &quot;created_at&quot;: &quot;2013-02-27T19:35:32Z&quot;,\n  &quot;updated_at&quot;: &quot;2013-02-27T19:35:32Z&quot;,\n  &quot;uploader&quot;: {\n    &quot;login&quot;: &quot;octocat&quot;,\n    &quot;id&quot;: 1,\n    &quot;avatar_url&quot;: &quot;https://github.com/images/error/octocat_happy.gif&quot;,\n    &quot;gravatar_id&quot;: &quot;&quot;,\n    &quot;url&quot;: &quot;https://api.github.com/users/octocat&quot;,\n    &quot;html_url&quot;: &quot;https://github.com/octocat&quot;,\n    &quot;followers_url&quot;: &quot;https://api.github.com/users/octocat/followers&quot;,\n    &quot;following_url&quot;: &quot;https://api.github.com/users/octocat/following{/other_user}&quot;,\n    &quot;gists_url&quot;: &quot;https://api.github.com/users/octocat/gists{/gist_id}&quot;,\n    &quot;starred_url&quot;: &quot;https://api.github.com/users/octocat/starred{/owner}{/repo}&quot;,\n    &quot;subscriptions_url&quot;: &quot;https://api.github.com/users/octocat/subscriptions&quot;,\n    &quot;organizations_url&quot;: &quot;https://api.github.com/users/octocat/orgs&quot;,\n    &quot;repos_url&quot;: &quot;https://api.github.com/users/octocat/repos&quot;,\n    &quot;events_url&quot;: &quot;https://api.github.com/users/octocat/events{/privacy}&quot;,\n    &quot;received_events_url&quot;: &quot;https://api.github.com/users/octocat/received_events&quot;,\n    &quot;type&quot;: &quot;User&quot;,\n    &quot;site_admin&quot;: false\n  }\n}</code>\n        </deckgo-highlight-code>\n<p>하지만 추가 작업을 하지 않은 이상 다시 <strong>asset</strong> 정보를 반환한다.</p>\n<p>제대로된 바이너리 파일 정보를 받기 위해선 헤더에 <code>Accept: application/octet-stream</code>를 추가해야 한다.</p>\n<p>제대로 했다면 success(200)와 함께 response로 바이너리 정보가 문자열로 들어온다.\n바이너리로 파일 생성 작업이 필요할 것이다.</p>\n<h2 id=\"github-cli\" style=\"position:relative;\"><a href=\"#github-cli\" aria-label=\"github cli permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub CLI</h2>\n<p><code>gh</code> 명령어로 GitHub 기능을 사용할 수 있다.</p>\n<p>자동 완성을 위해서 <code>gh completion</code>을 설정한다:</p>\n<deckgo-highlight-code language=\"bash\"  >\n          <code slot=\"code\"># .zshrc\nif command -v gh &amp;&gt; /dev/null; then\n  eval &quot;$(gh completion -s zsh)&quot;\nfi</code>\n        </deckgo-highlight-code>\n<p>shell에 맞는 <code>-s</code> 옵션을 사용하자.</p>\n<h3 id=\"github-cli-copilot\" style=\"position:relative;\"><a href=\"#github-cli-copilot\" aria-label=\"github cli copilot permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub CLI Copilot</h3>\n<p><code>gh extension</code>으로 copilot 기능을 사용할 수 있다.\n코드 자동완성 기능은 아니고, <a href=\"https://githubnext.com/projects/copilot-cli/\">copilot-cli</a>와 비슷한 기능이다.</p>\n<p><a href=\"https://docs.github.com/en/copilot/github-copilot-in-the-cli/about-github-copilot-in-the-cli\">https://docs.github.com/en/copilot/github-copilot-in-the-cli/about-github-copilot-in-the-cli</a></p>\n<p><code>gh copilot explain</code>은 명령어 설명을 받는 기능이다:</p>\n<deckgo-highlight-code language=\"bash\"  >\n          <code slot=\"code\">$ gh copilot explain &quot;sudo apt-get&quot;\n\nWelcome to GitHub Copilot in the CLI!\nversion 0.5.3-beta (2023-11-09)\n\nI&#39;m powered by AI, so surprises and mistakes are possible. Make sure to verify any generated code or suggestions, and share feedback so that we can learn and improve.\n\nExplanation:\n\n  • sudo is used to run a command with elevated rights, typically as a superuser or administrator.\n  • apt-get is the command-line package management tool for Debian-based systems (like Ubuntu).\n    • It is used to manage the installation, upgrade, and removal of software packages.\n    • It interacts with the APT (Advanced Package Tool) package management system.\n    • It requires administrative privileges (hence the use of sudo).\n    • It can be followed by various sub-commands and options to perform specific tasks, such as installing, updating, and removing packages.\n  • The specific command sudo apt-get without any additional sub-commands or options will not produce any meaningful result or action.</code>\n        </deckgo-highlight-code>\n<p><code>gh copilot suggest</code>로 명령어 추천을 받을 수도 있다:</p>\n<deckgo-highlight-code language=\"bash\"  >\n          <code slot=\"code\">$ gh copilot suggest &quot;Install git&quot;\n\nWelcome to GitHub Copilot in the CLI!\nversion 0.5.3-beta (2023-11-09)\n\nI&#39;m powered by AI, so surprises and mistakes are possible. Make sure to verify any generated code or suggestions, and share feedback so that we can learn and improve.\n\n? What kind of command can I help you with?\n&gt; generic shell command\n\nSuggestion:\n\n  sudo apt-get install git\n\n? Select an option\n&gt; Exit</code>\n        </deckgo-highlight-code>\n<p>명령어 유형을 선택하도록 하는데, 쿼리에 힌트를 주더라도 항상 선택한다.</p>\n<p>24년 1월 기준, 2개 기능만 지원한다. 아직은 copilot-cli의 <code>??</code> 명령어를 주로 사용할 것 같다.</p>\n<deckgo-highlight-code language=\"bash\"  >\n          <code slot=\"code\">$ gh copilot\n\nAvailable Commands:\n  config      Configure options\n  explain     Explain a command\n  suggest     Suggest a command</code>\n        </deckgo-highlight-code>\n<p>GitHub copilot chat이 포함되기를 기대해 본다. GPT-4 기반이라던데.</p>\n<p><code>gh copilot</code>을 사용하기 위해선 extension을 설치해야 한다:</p>\n<deckgo-highlight-code language=\"bash\"  >\n          <code slot=\"code\">$ gh extension install github/gh-copilot\n✓ Installed extension github/gh-copilot\n\n# 설치된 extension 목록\n$ gh extension list\nNAME        REPO               VERSION\ngh copilot  github/gh-copilot  v0.5.3-beta</code>\n        </deckgo-highlight-code>\n<p>제거하려면 <code>gh extension remove github/gh-copilot</code>.</p>"}},"pageContext":{"id":"6588b6a3-4918-521a-bb48-096732f77be9"}},"staticQueryHashes":[],"slicesMap":{}}