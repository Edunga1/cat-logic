{"componentChunkName":"component---src-pages-wiki-markdown-remark-fields-slug-tsx","path":"/wiki/github/","result":{"data":{"markdownRemark":{"headings":[{"value":"GitHub"}],"fields":{"relatedDocs":[{"slug":"javascript","similarity":0.7729935304},{"slug":"web","similarity":0.79370724},{"slug":"2016-08-27-gdg-webtech-workshop-nnn","similarity":0.7633051395},{"slug":"crontab","similarity":0.7563926023},{"slug":"idea-methodology","similarity":0.7213316748},{"slug":"2016-11-16-google-campus-two-things-you-must-keep-in-google-play","similarity":0.7623245047},{"slug":"spring-framework","similarity":0.7803511578},{"slug":"aws","similarity":0.7960594385},{"slug":"git","similarity":0.7978301251},{"slug":"algorithm-practice","similarity":0.701242073},{"slug":"docker","similarity":0.761866681},{"slug":"scp","similarity":0.7449378377},{"slug":"mac-os","similarity":0.7942370257},{"slug":"testing","similarity":0.7423548895},{"slug":"machine-learning","similarity":0.7846145035},{"slug":"devops","similarity":0.7531035694},{"slug":"python","similarity":0.7518662597},{"slug":"object-oriented-programming","similarity":0.7263460495},{"slug":"linux","similarity":0.765827399},{"slug":"sfml","similarity":0.747643734},{"slug":"windows","similarity":0.7276353242},{"slug":"markdown","similarity":0.7650056691},{"slug":"cat-logic","similarity":0.7827081618},{"slug":"vuejs","similarity":0.7287194383},{"slug":"shell","similarity":0.7741035366},{"slug":"html","similarity":0.7659844401},{"slug":"data-analysis","similarity":0.7190679853},{"slug":"hardware","similarity":0.7274481534},{"slug":"programming-convention","similarity":0.7738412197},{"slug":"webgl","similarity":0.7496716392},{"slug":"sentry","similarity":0.7751305749},{"slug":"valve","similarity":0.7308078998},{"slug":"reactjs","similarity":0.7649540257},{"slug":"airflow","similarity":0.7550472677},{"slug":"computer-graphics","similarity":0.7046905102},{"slug":"programming-philosophy","similarity":0.7514091941},{"slug":"elasticsearch","similarity":0.7669182058},{"slug":"unicode","similarity":0.7297347628},{"slug":"logging","similarity":0.7614712116},{"slug":"tools","similarity":0.793950792},{"slug":"programming-paradigm","similarity":0.7251434522},{"slug":"inspiration","similarity":0.7535341144},{"slug":"gatsbyjs","similarity":0.785449476},{"slug":"design-pattern","similarity":0.7303065299},{"slug":"game","similarity":0.7443532099},{"slug":"kubernetes","similarity":0.7579107383},{"slug":"nodejs","similarity":0.7685504418},{"slug":"continuous-integration-and-deployment","similarity":0.768915124},{"slug":"rust","similarity":0.7630795587},{"slug":"book","similarity":0.7335712713},{"slug":"jetbrains","similarity":0.7825598848},{"slug":"quotation","similarity":0.7523315506},{"slug":"jira","similarity":0.7594579796},{"slug":"swagger","similarity":0.7833085181},{"slug":"architecture","similarity":0.8043040429},{"slug":"unity3d","similarity":0.7756476425},{"slug":"jargon","similarity":0.7457108764},{"slug":"language-server-protocol","similarity":0.7390093219},{"slug":"clean-code","similarity":0.7639262576},{"slug":"java","similarity":0.7115553569},{"slug":"windows-subsystem-for-linux","similarity":0.7806627915},{"slug":"test-driven-development","similarity":0.7382348728},{"slug":"github","similarity":1},{"slug":"network","similarity":0.7266961314},{"slug":"kotlin","similarity":0.746435263},{"slug":"c-sharp","similarity":0.7197697918},{"slug":"angularjs","similarity":0.7462989972},{"slug":"vim","similarity":0.7655535482},{"slug":"ionic-framework","similarity":0.7487747357},{"slug":"physics","similarity":0.7565057149},{"slug":"html-canvas","similarity":0.7209882711},{"slug":"reverse-engineering","similarity":0.7512683746},{"slug":"css","similarity":0.7328109703},{"slug":"code-review","similarity":0.7667946472},{"slug":"software-development","similarity":0.7729852974},{"slug":"database","similarity":0.750415259},{"slug":"reactive-extensions","similarity":0.7252234806},{"slug":"redis","similarity":0.7114588981},{"slug":"mail","similarity":0.7594083358},{"slug":"experience-review","similarity":0.7540185892},{"slug":"google-analytics","similarity":0.7629581013},{"slug":"data-structure","similarity":0.7328044911},{"slug":"vimwiki","similarity":0.7823395253}]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#github\">GitHub</a></p>\n<ul>\n<li><a href=\"#github-api%EB%A1%9C-release-%EB%90%9C-%ED%8C%8C%EC%9D%BC-%EB%8B%A4%EC%9A%B4%EB%B0%9B%EA%B8%B0\">Github API로 Release 된 파일 다운받기</a></li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"github\" style=\"position:relative;\"><a href=\"#github\" aria-label=\"github permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub</h1>\n<h2 id=\"github-api로-release-된-파일-다운받기\" style=\"position:relative;\"><a href=\"#github-api%EB%A1%9C-release-%EB%90%9C-%ED%8C%8C%EC%9D%BC-%EB%8B%A4%EC%9A%B4%EB%B0%9B%EA%B8%B0\" aria-label=\"github api로 release 된 파일 다운받기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Github API로 Release 된 파일 다운받기</h2>\n<p><a href=\"https://developer.github.com/v3/\">Github API를 사용하기 위한 토큰 발급, 권한 설정 및 인증 방법은 생략</a></p>\n<p>Release 관련 API는 <a href=\"https://developer.github.com/v3/repos/releases/\">https://developer.github.com/v3/repos/releases/</a>\n여기서 볼 수 있다.</p>\n<hr>\n<p>Release 목록 API</p>\n<pre><code>GET https://api.github.com/repos/:owner/:repo/releases\n</code></pre>\n<p>Release 목록(또는 Latest라면 정보 하나)을 가져오면 success(200)와 함께 이런 형태로 전송 된다.</p>\n<pre><code class=\"language-json\">{\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/1\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/releases/v1.0.0\",\n  \"assets_url\": \"https://api.github.com/repos/octocat/Hello-World/releases/1/assets\",\n  \"upload_url\": \"https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}\",\n  \"tarball_url\": \"https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0\",\n  \"zipball_url\": \"https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0\",\n  \"id\": 1,\n  \"tag_name\": \"v1.0.0\",\n  \"target_commitish\": \"master\",\n  \"name\": \"v1.0.0\",\n  \"body\": \"Description of the release\",\n  \"draft\": false,\n  \"prerelease\": false,\n  \"created_at\": \"2013-02-27T19:35:32Z\",\n  \"published_at\": \"2013-02-27T19:35:32Z\",\n  \"author\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n  },\n  \"assets\": [\n    {\n      \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\n      \"browser_download_url\": \"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\n      \"id\": 1,\n      \"name\": \"example.zip\",\n      \"label\": \"short description\",\n      \"state\": \"uploaded\",\n      \"content_type\": \"application/zip\",\n      \"size\": 1024,\n      \"download_count\": 42,\n      \"created_at\": \"2013-02-27T19:35:32Z\",\n      \"updated_at\": \"2013-02-27T19:35:32Z\",\n      \"uploader\": {\n        \"login\": \"octocat\",\n        \"id\": 1,\n        \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n        \"gravatar_id\": \"\",\n        \"url\": \"https://api.github.com/users/octocat\",\n        \"html_url\": \"https://github.com/octocat\",\n        \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n        \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n        \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n        \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n        \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n        \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n        \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n        \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n        \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n        \"type\": \"User\",\n        \"site_admin\": false\n      }\n    }\n  ]\n}\n</code></pre>\n<p>업로드한 파일 URL을 얻기 위해서는 <code>assets</code> 정보에 접근해야 한다.\n<code>assets</code> 또한 많은 정보를 가지고 있다.\n여러개의 asset을 가지고 있을 수 있기 때문에 적당한 것을 찾는 것이 선행되어야 할 것이다.</p>\n<p>여기서 <strong>두 가지</strong> URL을 사용할 수 있는데, <code>assets[].browser_download_url</code>와 <code>assets[].url</code>이다.</p>\n<hr>\n<p><code>browser_download_url</code>은 실제 파일에 대한 링크를 가지고 있어서 <strong>권한만 있다면</strong> 쉽게 이용할 수 있다.\n문제는 private repository인 경우 not found(404)만 반환한다.</p>\n<p>사용자가 클라이언트에서 깃허브에 로그인 세션을 가지고 있다면 404가 아닌 파일을 받을 수 있겠지만..</p>\n<hr>\n<p>private repository는 <code>url</code>을 이용해야 한다.\n<code>url</code>은 <strong>Github API</strong> 주소이기 때문에 <code>url</code>로 http <strong>GET</strong> 요청을 해야한다.</p>\n<pre><code>GET https://api.github.com/repos/octocat/Hello-World/releases/assets/1\n</code></pre>\n<pre><code class=\"language-json\">{\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\n  \"browser_download_url\": \"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\n  \"id\": 1,\n  \"name\": \"example.zip\",\n  \"label\": \"short description\",\n  \"state\": \"uploaded\",\n  \"content_type\": \"application/zip\",\n  \"size\": 1024,\n  \"download_count\": 42,\n  \"created_at\": \"2013-02-27T19:35:32Z\",\n  \"updated_at\": \"2013-02-27T19:35:32Z\",\n  \"uploader\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n  }\n}\n</code></pre>\n<p>하지만 추가 작업을 하지 않은 이상 다시 <strong>asset</strong> 정보를 반환한다.</p>\n<p>제대로된 바이너리 파일 정보를 받기 위해선 헤더에 <code>Accept: application/octet-stream</code>를 추가해야 한다.</p>\n<p>제대로 했다면 success(200)와 함께 response로 바이너리 정보가 문자열로 들어온다.\n바이너리로 파일 생성 작업이 필요할 것이다.</p>"}},"pageContext":{"id":"6588b6a3-4918-521a-bb48-096732f77be9","fields__slug":"/github/","__params":{"fields__slug":"github"}}},"staticQueryHashes":[],"slicesMap":{}}