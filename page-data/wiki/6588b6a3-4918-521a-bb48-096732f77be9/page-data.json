{"componentChunkName":"component---src-pages-wiki-markdown-remark-id-tsx","path":"/wiki/6588b6a3-4918-521a-bb48-096732f77be9/","result":{"data":{"markdownRemark":{"tableOfContents":"<ul>\n<li><a href=\"#github-api%EB%A1%9C-release-%EB%90%9C-%ED%8C%8C%EC%9D%BC-%EB%8B%A4%EC%9A%B4%EB%B0%9B%EA%B8%B0\">Github API로 Release 된 파일 다운받기</a></li>\n</ul>","html":"<h1>Github API로 Release 된 파일 다운받기</h1>\n<p><a href=\"https://developer.github.com/v3/\">Github API를 사용하기 위한 토큰 발급, 권한 설정 및 인증 방법은 생략</a></p>\n<p>Release 관련 API는 <a href=\"https://developer.github.com/v3/repos/releases/\">https://developer.github.com/v3/repos/releases/</a>\n여기서 볼 수 있다.</p>\n<hr>\n<p>Release 목록 API</p>\n<pre><code>GET https://api.github.com/repos/:owner/:repo/releases\n</code></pre>\n<p>Release 목록(또는 Latest라면 정보 하나)을 가져오면 success(200)와 함께 이런 형태로 전송 된다.</p>\n<pre><code class=\"language-json\">{\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/1\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/releases/v1.0.0\",\n  \"assets_url\": \"https://api.github.com/repos/octocat/Hello-World/releases/1/assets\",\n  \"upload_url\": \"https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}\",\n  \"tarball_url\": \"https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0\",\n  \"zipball_url\": \"https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0\",\n  \"id\": 1,\n  \"tag_name\": \"v1.0.0\",\n  \"target_commitish\": \"master\",\n  \"name\": \"v1.0.0\",\n  \"body\": \"Description of the release\",\n  \"draft\": false,\n  \"prerelease\": false,\n  \"created_at\": \"2013-02-27T19:35:32Z\",\n  \"published_at\": \"2013-02-27T19:35:32Z\",\n  \"author\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n  },\n  \"assets\": [\n    {\n      \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\n      \"browser_download_url\": \"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\n      \"id\": 1,\n      \"name\": \"example.zip\",\n      \"label\": \"short description\",\n      \"state\": \"uploaded\",\n      \"content_type\": \"application/zip\",\n      \"size\": 1024,\n      \"download_count\": 42,\n      \"created_at\": \"2013-02-27T19:35:32Z\",\n      \"updated_at\": \"2013-02-27T19:35:32Z\",\n      \"uploader\": {\n        \"login\": \"octocat\",\n        \"id\": 1,\n        \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n        \"gravatar_id\": \"\",\n        \"url\": \"https://api.github.com/users/octocat\",\n        \"html_url\": \"https://github.com/octocat\",\n        \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n        \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n        \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n        \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n        \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n        \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n        \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n        \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n        \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n        \"type\": \"User\",\n        \"site_admin\": false\n      }\n    }\n  ]\n}\n</code></pre>\n<p>업로드한 파일 URL을 얻기 위해서는 <code>assets</code> 정보에 접근해야 한다.\n<code>assets</code> 또한 많은 정보를 가지고 있다.\n여러개의 asset을 가지고 있을 수 있기 때문에 적당한 것을 찾는 것이 선행되어야 할 것이다.</p>\n<p>여기서 <strong>두 가지</strong> URL을 사용할 수 있는데, <code>assets[].browser_download_url</code>와 <code>assets[].url</code>이다.</p>\n<hr>\n<p><code>browser_download_url</code>은 실제 파일에 대한 링크를 가지고 있어서 <strong>권한만 있다면</strong> 쉽게 이용할 수 있다.\n문제는 private repository인 경우 not found(404)만 반환한다.</p>\n<p>사용자가 클라이언트에서 깃허브에 로그인 세션을 가지고 있다면 404가 아닌 파일을 받을 수 있겠지만..</p>\n<hr>\n<p>private repository는 <code>url</code>을 이용해야 한다.\n<code>url</code>은 <strong>Github API</strong> 주소이기 때문에 <code>url</code>로 http <strong>GET</strong> 요청을 해야한다.</p>\n<pre><code>GET https://api.github.com/repos/octocat/Hello-World/releases/assets/1\n</code></pre>\n<pre><code class=\"language-json\">{\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\n  \"browser_download_url\": \"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\n  \"id\": 1,\n  \"name\": \"example.zip\",\n  \"label\": \"short description\",\n  \"state\": \"uploaded\",\n  \"content_type\": \"application/zip\",\n  \"size\": 1024,\n  \"download_count\": 42,\n  \"created_at\": \"2013-02-27T19:35:32Z\",\n  \"updated_at\": \"2013-02-27T19:35:32Z\",\n  \"uploader\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n  }\n}\n</code></pre>\n<p>하지만 추가 작업을 하지 않은 이상 다시 <strong>asset</strong> 정보를 반환한다.</p>\n<p>제대로된 바이너리 파일 정보를 받기 위해선 헤더에 <code>Accept: application/octet-stream</code>를 추가해야 한다.</p>\n<p>제대로 했다면 success(200)와 함께 response로 바이너리 정보가 문자열로 들어온다.\n바이너리로 파일 생성 작업이 필요할 것이다.</p>"}},"pageContext":{"id":"6588b6a3-4918-521a-bb48-096732f77be9","__params":{"id":"6588b6a3-4918-521a-bb48-096732f77be9"}}},"staticQueryHashes":[],"slicesMap":{}}