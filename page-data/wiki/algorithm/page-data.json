{"componentChunkName":"component---src-components-gatsby-templates-wiki-tsx","path":"/wiki/algorithm/","result":{"data":{"file":{"fields":{"gitLogs":[{"hash":"a3183fd31a024a41620f434cf3fad17430091619","date":"2024-10-27T19:36:25+09:00"}]},"childMarkdownRemark":{"headings":[{"value":"알고리즘"}],"fields":{"slug":"/algorithm/","relatedDocs":[{"slug":"sentry","similarity":0.2515398245},{"slug":"philosophy","similarity":0.3912227207},{"slug":"python","similarity":0.3301343756},{"slug":"chrome-browser","similarity":0.2281716884},{"slug":"phidata","similarity":0.3381075965},{"slug":"2016-11-16-google-campus-two-things-you-must-keep-in-google-play","similarity":0.292585091},{"slug":"openai","similarity":0.3523021332},{"slug":"tmux","similarity":0.2772455011},{"slug":"git","similarity":0.3254044436},{"slug":"github","similarity":0.3141400293},{"slug":"podman","similarity":0.2767353372},{"slug":"airflow","similarity":0.2857420204},{"slug":"c-sharp","similarity":0.2926092728},{"slug":"kotlin","similarity":0.2601731702},{"slug":"hardware","similarity":0.2670490173},{"slug":"test-driven-development","similarity":0.3148026668},{"slug":"data-analysis","similarity":0.3998166702},{"slug":"markdown","similarity":0.2747981398},{"slug":"design-pattern","similarity":0.3366080172},{"slug":"vimenter-2023","similarity":0.2529877091},{"slug":"testing","similarity":0.2985164476},{"slug":"cat-logic","similarity":0.3369730662},{"slug":"tools","similarity":0.3177512709},{"slug":"webgl","similarity":0.3083861701},{"slug":"linux","similarity":0.2403470037},{"slug":"data-structure","similarity":0.3603966044},{"slug":"unity3d","similarity":0.2966780472},{"slug":"reactjs","similarity":0.3366436016},{"slug":"curl","similarity":0.3266787948},{"slug":"continuous-integration-and-deployment","similarity":0.2544806762},{"slug":"nodejs","similarity":0.4092452341},{"slug":"idea-methodology","similarity":0.3794991894},{"slug":"machine-learning","similarity":0.2944978925},{"slug":"ollama","similarity":0.3220243131},{"slug":"algorithm","similarity":1},{"slug":"object-oriented-programming","similarity":0.3439839892},{"slug":"amazon-redshift","similarity":0.2356949681},{"slug":"code-review","similarity":0.3164670129},{"slug":"scp","similarity":0.245962629},{"slug":"ionic-framework","similarity":0.2651198038},{"slug":"large-language-model","similarity":0.2503948149},{"slug":"mail","similarity":0.2503327541},{"slug":"security","similarity":0.3392523876},{"slug":"shell","similarity":0.3809348944},{"slug":"crontab","similarity":0.2888030264},{"slug":"javascript","similarity":0.4287150451},{"slug":"logging","similarity":0.2462229678},{"slug":"jetbrains","similarity":0.2970139658},{"slug":"elasticsearch","similarity":0.2750290534},{"slug":"html","similarity":0.2885405583},{"slug":"kubernetes","similarity":0.2823023872},{"slug":"web","similarity":0.3888079835},{"slug":"windows","similarity":0.3205305996},{"slug":"quotation","similarity":0.3112791486},{"slug":"html-canvas","similarity":0.3543032294},{"slug":"programming-paradigm","similarity":0.3876355647},{"slug":"google-analytics","similarity":0.2878144289},{"slug":"java","similarity":0.2670948575},{"slug":"mac-os","similarity":0.3384832098},{"slug":"network","similarity":0.355496289},{"slug":"reactive-extensions","similarity":0.2796465788},{"slug":"unicode","similarity":0.3188849222},{"slug":"sfml","similarity":0.3520294187},{"slug":"system-failures","similarity":0.2594571644},{"slug":"language-server-protocol","similarity":0.2317652798},{"slug":"architecture","similarity":0.3146022924},{"slug":"database","similarity":0.4034318457},{"slug":"vimwiki","similarity":0.2458142178},{"slug":"godot","similarity":0.3329646974},{"slug":"computer-graphics","similarity":0.3404516192},{"slug":"valve","similarity":0.2485595145},{"slug":"devops","similarity":0.3394795921},{"slug":"docker","similarity":0.3078464712},{"slug":"space","similarity":0.2512499548},{"slug":"jira","similarity":0.2761693116},{"slug":"book","similarity":0.4232728076},{"slug":"vim","similarity":0.2921924292},{"slug":"programming-convention","similarity":0.3549281718},{"slug":"embeddings","similarity":0.3263780712},{"slug":"clean-code","similarity":0.3415208515},{"slug":"redis","similarity":0.2795151122},{"slug":"angularjs","similarity":0.3277277747},{"slug":"2016-08-27-gdg-webtech-workshop-nnn","similarity":0.3096651894},{"slug":"company","similarity":0.3288146053},{"slug":"inspiration","similarity":0.4142748203},{"slug":"aws","similarity":0.3062785646},{"slug":"experience-review","similarity":0.2546742732},{"slug":"gatsbyjs","similarity":0.3617160419},{"slug":"css","similarity":0.3560251971},{"slug":"swagger","similarity":0.2479365979},{"slug":"reverse-engineering","similarity":0.2133004904},{"slug":"postgresql","similarity":0.3316995995},{"slug":"vuejs","similarity":0.2715515782},{"slug":"gradle","similarity":0.2798905605},{"slug":"game","similarity":0.339385594},{"slug":"rust","similarity":0.3326445286},{"slug":"windows-subsystem-for-linux","similarity":0.3642857548},{"slug":"physics","similarity":0.4199009725},{"slug":"treesitter","similarity":0.2278583271},{"slug":"jargon","similarity":0.3520304966},{"slug":"software-development","similarity":0.3777250554},{"slug":"spring-framework","similarity":0.2776455754},{"slug":"추론 애플리케이션","similarity":0.3056321793}]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\">알고리즘</a></p>\n<ul>\n<li>\n<p><a href=\"#game-of-life\">Game Of Life</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%97%B0%EC%8A%B5\">알고리즘 연습</a></p>\n<ul>\n<li><a href=\"#%EB%95%85%EB%94%B0%EB%A8%B9%EA%B8%B0-%EA%B2%8C%EC%9E%84\">땅따먹기 게임</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#linear-map\">Linear Map</a></p>\n</li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"알고리즘\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\" aria-label=\"알고리즘 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘</h1>\n<h2 id=\"game-of-life\" style=\"position:relative;\"><a href=\"#game-of-life\" aria-label=\"game of life permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Game Of Life</h2>\n<p><a href=\"https://ko.wikipedia.org/wiki/%EB%9D%BC%EC%9D%B4%ED%94%84_%EA%B2%8C%EC%9E%84\">라이프 게임</a>은 <a href=\"https://ko.wikipedia.org/wiki/%EC%84%B8%ED%8F%AC_%EC%9E%90%EB%8F%99%EC%9E%90\">세포 자동자</a>의 일종이다.</p>\n<p><img src=\"https://upload.wikimedia.org/wikipedia/commons/7/7e/GameOfLife_Glider_Animation.gif\" alt=\"Game of Life\"></p>\n<p>수학자 존 호튼 콘퉤이가 고안했으며, 세포 자동자는 폰 노이만이 고안했다.\n세포 자동자는 공간에서 각 셀이 살아있거나 죽어있는 상태를 가지며, 이웃한 셀들의 상태에 따라 다음 세대의 상태가 결정된다.\n에코시스템을 표현하는 것으로 보인다.</p>\n<p>라이프 게임은 다음 규칙을 따른다:</p>\n<ul>\n<li>죽어있는 셀의 주변에 정확히 3개의 살아있는 이웃이 있다면, 그 셀은 살아난다(탄생).</li>\n<li>살아있는 셀의 주변에 2개나 3개의 살아있는 이웃이 있다면, 다음 세대에서도 살아남는다.</li>\n<li>살아있는 셀의 주변에 1개 이하의 살아있는 이웃이 있거나, 4개 이상의 살아있는 이웃이 있다면, 그 셀은 죽는다(외롭거나 과밀로 인해).</li>\n</ul>\n<p>이전에 구현한 적이 있는데, 찾아서 업로드하자.</p>\n<h2 id=\"알고리즘-연습\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%97%B0%EC%8A%B5\" aria-label=\"알고리즘 연습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘 연습</h2>\n<h3 id=\"땅따먹기-게임\" style=\"position:relative;\"><a href=\"#%EB%95%85%EB%94%B0%EB%A8%B9%EA%B8%B0-%EA%B2%8C%EC%9E%84\" aria-label=\"땅따먹기 게임 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>땅따먹기 게임</h3>\n<p><a href=\"https://programmers.co.kr/learn/challenge_codes/36\">https://programmers.co.kr/learn/challenge_codes/36</a></p>\n<blockquote>\n<p>영희는 땅따먹기 게임에 푹 빠졌습니다. 땅따먹기 게임의 땅은 총 N행 4열로 나누어져 있고, 모든 칸에는 점수가 쓰여 있습니다. 땅을 밟으면서 한 행씩 내려올 때, 영희는 각 행의 4칸 중 1칸만 밟으면서 내려올 수 있습니다. 땅따먹기 게임에는 같은 열을 연속해서 밟을 수가 없는 특수 규칙이 있습니다. 즉, 1행에서 (5)를 밟았다면, 2행의 (8)은 밟을 수가 없게 됩니다. 마지막 행까지 모두 내려왔을 때, 점수가 가장 높은 사람이 게임의 승자가 됩니다. 여러분이 hopscotch 함수를 제작하여 영희가 최대 몇 점을 얻을 수 있는지 알려주세요. 예를 들어</p>\n</blockquote>\n<p>1 2 3 5 5 6 7 8 4 3 2 1 의 땅이 있다면, 영희는 각 줄에서 (5), (7), (4) 땅을 밟아 16점을 최고점으로 받을 수 있으며, hopscotch 함수에서는 16을 반환해주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">hopscotch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">board<span class=\"token punctuation\">,</span> size</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 함수를 완성하세요.</span>\n\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n <span class=\"token comment\">//아래는 테스트로 출력해 보기 위한 코드입니다.</span>\n<span class=\"token keyword\">var</span> board <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">hopscotch</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<p>처음 생각한 방법은 모든 경우의 수를 찾는 것이었다.</p>\n<p>다음 행으로 넘어갈 때 마다 모든 경우에 대한 합을 저장하는 방법을 사용했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 시작 (1행)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">// 2행</span>\n<span class=\"token comment\">// - 7, 8, 9 : 첫 행 1에서 시작할 때 모든 경우의 합: (+6, +7, +8)</span>\n<span class=\"token comment\">// - 7, 9, 10 : 첫 행 2에서 시작할 때 모든 경우의 합: (+5, +7, +8)</span>\n<span class=\"token comment\">// - ...</span>\n<span class=\"token punctuation\">[</span>\n    <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">// 이하 마찬가지</span></code></pre></div>\n<p>문제는 다음 행으로 넘어갈 수록 계산 횟수가 기하급수적으로 늘어난다는 것이다.</p>\n<p>2행 순회의 경우 4 * (4 - 1) = 12의 계산 수를 통해 12크기의 배열이 만들어진다.</p>\n<p>3행 순회할 때는 12 * (4 - 1) = 36 ...</p>\n<p>끝까지 순회할 때의 모든 경우의 수를 다 저장하는 방법은 순회할 때마다 기하급수적으로 계산 횟수가 늘어나는 것이다.</p>\n<p>생각해보니 모두 저장할 필요 없이 <strong>각 행에 도착할 때마다 각 자리에 올 수 있는 가장 큰 값만 저장</strong>하면 되었다.</p>\n<p>예를들어 :</p>\n<p>2행에서 올 수 있는 가장 큰 값은 <code class=\"language-text\">5 + 5</code>, <code class=\"language-text\">5 + 6</code>, <code class=\"language-text\">5 + 7</code>, <code class=\"language-text\">3 + 8</code> => <code class=\"language-text\">[10, 11, 12, 11]</code></p>\n<p>3행에서 올 수 있는 가장 큰 값은 <code class=\"language-text\">12 + 4</code>, <code class=\"language-text\">12 + 3</code>, <code class=\"language-text\">11 + 2</code>, <code class=\"language-text\">12 + 1</code> => <code class=\"language-text\">[16, 15, 13, 13]</code></p>\n<p>따라서 매 행마다 고정된 계산 횟수만으로 답 <code class=\"language-text\">16</code>을 구할 수 있다.</p>\n<hr>\n<p>풀이:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">hopscotch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">board<span class=\"token punctuation\">,</span> size</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> final <span class=\"token operator\">=</span> board<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">scores<span class=\"token punctuation\">,</span> row</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> newScores <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    scores<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">score<span class=\"token punctuation\">,</span> iscore</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      row<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v<span class=\"token punctuation\">,</span> iv</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>iv <span class=\"token operator\">===</span> iscore<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>newScores<span class=\"token punctuation\">[</span>iv<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> newScores<span class=\"token punctuation\">[</span>iv<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        newScores<span class=\"token punctuation\">[</span>iv<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>score <span class=\"token operator\">+</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> newScores<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">scores</span> <span class=\"token operator\">=></span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>scores<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>final<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n <span class=\"token comment\">//아래는 테스트로 출력해 보기 위한 코드입니다.</span>\n<span class=\"token keyword\">var</span> board <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">hopscotch</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"linear-map\" style=\"position:relative;\"><a href=\"#linear-map\" aria-label=\"linear map permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Linear Map</h2>\n<p>어떤 범위의 숫자를 다른 범위로 변환하는 함수.</p>\n<p>아직 의도한대로 구현하지 못했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> math <span class=\"token keyword\">import</span> ceil\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">linear_map</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> input_min<span class=\"token punctuation\">,</span> input_max<span class=\"token punctuation\">,</span> output_min<span class=\"token punctuation\">,</span> output_max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    r <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> input_min<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>output_max <span class=\"token operator\">-</span> output_min<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>input_max <span class=\"token operator\">-</span> input_min<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> output_min\n    <span class=\"token keyword\">return</span> ceil<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span>\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> input_min<span class=\"token punctuation\">,</span> input_max<span class=\"token punctuation\">,</span> output_min<span class=\"token punctuation\">,</span> output_max <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'=== </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>input_min<span class=\"token punctuation\">}</span></span><span class=\"token string\">~</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>input_max<span class=\"token punctuation\">}</span></span><span class=\"token string\"> > </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>output_min<span class=\"token punctuation\">}</span></span><span class=\"token string\">~</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>output_max<span class=\"token punctuation\">}</span></span><span class=\"token string\"> ============'</span></span><span class=\"token punctuation\">)</span>\n    output_range <span class=\"token operator\">=</span> output_max <span class=\"token operator\">-</span> output_min <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>input_min<span class=\"token punctuation\">,</span> input_max <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        y <span class=\"token operator\">=</span> linear_map<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> input_min<span class=\"token punctuation\">,</span> input_max<span class=\"token punctuation\">,</span> output_min<span class=\"token punctuation\">,</span> output_max<span class=\"token punctuation\">)</span>\n        y1 <span class=\"token operator\">=</span> linear_map<span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> input_min<span class=\"token punctuation\">,</span> input_max<span class=\"token punctuation\">,</span> output_min<span class=\"token punctuation\">,</span> output_max<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> x <span class=\"token operator\">&lt;</span> input_max <span class=\"token keyword\">else</span> output_max <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'= x=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">}</span></span><span class=\"token string\">\\t\\ty=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>y<span class=\"token punctuation\">}</span></span><span class=\"token string\">\\t</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>y1<span class=\"token operator\">-</span>y<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>output_range<span class=\"token operator\">*</span><span class=\"token number\">100</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">.2f</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">%'</span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>아래는 출력 결과.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">=== 1~7 > 0~9 ============\n= x=1           y=0     20.00%\n= x=2           y=2     10.00%\n= x=3           y=3     20.00%\n= x=4           y=5     10.00%\n= x=5           y=6     20.00%\n= x=6           y=8     10.00%\n= x=7           y=9     10.00%\n=== 1~7 > 0~99 ============\n= x=1           y=0     17.00%\n= x=2           y=17    16.00%\n= x=3           y=33    17.00%\n= x=4           y=50    16.00%\n= x=5           y=66    17.00%\n= x=6           y=83    16.00%\n= x=7           y=99    1.00%\n=== 1~10 > 0~9 ============\n= x=1           y=0     10.00%\n= x=2           y=1     10.00%\n= x=3           y=2     10.00%\n= x=4           y=3     10.00%\n= x=5           y=4     10.00%\n= x=6           y=5     10.00%\n= x=7           y=6     10.00%\n= x=8           y=7     10.00%\n= x=9           y=8     10.00%\n= x=10          y=9     10.00%\n=== 1~10 > 0~99 ============\n= x=1           y=0     11.00%\n= x=2           y=11    11.00%\n= x=3           y=22    11.00%\n= x=4           y=33    11.00%\n= x=5           y=44    11.00%\n= x=6           y=55    11.00%\n= x=7           y=66    11.00%\n= x=8           y=77    11.00%\n= x=9           y=88    11.00%\n= x=10          y=99    1.00%</code></pre></div>\n<p>0<del>9로 변환하는 것과 0</del>99로 변환 결과가 다르다. 비율이 일정하게 나눠지지 않는다.\n마지막 x에 대해서 비율이 높거나 낮은 문제가 있다.</p>"}},"allMarkdownRemark":{"nodes":[{"headings":[{"value":"2016-11-16 캠퍼스 스타트업 스쿨의 \"구글 플레이에서 꼭 지켜야 할 두 가지\""}],"fields":{"slug":"/2016-11-16-google-campus-two-things-you-must-keep-in-google-play/"}},{"headings":[{"value":"2016-08-27 GDG WebTech Workshop \"측정하는 놈, 로딩하는 놈, 그리는 놈\""}],"fields":{"slug":"/2016-08-27-gdg-webtech-workshop-nnn/"}},{"headings":[{"value":"알고리즘"}],"fields":{"slug":"/algorithm/"}},{"headings":[{"value":"Airflow"}],"fields":{"slug":"/airflow/"}},{"headings":[{"value":"Amazon Redshift"}],"fields":{"slug":"/amazon-redshift/"}},{"headings":[{"value":"Architecture"}],"fields":{"slug":"/architecture/"}},{"headings":[{"value":"Angular JS"}],"fields":{"slug":"/angularjs/"}},{"headings":[{"value":"책"}],"fields":{"slug":"/book/"}},{"headings":[{"value":"Amazon Web Service"}],"fields":{"slug":"/aws/"}},{"headings":[{"value":"C# Programming Language"}],"fields":{"slug":"/c-sharp/"}},{"headings":[{"value":"The Cat Logic"}],"fields":{"slug":"/cat-logic/"}},{"headings":[{"value":"크롬 브라우저"}],"fields":{"slug":"/chrome-browser/"}},{"headings":[{"value":"Clean Code"}],"fields":{"slug":"/clean-code/"}},{"headings":[{"value":"코드 리뷰"}],"fields":{"slug":"/code-review/"}},{"headings":[{"value":"회사"}],"fields":{"slug":"/company/"}},{"headings":[{"value":"Computer Graphics"}],"fields":{"slug":"/computer-graphics/"}},{"headings":[{"value":"CI/CD"}],"fields":{"slug":"/continuous-integration-and-deployment/"}},{"headings":[{"value":"crontab"}],"fields":{"slug":"/crontab/"}},{"headings":[{"value":"CSS"}],"fields":{"slug":"/css/"}},{"headings":[{"value":"Data analysis"}],"fields":{"slug":"/data-analysis/"}},{"headings":[{"value":"CURL"}],"fields":{"slug":"/curl/"}},{"headings":[{"value":"Database"}],"fields":{"slug":"/database/"}},{"headings":[{"value":"자료구조"}],"fields":{"slug":"/data-structure/"}},{"headings":[{"value":"Design Pattern"}],"fields":{"slug":"/design-pattern/"}},{"headings":[{"value":"Elasticsearch"}],"fields":{"slug":"/elasticsearch/"}},{"headings":[{"value":"임베딩"}],"fields":{"slug":"/embeddings/"}},{"headings":[{"value":"DevOps"}],"fields":{"slug":"/devops/"}},{"headings":[{"value":"Docker"}],"fields":{"slug":"/docker/"}},{"headings":[{"value":"세미나 및 컨퍼런스 후기"}],"fields":{"slug":"/experience-review/"}},{"headings":[{"value":"GatsbyJS"}],"fields":{"slug":"/gatsbyjs/"}},{"headings":[{"value":"Game"}],"fields":{"slug":"/game/"}},{"headings":[{"value":"Git"}],"fields":{"slug":"/git/"}},{"headings":[{"value":"Godot Engine"}],"fields":{"slug":"/godot/"}},{"headings":[{"value":"GitHub"}],"fields":{"slug":"/github/"}},{"headings":[{"value":"Google Analytics"}],"fields":{"slug":"/google-analytics/"}},{"headings":[{"value":"Gradle"}],"fields":{"slug":"/gradle/"}},{"headings":[{"value":"Hardware"}],"fields":{"slug":"/hardware/"}},{"headings":[{"value":"Canvas"}],"fields":{"slug":"/html-canvas/"}},{"headings":[{"value":"HTML"}],"fields":{"slug":"/html/"}},{"headings":[{"value":"아이디어 방법론"}],"fields":{"slug":"/idea-methodology/"}},{"headings":[{"value":"영감을 주는 것"}],"fields":{"slug":"/inspiration/"}},{"headings":[{"value":"Ionic Framework"}],"fields":{"slug":"/ionic-framework/"}},{"headings":[{"value":"개발 용어"}],"fields":{"slug":"/jargon/"}},{"headings":[{"value":"Javascript & Typescript Programming Language"}],"fields":{"slug":"/javascript/"}},{"headings":[{"value":"Java Programming Language"}],"fields":{"slug":"/java/"}},{"headings":[{"value":"Jira"}],"fields":{"slug":"/jira/"}},{"headings":[{"value":"JetBrains"}],"fields":{"slug":"/jetbrains/"}},{"headings":[{"value":"Kubernetes"}],"fields":{"slug":"/kubernetes/"}},{"headings":[{"value":"Kotlin Programming Language"}],"fields":{"slug":"/kotlin/"}},{"headings":[{"value":"Language Server Protocol"}],"fields":{"slug":"/language-server-protocol/"}},{"headings":[{"value":"Large Language Model"}],"fields":{"slug":"/large-language-model/"}},{"headings":[{"value":"Mac OS"}],"fields":{"slug":"/mac-os/"}},{"headings":[{"value":"Logging"}],"fields":{"slug":"/logging/"}},{"headings":[{"value":"Linux"}],"fields":{"slug":"/linux/"}},{"headings":[{"value":"Mail"}],"fields":{"slug":"/mail/"}},{"headings":[{"value":"Machine Learning"}],"fields":{"slug":"/machine-learning/"}},{"headings":[{"value":"Markdown"}],"fields":{"slug":"/markdown/"}},{"headings":[{"value":"Network"}],"fields":{"slug":"/network/"}},{"headings":[{"value":"Node JS"}],"fields":{"slug":"/nodejs/"}},{"headings":[{"value":"Object Oriented Programming"}],"fields":{"slug":"/object-oriented-programming/"}},{"headings":[{"value":"Ollama"}],"fields":{"slug":"/ollama/"}},{"headings":[{"value":"OpenAI"}],"fields":{"slug":"/openai/"}},{"headings":[{"value":"Phidata"}],"fields":{"slug":"/phidata/"}},{"headings":[{"value":"Physics"}],"fields":{"slug":"/physics/"}},{"headings":[{"value":"개인적인 철학"}],"fields":{"slug":"/philosophy/"}},{"headings":[{"value":"Podman"}],"fields":{"slug":"/podman/"}},{"headings":[{"value":"Programming Convention"}],"fields":{"slug":"/programming-convention/"}},{"headings":[{"value":"PostgreSQL"}],"fields":{"slug":"/postgresql/"}},{"headings":[{"value":"Programming Paradigm"}],"fields":{"slug":"/programming-paradigm/"}},{"headings":[{"value":"Python Programming Language"}],"fields":{"slug":"/python/"}},{"headings":[{"value":"인용문"}],"fields":{"slug":"/quotation/"}},{"headings":[{"value":"Reactive Extensions (Reactive X, RX)"}],"fields":{"slug":"/reactive-extensions/"}},{"headings":[{"value":"React JS"}],"fields":{"slug":"/reactjs/"}},{"headings":[{"value":"Redis"}],"fields":{"slug":"/redis/"}},{"headings":[{"value":"Reverse Engineering"}],"fields":{"slug":"/reverse-engineering/"}},{"headings":[{"value":"Rust Programming Language"}],"fields":{"slug":"/rust/"}},{"headings":[{"value":"보안"}],"fields":{"slug":"/security/"}},{"headings":[{"value":"Sentry - APM & Error Tracking"}],"fields":{"slug":"/sentry/"}},{"headings":[{"value":"SCP"}],"fields":{"slug":"/scp/"}},{"headings":[{"value":"SFML"}],"fields":{"slug":"/sfml/"}},{"headings":[{"value":"Shell 명령어"}],"fields":{"slug":"/shell/"}},{"headings":[{"value":"우주"}],"fields":{"slug":"/space/"}},{"headings":[{"value":"소프트웨어 개발"}],"fields":{"slug":"/software-development/"}},{"headings":[{"value":"Swagger"}],"fields":{"slug":"/swagger/"}},{"headings":[{"value":"Spring framework"}],"fields":{"slug":"/spring-framework/"}},{"headings":[{"value":"시스템 장애"}],"fields":{"slug":"/system-failures/"}},{"headings":[{"value":"테스트 주도 개발 (Test Driven Development)"}],"fields":{"slug":"/test-driven-development/"}},{"headings":[{"value":"Testing"}],"fields":{"slug":"/testing/"}},{"headings":[{"value":"Tmux"}],"fields":{"slug":"/tmux/"}},{"headings":[{"value":"개발/비개발 도구"}],"fields":{"slug":"/tools/"}},{"headings":[{"value":"Treesitter"}],"fields":{"slug":"/treesitter/"}},{"headings":[{"value":"Unicode"}],"fields":{"slug":"/unicode/"}},{"headings":[{"value":"Unity 3D"}],"fields":{"slug":"/unity3d/"}},{"headings":[{"value":"Valve사의 신규 입사자를 위한 핸드북"}],"fields":{"slug":"/valve/"}},{"headings":[{"value":"Vim"}],"fields":{"slug":"/vim/"}},{"headings":[{"value":"VimEnter 2023"}],"fields":{"slug":"/vimenter-2023/"}},{"headings":[{"value":"VimWiki"}],"fields":{"slug":"/vimwiki/"}},{"headings":[{"value":"Vue JS"}],"fields":{"slug":"/vuejs/"}},{"headings":[{"value":"웹 개발"}],"fields":{"slug":"/web/"}},{"headings":[{"value":"WebGL"}],"fields":{"slug":"/webgl/"}},{"headings":[{"value":"Windows Subsystem for Linux (WSL)"}],"fields":{"slug":"/windows-subsystem-for-linux/"}},{"headings":[{"value":"Windows"}],"fields":{"slug":"/windows/"}},{"headings":[{"value":"추론 애플리케이션"}],"fields":{"slug":"/인공지능/용어/추론 애플리케이션/"}}]},"site":{"siteMetadata":{"gitHubRepositoryUrl":"https://github.com/edunga1/cat-logic"}}},"pageContext":{"id":"0b7ee942-2450-5865-a996-7410a0263627"}},"staticQueryHashes":[],"slicesMap":{}}