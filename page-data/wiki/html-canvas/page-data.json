{"componentChunkName":"component---src-components-gatsby-templates-wiki-tsx","path":"/wiki/html-canvas/","result":{"data":{"file":{"fields":{"gitLogs":[{"hash":"808b668bdb24ed2973e299cfd248bea90b2618c2","date":"2024-01-19T09:46:31+09:00"},{"hash":"a02a54eafad783e6b136ef1411166ef05398f5fc","date":"2023-10-23T19:55:03+09:00"},{"hash":"ae16ef5cd6388d8187725c9e1b91b04f23f77616","date":"2023-10-08T18:27:49Z"}]},"childMarkdownRemark":{"headings":[{"value":"Canvas"}],"fields":{"slug":"/html-canvas/","relatedDocs":[{"slug":"javascript","similarity":0.4090846979},{"slug":"web","similarity":0.4394229805},{"slug":"2016-08-27-gdg-webtech-workshop-nnn","similarity":0.4553592892},{"slug":"crontab","similarity":0.3660919366},{"slug":"gradle","similarity":0.3469880214},{"slug":"idea-methodology","similarity":0.336372272},{"slug":"podman","similarity":0.245678367},{"slug":"2016-11-16-google-campus-two-things-you-must-keep-in-google-play","similarity":0.4012405308},{"slug":"spring-framework","similarity":0.3979501429},{"slug":"aws","similarity":0.2836666389},{"slug":"git","similarity":0.3743948519},{"slug":"algorithm-practice","similarity":0.4860813988},{"slug":"docker","similarity":0.3593039595},{"slug":"scp","similarity":0.2076600839},{"slug":"mac-os","similarity":0.4241343252},{"slug":"testing","similarity":0.3708271392},{"slug":"machine-learning","similarity":0.396047096},{"slug":"devops","similarity":0.2861013158},{"slug":"python","similarity":0.2589970042},{"slug":"object-oriented-programming","similarity":0.4288111552},{"slug":"linux","similarity":0.1829984332},{"slug":"sfml","similarity":0.3713519942},{"slug":"windows","similarity":0.4222581554},{"slug":"markdown","similarity":0.3381444752},{"slug":"cat-logic","similarity":0.3689959765},{"slug":"vuejs","similarity":0.4105176261},{"slug":"shell","similarity":0.3890914594},{"slug":"html","similarity":0.3015455696},{"slug":"vimenter-2023","similarity":0.3566068064},{"slug":"data-analysis","similarity":0.3167662746},{"slug":"hardware","similarity":0.2634989825},{"slug":"programming-convention","similarity":0.381648992},{"slug":"webgl","similarity":0.5066394213},{"slug":"sentry","similarity":0.2459063092},{"slug":"valve","similarity":0.2411229331},{"slug":"security","similarity":0.1813083351},{"slug":"reactjs","similarity":0.4431295727},{"slug":"airflow","similarity":0.3003450458},{"slug":"computer-graphics","similarity":0.394990678},{"slug":"elasticsearch","similarity":0.2830051526},{"slug":"unicode","similarity":0.2920007699},{"slug":"logging","similarity":0.3103944852},{"slug":"tools","similarity":0.4450373338},{"slug":"programming-paradigm","similarity":0.4261829267},{"slug":"system-failures","similarity":0.2416888093},{"slug":"company","similarity":0.3213694388},{"slug":"amazon-redshift","similarity":0.1325908068},{"slug":"inspiration","similarity":0.3316110742},{"slug":"gatsbyjs","similarity":0.3651036538},{"slug":"design-pattern","similarity":0.4336734687},{"slug":"tmux","similarity":0.3882146856},{"slug":"game","similarity":0.3850239407},{"slug":"kubernetes","similarity":0.3495980136},{"slug":"nodejs","similarity":0.4286124701},{"slug":"continuous-integration-and-deployment","similarity":0.277920114},{"slug":"rust","similarity":0.3906950468},{"slug":"book","similarity":0.2840179485},{"slug":"jetbrains","similarity":0.3298555961},{"slug":"quotation","similarity":0.2276978542},{"slug":"postgresql","similarity":0.2909990175},{"slug":"jira","similarity":0.2775655007},{"slug":"large-language-model","similarity":0.3609629616},{"slug":"swagger","similarity":0.3027520567},{"slug":"architecture","similarity":0.3838272059},{"slug":"godot","similarity":0.4523042695},{"slug":"curl","similarity":0.3787004442},{"slug":"unity3d","similarity":0.5055914139},{"slug":"jargon","similarity":0.4397606084},{"slug":"language-server-protocol","similarity":0.3063133951},{"slug":"clean-code","similarity":0.4096670052},{"slug":"java","similarity":0.333915109},{"slug":"windows-subsystem-for-linux","similarity":0.4105951637},{"slug":"test-driven-development","similarity":0.217755017},{"slug":"philosophy","similarity":0.3952597784},{"slug":"github","similarity":0.3564186347},{"slug":"network","similarity":0.3240824273},{"slug":"ollama","similarity":0.3949770185},{"slug":"kotlin","similarity":0.3647129645},{"slug":"c-sharp","similarity":0.4853805252},{"slug":"angularjs","similarity":0.3983246512},{"slug":"treesitter","similarity":0.3108020299},{"slug":"vim","similarity":0.3187442518},{"slug":"ionic-framework","similarity":0.314249212},{"slug":"physics","similarity":0.555689914},{"slug":"html-canvas","similarity":1},{"slug":"reverse-engineering","similarity":0.2447731091},{"slug":"space","similarity":0.3172986794},{"slug":"css","similarity":0.3938928829},{"slug":"code-review","similarity":0.3303784343},{"slug":"software-development","similarity":0.3597200175},{"slug":"database","similarity":0.3364624287},{"slug":"reactive-extensions","similarity":0.3169343601},{"slug":"redis","similarity":0.2775976252},{"slug":"mail","similarity":0.163241092},{"slug":"experience-review","similarity":0.2513660634},{"slug":"google-analytics","similarity":0.2747755352},{"slug":"data-structure","similarity":0.320420125},{"slug":"vimwiki","similarity":0.2957399485},{"slug":"embeddings","similarity":0.3086854463},{"slug":"추론 애플리케이션","similarity":0.3278382935}]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#canvas\">Canvas</a></p>\n<ul>\n<li><a href=\"#coroutine\">Coroutine</a></li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"canvas\" style=\"position:relative;\"><a href=\"#canvas\" aria-label=\"canvas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Canvas</h1>\n<p>HTML Canvas.</p>\n<h2 id=\"coroutine\" style=\"position:relative;\"><a href=\"#coroutine\" aria-label=\"coroutine permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Coroutine</h2>\n<p>게임 엔진이나 프레임워크 없이 순수하게 Canvas 앱을 만들다 보면 페인포인트가 있다.\n특히 객체 제어에 대한 부분이다.</p>\n<p>여러개의 객체를 관리한다고 가정하고, 어느 객체는 10초 후에 업데이트하고 싶다.\n더 나아가서 객체를 특정 이벤트 후에 업데이트하고 싶다.\n특정 객체만 sleep 시키고 싶지만 다른 객체는 계속 업데이트하고 싶다.</p>\n<p>Unity의 경우 Coroutine을 이용하여 이러한 문제를 해결한다.</p>\n<p>Unity의 <a href=\"https://docs.unity3d.com/ScriptReference/WaitForSeconds.html\">WaitForSeconds</a>는 X초 후에 그 다음 코드를 실행한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">StartCoroutine</span><span class=\"token punctuation\">(</span><span class=\"token function\">waiter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">waiter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//Rotate 90 deg</span>\n    transform<span class=\"token punctuation\">.</span><span class=\"token function\">Rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Space<span class=\"token punctuation\">.</span>World<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//Wait for 4 seconds</span>\n    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//Rotate 40 deg</span>\n    transform<span class=\"token punctuation\">.</span><span class=\"token function\">Rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Space<span class=\"token punctuation\">.</span>World<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//Wait for 2 seconds</span>\n    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">WaitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//Rotate 20 deg</span>\n    transform<span class=\"token punctuation\">.</span><span class=\"token function\">Rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Space<span class=\"token punctuation\">.</span>World<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>처음에는 90도 회전을 하고, 4초 후에 40도 회전을 하고, 2초 후에 20도 회전을 하는 <a href=\"https://stackoverflow.com/questions/30056471/how-to-make-the-script-wait-sleep-in-a-simple-way-in-unity\">예시</a>이다.</p>\n<p><code class=\"language-text\">yield</code> 구문에서 X초간 suspend 되고, 그 후 다음 코드를 실행하고 있어서 매우 직관적인 코드를 작성할 수 있다.\n이러한 Coroutine은 <code class=\"language-text\">WaitForSeconds</code> 이외에도 프레임 기반이나 실제 시간 기반으로 suspend하는 등 여러가지가 있다.</p>\n<p>이 방식을 비슷하게 구현해 보았다.</p>\n<p><a href=\"https://github.com/Edunga1/practice-canvas-coroutine\">https://github.com/Edunga1/practice-canvas-coroutine</a></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">*</span><span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n  <span class=\"token keyword\">yield</span><span class=\"token operator\">*</span> <span class=\"token function\">waitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n  <span class=\"token keyword\">yield</span><span class=\"token operator\">*</span> <span class=\"token function\">waitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n  <span class=\"token keyword\">yield</span><span class=\"token operator\">*</span> <span class=\"token function\">waitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n  <span class=\"token keyword\">yield</span><span class=\"token operator\">*</span> <span class=\"token function\">waitForSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"}},"site":{"siteMetadata":{"gitHubRepositoryUrl":"https://github.com/edunga1/cat-logic"}}},"pageContext":{"id":"0b24e357-cf06-5f70-89b9-6afd97541d69"}},"staticQueryHashes":[],"slicesMap":{}}