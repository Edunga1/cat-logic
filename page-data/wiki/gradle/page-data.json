{"componentChunkName":"component---src-components-gatsby-templates-wiki-tsx","path":"/wiki/gradle/","result":{"data":{"file":{"fields":{"gitLogs":[{"hash":"0c31ab885e14d99a56ab469d0f9e0fff765f22a4","date":"2024-04-30T15:54:17Z"},{"hash":"e75fb0579996b2f84e0053955a99f5a8a3cfcc65","date":"2024-04-27T16:17:49Z"}]},"childMarkdownRemark":{"headings":[{"value":"Gradle"}],"fields":{"slug":"/gradle/","relatedDocs":[{"slug":"javascript","similarity":0.4692427262},{"slug":"web","similarity":0.4559768644},{"slug":"2016-08-27-gdg-webtech-workshop-nnn","similarity":0.4090210111},{"slug":"crontab","similarity":0.3846644675},{"slug":"gradle","similarity":1},{"slug":"idea-methodology","similarity":0.3991850485},{"slug":"2016-11-16-google-campus-two-things-you-must-keep-in-google-play","similarity":0.5037260556},{"slug":"spring-framework","similarity":0.5139780036},{"slug":"aws","similarity":0.3851989549},{"slug":"git","similarity":0.4183852501},{"slug":"algorithm-practice","similarity":0.3504401251},{"slug":"docker","similarity":0.3942504288},{"slug":"scp","similarity":0.2568890755},{"slug":"mac-os","similarity":0.4251018796},{"slug":"testing","similarity":0.5640289557},{"slug":"machine-learning","similarity":0.4135898312},{"slug":"devops","similarity":0.3633012316},{"slug":"python","similarity":0.4499749242},{"slug":"object-oriented-programming","similarity":0.462605374},{"slug":"linux","similarity":0.298866227},{"slug":"sfml","similarity":0.4397667495},{"slug":"windows","similarity":0.4454480041},{"slug":"markdown","similarity":0.454562833},{"slug":"cat-logic","similarity":0.4478195466},{"slug":"vuejs","similarity":0.2992619321},{"slug":"shell","similarity":0.5051253672},{"slug":"html","similarity":0.3747676385},{"slug":"vimenter-2023","similarity":0.4479188518},{"slug":"data-analysis","similarity":0.4120855273},{"slug":"hardware","similarity":0.2387333551},{"slug":"programming-convention","similarity":0.3360698881},{"slug":"webgl","similarity":0.3539664878},{"slug":"sentry","similarity":0.3256369318},{"slug":"valve","similarity":0.3229622909},{"slug":"security","similarity":0.2498585461},{"slug":"reactjs","similarity":0.4299761918},{"slug":"airflow","similarity":0.3925550649},{"slug":"computer-graphics","similarity":0.2109735934},{"slug":"elasticsearch","similarity":0.4305746094},{"slug":"unicode","similarity":0.2743776463},{"slug":"logging","similarity":0.3054682227},{"slug":"tools","similarity":0.5027109346},{"slug":"programming-paradigm","similarity":0.4757564368},{"slug":"system-failures","similarity":0.292768796},{"slug":"company","similarity":0.3094644589},{"slug":"amazon-redshift","similarity":0.2210395682},{"slug":"inspiration","similarity":0.3141480865},{"slug":"gatsbyjs","similarity":0.4435341957},{"slug":"design-pattern","similarity":0.5248268295},{"slug":"tmux","similarity":0.4497739548},{"slug":"game","similarity":0.3572817505},{"slug":"kubernetes","similarity":0.3755567787},{"slug":"nodejs","similarity":0.5470067496},{"slug":"continuous-integration-and-deployment","similarity":0.4726235233},{"slug":"rust","similarity":0.5032081729},{"slug":"book","similarity":0.3042650814},{"slug":"jetbrains","similarity":0.5512085783},{"slug":"quotation","similarity":0.2753730606},{"slug":"postgresql","similarity":0.3867356737},{"slug":"jira","similarity":0.3697605348},{"slug":"large-language-model","similarity":0.4904727501},{"slug":"swagger","similarity":0.4158093868},{"slug":"architecture","similarity":0.4647997384},{"slug":"curl","similarity":0.4411046113},{"slug":"unity3d","similarity":0.5413713272},{"slug":"jargon","similarity":0.4624691717},{"slug":"language-server-protocol","similarity":0.3606164943},{"slug":"clean-code","similarity":0.4234301904},{"slug":"java","similarity":0.4893954274},{"slug":"windows-subsystem-for-linux","similarity":0.4088508316},{"slug":"test-driven-development","similarity":0.4663824759},{"slug":"philosophy","similarity":0.4344301683},{"slug":"github","similarity":0.540322394},{"slug":"network","similarity":0.3277989092},{"slug":"ollama","similarity":0.4569716848},{"slug":"kotlin","similarity":0.6375130257},{"slug":"c-sharp","similarity":0.4180636971},{"slug":"angularjs","similarity":0.4542913312},{"slug":"vim","similarity":0.4940488751},{"slug":"ionic-framework","similarity":0.4104414453},{"slug":"physics","similarity":0.3743053483},{"slug":"html-canvas","similarity":0.3358818798},{"slug":"reverse-engineering","similarity":0.2325325096},{"slug":"space","similarity":0.3267687348},{"slug":"css","similarity":0.4091168305},{"slug":"code-review","similarity":0.4474847985},{"slug":"software-development","similarity":0.4587741156},{"slug":"database","similarity":0.4779878688},{"slug":"reactive-extensions","similarity":0.2457498115},{"slug":"redis","similarity":0.2568929301},{"slug":"mail","similarity":0.2916098101},{"slug":"experience-review","similarity":0.3760152719},{"slug":"google-analytics","similarity":0.3094981301},{"slug":"data-structure","similarity":0.3767674832},{"slug":"vimwiki","similarity":0.4313417942},{"slug":"embeddings","similarity":0.3412286411},{"slug":"추론 애플리케이션","similarity":0.3510688397}]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#gradle\">Gradle</a></p>\n<ul>\n<li><a href=\"#task\">Task</a></li>\n<li><a href=\"#java--jvm-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%97%90%EC%84%9C%EC%9D%98-%ED%85%8C%EC%8A%A4%ED%8A%B8\">Java &#x26; JVM 프로젝트에서의 테스트</a></li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"gradle\" style=\"position:relative;\"><a href=\"#gradle\" aria-label=\"gradle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gradle</h1>\n<p>빌드 자동화 도구.</p>\n<p><a href=\"https://docs.gradle.org/current/userguide/userguide.html\">https://docs.gradle.org/current/userguide/userguide.html</a></p>\n<p>JVM에서 가장 많이 사용되는 빌드 도구이다.</p>\n<p><a href=\"../java\">Java</a>, <a href=\"../kotlin\">Kotlin</a> 등 JVM 기반 언어뿐만 아니라 C++, Javascript 등 언어도 제공한다. 그런데 본 적은 없는 듯.</p>\n<p>Gradle 빌드 스크립트는 Groovy 또는 Kotlin으로 작성할 수 있다. 여기서는 Kotlin을 기준으로 작성했다.</p>\n<h2 id=\"task\" style=\"position:relative;\"><a href=\"#task\" aria-label=\"task permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Task</h2>\n<p>Task는 빌드가 실행되는 작업 단위이다.</p>\n<blockquote>\n<p>A task represents some independent unit of work that a build performs, such as compiling classes, creating a JAR, generating Javadoc, or publishing archives to a repository.</p>\n</blockquote>\n<p>예를들어 컴파일, JAR 파일 생성, 문서 생성, 모듈 배포 등이 있다.</p>\n<p><a href=\"https://docs.gradle.org/current/userguide/more_about_tasks.html\">https://docs.gradle.org/current/userguide/more_about_tasks.html</a></p>\n<p>스크립트로는 Task를 다음과 같이 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token comment\">// register는 Task를 등록한다.</span>\ntasks<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>'docFileJar'<span class=\"token punctuation\">,</span> Jar<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  group <span class=\"token operator\">=</span> 'documentation'\n  description <span class=\"token operator\">=</span> 'Generate documentation<span class=\"token punctuation\">.</span>'\n  archiveVersion <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n  archiveFileName <span class=\"token operator\">=</span> 'doc<span class=\"token operator\">-</span>files<span class=\"token punctuation\">.</span>jar'\n  from 'src<span class=\"token operator\">/</span>main<span class=\"token operator\">/</span>template'\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// named는 Task를 설정한다. 또는 `withType`으로 Task의 유형을 설정할 수 있다.</span>\ntasks<span class=\"token punctuation\">.</span><span class=\"token function\">named</span><span class=\"token punctuation\">(</span>'jar'<span class=\"token punctuation\">,</span> Jar<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  from docFileJar\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// DefaultTask 구현으로 Task를 구현한다.</span>\n<span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> DocFileCreationTask <span class=\"token operator\">:</span> <span class=\"token function\">DefaultTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Task 식별하는 방법은 여러 방법이 있다. Lazy, Eager 그리고 alias가 있어서, 문서를 보고 적절하게 사용해야 겠다.</p>\n<p>불필요한 Task 설정 피하기: <a href=\"https://docs.gradle.org/current/userguide/task_configuration_avoidance.html#sec:old_vs_new_configuration_api_overview\">https://docs.gradle.org/current/userguide/task_configuration_avoidance.html#sec:old_vs_new_configuration_api_overview</a></p>\n<h2 id=\"java--jvm-프로젝트에서의-테스트\" style=\"position:relative;\"><a href=\"#java--jvm-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%97%90%EC%84%9C%EC%9D%98-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"java  jvm 프로젝트에서의 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Java &#x26; JVM 프로젝트에서의 테스트</h2>\n<p>테스트 코드는 Gradle을 통해서 실행된다. 따라서 실행하거나 또는 제외할 패턴 등 옵션을 제공한다.</p>\n<p><a href=\"https://docs.gradle.org/current/userguide/java_testing.html\">https://docs.gradle.org/current/userguide/java_testing.html</a></p>\n<p>테스트의 Task 유형은 <code class=\"language-text\">Test</code>이다.\nJUnit, TestNG 등 프레임워크의 통합을 제공한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\">dependencies <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">testImplementation</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"org.junit.jupiter:junit-jupiter:5.7.1\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">testRuntimeOnly</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"org.junit.platform:junit-platform-launcher\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\ntasks<span class=\"token punctuation\">.</span>withType<span class=\"token operator\">&lt;</span>Test<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">useJUnitPlatform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    maxHeapSize <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"2g\"</span></span>\n\n    testLogging <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"passed\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"https://docs.gradle.org/current/javadoc/org/gradle/api/tasks/testing/Test.html#useJUnitPlatform-org.gradle.api.Action-\"><code class=\"language-text\">useJUnitPlatform</code></a>는 테스트를 JUnit 플랫폼으로 실행한다.</p>\n<p>JUnit 옵션은 <code class=\"language-text\">useJUnit</code>으로 설정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\">tasks<span class=\"token punctuation\">.</span>withType<span class=\"token operator\">&lt;</span>Test<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">useJUnitPlatform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    useJUnit <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">includeCategories</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"com.mycompany.junit.CategoryA\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>주로 사용하는 옵션은 다음과 같다.</p>\n<p><a href=\"https://docs.gradle.org/current/javadoc/org/gradle/api/tasks/testing/Test.html#setMaxHeapSize-java.lang.String-\"><code class=\"language-text\">maxHeapSize</code></a><br>\n테스트 JVM의 최대 Heap 크기를 설정한다.</p>"}},"site":{"siteMetadata":{"gitHubRepositoryUrl":"https://github.com/edunga1/cat-logic"}}},"pageContext":{"id":"7b98faad-7e90-5709-af92-e8dc893754ef"}},"staticQueryHashes":[],"slicesMap":{}}