{"componentChunkName":"component---src-components-gatsby-templates-wiki-tsx","path":"/wiki/rust/","result":{"data":{"markdownRemark":{"headings":[{"value":"Rust Programming Language"}],"fields":{"slug":"/rust/","relatedDocs":[{"slug":"javascript","similarity":0.4641050618},{"slug":"web","similarity":0.4533125977},{"slug":"2016-08-27-gdg-webtech-workshop-nnn","similarity":0.4302697343},{"slug":"crontab","similarity":0.3755548424},{"slug":"idea-methodology","similarity":0.3438453804},{"slug":"2016-11-16-google-campus-two-things-you-must-keep-in-google-play","similarity":0.4221060694},{"slug":"spring-framework","similarity":0.4841466922},{"slug":"aws","similarity":0.3836541967},{"slug":"git","similarity":0.4517841054},{"slug":"algorithm-practice","similarity":0.3041723988},{"slug":"docker","similarity":0.3865588721},{"slug":"scp","similarity":0.2441325319},{"slug":"mac-os","similarity":0.4197174995},{"slug":"testing","similarity":0.4428077342},{"slug":"machine-learning","similarity":0.4928280061},{"slug":"devops","similarity":0.3531321583},{"slug":"python","similarity":0.4683649597},{"slug":"object-oriented-programming","similarity":0.4805215099},{"slug":"linux","similarity":0.3177104391},{"slug":"sfml","similarity":0.7491498557},{"slug":"windows","similarity":0.4060387369},{"slug":"markdown","similarity":0.4531094235},{"slug":"cat-logic","similarity":0.4557420156},{"slug":"vuejs","similarity":0.2962871369},{"slug":"shell","similarity":0.4889846449},{"slug":"html","similarity":0.3430346781},{"slug":"vimenter-2023","similarity":0.4673991473},{"slug":"data-analysis","similarity":0.406084272},{"slug":"hardware","similarity":0.3565667263},{"slug":"programming-convention","similarity":0.4002032717},{"slug":"webgl","similarity":0.3647057132},{"slug":"sentry","similarity":0.3530637937},{"slug":"valve","similarity":0.3018081402},{"slug":"reactjs","similarity":0.4966432838},{"slug":"airflow","similarity":0.32692156},{"slug":"computer-graphics","similarity":0.2452764288},{"slug":"programming-philosophy","similarity":0.5179840937},{"slug":"elasticsearch","similarity":0.3893883437},{"slug":"unicode","similarity":0.3430571054},{"slug":"logging","similarity":0.2297713888},{"slug":"tools","similarity":0.5220144407},{"slug":"programming-paradigm","similarity":0.5472941261},{"slug":"system-failures","similarity":0.3512467766},{"slug":"amazon-redshift","similarity":0.2548526635},{"slug":"inspiration","similarity":0.426422918},{"slug":"gatsbyjs","similarity":0.483132884},{"slug":"design-pattern","similarity":0.4666662896},{"slug":"game","similarity":0.4134016254},{"slug":"kubernetes","similarity":0.342722515},{"slug":"llm-tools","similarity":0.4578802182},{"slug":"nodejs","similarity":0.538893326},{"slug":"continuous-integration-and-deployment","similarity":0.3666213557},{"slug":"rust","similarity":1},{"slug":"book","similarity":0.349523861},{"slug":"jetbrains","similarity":0.5186624904},{"slug":"quotation","similarity":0.295172819},{"slug":"postgresql","similarity":0.3457897723},{"slug":"jira","similarity":0.3025850493},{"slug":"swagger","similarity":0.3769457049},{"slug":"architecture","similarity":0.4823477839},{"slug":"unity3d","similarity":0.4211008072},{"slug":"jargon","similarity":0.4183258148},{"slug":"language-server-protocol","similarity":0.4246909411},{"slug":"clean-code","similarity":0.4699195011},{"slug":"java","similarity":0.4316729217},{"slug":"windows-subsystem-for-linux","similarity":0.5075252479},{"slug":"test-driven-development","similarity":0.2611493641},{"slug":"github","similarity":0.4698738748},{"slug":"network","similarity":0.3108548089},{"slug":"kotlin","similarity":0.4853907851},{"slug":"c-sharp","similarity":0.3527361711},{"slug":"angularjs","similarity":0.4393210465},{"slug":"vim","similarity":0.459063648},{"slug":"ionic-framework","similarity":0.2972930531},{"slug":"physics","similarity":0.3863321849},{"slug":"html-canvas","similarity":0.3335327136},{"slug":"reverse-engineering","similarity":0.2665315598},{"slug":"space","similarity":0.2788012155},{"slug":"css","similarity":0.3500512447},{"slug":"code-review","similarity":0.3934179879},{"slug":"software-development","similarity":0.5165639126},{"slug":"database","similarity":0.4763763356},{"slug":"reactive-extensions","similarity":0.2379177004},{"slug":"redis","similarity":0.3192864979},{"slug":"mail","similarity":0.29326383},{"slug":"experience-review","similarity":0.3223328566},{"slug":"google-analytics","similarity":0.251439934},{"slug":"data-structure","similarity":0.3910547212},{"slug":"vimwiki","similarity":0.4251424845},{"slug":"embeddings","similarity":0.4092591013},{"slug":"추론 애플리케이션","similarity":0.3287704357}]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#rust-programming-language\">Rust Programming Language</a></p>\n<ul>\n<li>\n<p><a href=\"#%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0\">환경 구축하기</a></p>\n<ul>\n<li><a href=\"#cargo\">Cargo</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\">프로젝트 시작하기</a></p>\n</li>\n<li>\n<p><a href=\"#journey-to-rust\">Journey to Rust</a></p>\n<ul>\n<li><a href=\"#lifetime\">Lifetime</a></li>\n<li><a href=\"#ownership\">Ownership</a></li>\n<li><a href=\"#null-safety\">Null Safety</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"rust-programming-language\" style=\"position:relative;\"><a href=\"#rust-programming-language\" aria-label=\"rust programming language permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rust Programming Language</h1>\n<p>Rust를 <a href=\"../sfml\">SFML</a>로 처음 시작중이다.</p>\n<p><a href=\"https://www.rust-lang.org/\">https://www.rust-lang.org/</a></p>\n<p>top-down 방식으로 배우기에는 Rust는 꽤 어려운 언어인 거 같다. 학습곡선이 높은 언어로 유명한 언어이기도 하다.</p>\n<h2 id=\"환경-구축하기\" style=\"position:relative;\"><a href=\"#%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0\" aria-label=\"환경 구축하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>환경 구축하기</h2>\n<p>Ubuntu on WSL, OSX 환경에서 주로 개발해서 Homebrew로 설치했다.</p>\n<p><code class=\"language-text\">rust</code> 모듈도 있지만, <code class=\"language-text\">rustup</code>을 사용하자. <code class=\"language-text\">rustup</code>은 <code class=\"language-text\">rust</code>의 버전을 관리해주는 툴이다.\n뿐만 아니라 다른 toolchain의 설치도 지원한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ brew <span class=\"token function\">install</span> rustup-init</code></pre></div>\n<p><code class=\"language-text\">rustup-init</code>을 설치하고, <code class=\"language-text\">rustup-init</code>을 실행하면 <code class=\"language-text\">rust</code>와 <code class=\"language-text\">cargo</code>를 설치할 수 있다.</p>\n<p>어떤 경로에 설치될 지 물어보는데, 그냥 Enter를 눌러서 기본 경로에 설치했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ rustup-init\n<span class=\"token comment\"># ...</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> Proceed with standard installation <span class=\"token punctuation\">(</span>default - just press enter<span class=\"token punctuation\">)</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> Customize installation\n<span class=\"token number\">3</span><span class=\"token punctuation\">)</span> Cancel installation</code></pre></div>\n<p><code class=\"language-text\">rustc</code>, <code class=\"language-text\">cargo</code>가 설치되었는지 확인한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">❯ rustc <span class=\"token parameter variable\">--version</span>\nrustc <span class=\"token number\">1.72</span>.1 <span class=\"token punctuation\">(</span>d5c2e9c34 <span class=\"token number\">2023</span>-09-13<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>Homebrew<span class=\"token punctuation\">)</span>\n\n\n❯ <span class=\"token function\">cargo</span> <span class=\"token parameter variable\">--version</span>\n<span class=\"token function\">cargo</span> <span class=\"token number\">1.72</span>.1</code></pre></div>\n<h3 id=\"cargo\" style=\"position:relative;\"><a href=\"#cargo\" aria-label=\"cargo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cargo</h3>\n<p>cargo는 패키지 매니저이다.</p>\n<p>패키지는 몇 개 사이트에서 찾을 수 있는 것으로 보인다.\nSFML을 기준으로는 다음 2개 사이트에서 찾을 수 있었다.</p>\n<ul>\n<li><a href=\"https://docs.rs/crate/sfml/latest\">https://docs.rs/crate/sfml/latest</a></li>\n<li><a href=\"https://crates.io/crates/sfml\">https://crates.io/crates/sfml</a></li>\n</ul>\n<p>docs.rs는 라이브러리 문서화에 특화되어 있는 것으로 보인다.\ncrates.io처럼 <code class=\"language-text\">cargo add sfml</code>와 같은 설치 명령어 안내 문구가 없다.</p>\n<h2 id=\"프로젝트-시작하기\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" aria-label=\"프로젝트 시작하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 시작하기</h2>\n<p><code class=\"language-text\">cargo</code> 명령어로 프로젝트를 생성하거나 패키지를 설치할 수 있다.</p>\n<p>다음은 <code class=\"language-text\">sfml-rust-start</code> 이름의 프로젝트를 생성하는 명령어이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">cargo</span> new sfml-rust-start\n     Created binary <span class=\"token punctuation\">(</span>application<span class=\"token punctuation\">)</span> <span class=\"token variable\"><span class=\"token variable\">`</span>sfml-rust-start<span class=\"token variable\">`</span></span> package\n\n$ <span class=\"token builtin class-name\">cd</span> sfml-rust-start\n\n$ tree <span class=\"token parameter variable\">-a</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token builtin class-name\">.</span>\n├── Cargo.toml\n├── .git\n├── .gitignore\n└── src\n    └── main.rs</code></pre></div>\n<p><code class=\"language-text\">Cargo.toml</code> 파일과 함께 git 저장소가 생성된다.\nhello world를 출력하는 기본적인 코드가 <code class=\"language-text\">src/main.rs</code>에 작성되어 있다.</p>\n<p>현재 디렉토리를 프로젝트로 만들고 싶다면 <code class=\"language-text\">cargo init</code> 명령어를 사용한다.</p>\n<p>Rust 코드를 실행해보자. <code class=\"language-text\">rustc</code>로 컴파일하면 실행 파일이 생성된다:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ rustc src/main.rs\n$ ./main\nHello, world<span class=\"token operator\">!</span></code></pre></div>\n<h2 id=\"journey-to-rust\" style=\"position:relative;\"><a href=\"#journey-to-rust\" aria-label=\"journey to rust permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Journey to Rust</h2>\n<p>24년의 시작을 Rust로 시작했다.</p>\n<p>문법을 따로 공부하지 않고, 무작정 사용해보고 있다. 물론 아무런 도움이 없는 것은 아니다.\n<a href=\"../machine-learning\">ChatGPT</a>와 <a href=\"../language-server-protocol\">LSP</a>를 적극 활용하고 있다.</p>\n<p>간단한 <a href=\"https://github.com/Edunga1/rust-sfml-practice\">SFML Rust</a> 프로젝트로 시작한다.</p>\n<p>ChatGPT가 아니었으면 더 험난했을 것 같다. ChatGPT 덕분에 언어의 러닝커브를 줄일 수 있었다.\n<code class=\"language-text\">trait</code>은 다른 언어에도 있는 개념이지만, lifetime은 예상치 못했다. LSP가 없었더라면 수 많은 에러에 만신창이가 되었을 것이다.</p>\n<p>immutable을 우선하는 것과 <a href=\"https://doc.rust-lang.org/rust-by-example/scope/lifetime/struct.html\">lifetime</a>을 보면 Rust가 메모리 안전성을 중요시하는 것을 알 거 같다.\n그래도 lifetime의 <code class=\"language-text\">&lt;'a></code>는 뭔가 어색하다. 특히 <code class=\"language-text\">'static</code>은 더욱.</p>\n<p>강의를 보거나 하지 않고, 필요할 때 마다 찾아보고 있어서, 정확한 정보가 아니겠지만 일단 여기에 정리해둔다.</p>\n<h3 id=\"lifetime\" style=\"position:relative;\"><a href=\"#lifetime\" aria-label=\"lifetime permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lifetime</h3>\n<p>C언어는 <a href=\"https://ko.m.wikipedia.org/wiki/%ED%97%88%EC%83%81_%ED%8F%AC%EC%9D%B8%ED%84%B0\">Dangling Pointer</a> 문제가 있다.<br>\n포인터가 유효한 객체를 가리키지 않는 것이다. 다음은 Wikipedia의 예시이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>dp <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">/* ... */</span>\n   <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">char</span> c<span class=\"token punctuation\">;</span>\n       dp <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n     <span class=\"token comment\">/* c falls out of scope */</span>\n     <span class=\"token comment\">/* dp is now a dangling pointer */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">dp</code>는 <code class=\"language-text\">c</code>를 가리키고 있지만, <code class=\"language-text\">c</code>가 스코프를 벗어나면 메모리 해제되고, <code class=\"language-text\">dp</code>는 더 이상 유효한 포인터가 아니다.</p>\n<p>Rust는 참조 수명을 통해 이 문제를 방지한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token comment\">// compile error</span>\n<span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> r<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n        r <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"r: {}\"</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 코드는 컴파일 되지 않는다. <code class=\"language-text\">x</code>의 수명이 <code class=\"language-text\">r</code>의 수명보다 짧기 때문이다.</p>\n<h3 id=\"ownership\" style=\"position:relative;\"><a href=\"#ownership\" aria-label=\"ownership permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ownership</h3>\n<p>Ownership은 메모리 문제를 해결하는 개념이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> foo <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, world!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> bar <span class=\"token operator\">=</span> foo<span class=\"token punctuation\">;</span>                           <span class=\"token comment\">// moved value from `foo` to `bar`</span>\n    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The value is: {:?}\"</span><span class=\"token punctuation\">,</span> foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// error</span>\n    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The value is: {:?}\"</span><span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// ok</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>코드는 컴파일 되지 않는다. <code class=\"language-text\">foo</code>의 소유권이 <code class=\"language-text\">bar</code>로 이동되었기 때문이다. 그래서 <code class=\"language-text\">foo</code>를 사용할 수 없다.</p>\n<p>해결하기 위해선 Copy, Clone, Borrowing 등을 사용해서 소유권을 해결해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> foo <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, world!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> bar <span class=\"token operator\">=</span> foo<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The value is: {:?}\"</span><span class=\"token punctuation\">,</span> foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Clone을 사용하여 해결한 코드이다.\n<code class=\"language-text\">clone()</code>은 rust에서 <code class=\"language-text\">Clone</code> trait를 구현한 것이다. 이제 <code class=\"language-text\">foo</code>, <code class=\"language-text\">bar</code> 모두 사용할 수 있다.</p>\n<h3 id=\"null-safety\" style=\"position:relative;\"><a href=\"#null-safety\" aria-label=\"null safety permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Null Safety</h3>\n<p>rust는 Null Safety 언어이다. Null 대신 <code class=\"language-text\">Option</code>을 사용하는데 여기에도 Ownership이 적용된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> opt <span class=\"token operator\">=</span> <span class=\"token class-name\">Some</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, Rust!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> opt<span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The value is: {:?}\"</span><span class=\"token punctuation\">,</span> opt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// error</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 코드는 컴파일 되지 않는다. <code class=\"language-text\">opt</code>의 소유권이 <code class=\"language-text\">value</code>로 이동되었기 때문이다. 그래서 <code class=\"language-text\">opt</code>를 더 이상 사용할 수 없다.</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> opt <span class=\"token operator\">=</span> <span class=\"token class-name\">Some</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, Rust!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> opt<span class=\"token punctuation\">.</span><span class=\"token function\">take</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The value is: {:?}\"</span><span class=\"token punctuation\">,</span> opt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// ok</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">take()</code>는 <code class=\"language-text\">Option</code>의 소유권을 가져가는 메소드이다. <code class=\"language-text\">opt</code>는 <code class=\"language-text\">None</code>이 된다.</p>"}},"pageContext":{"id":"4cd0f711-0eba-5100-a66d-4105c7b3b504"}},"staticQueryHashes":[],"slicesMap":{}}