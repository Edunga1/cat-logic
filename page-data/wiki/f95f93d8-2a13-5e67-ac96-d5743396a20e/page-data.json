{"componentChunkName":"component---src-pages-wiki-markdown-remark-id-tsx","path":"/wiki/f95f93d8-2a13-5e67-ac96-d5743396a20e/","result":{"data":{"markdownRemark":{"id":"f95f93d8-2a13-5e67-ac96-d5743396a20e","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0\">자료구조</a></p>\n</li>\n<li>\n<p><a href=\"#associative-array%EC%99%80-hash-table\">Associative Array와 Hash Table</a></p>\n<ul>\n<li>\n<p><a href=\"#associative-array-%EC%97%B0%EA%B4%80-%EB%B0%B0%EC%97%B4\">Associative Array (연관 배열)</a></p>\n<ul>\n<li><a href=\"#%ED%8A%B9%EC%A7%95\">특징</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#hash-table\">Hash Table</a></p>\n<ul>\n<li>\n<p><a href=\"#hash\">Hash?</a></p>\n<ul>\n<li><a href=\"#%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%98%88\">간단한 예</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B7%B8-%EC%99%B8\">그 외</a></p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#graph\">Graph</a></p>\n</li>\n<li>\n<p><a href=\"#heap\">Heap</a></p>\n</li>\n<li>\n<p><a href=\"#set---%EC%A7%91%ED%95%A9\">Set - 집합</a></p>\n</li>\n</ul>","html":"<h1>자료구조</h1>\n<h1>Associative Array와 Hash Table</h1>\n<h2>Associative Array (연관 배열)</h2>\n<p>Key-Value로 이루어진 자료구조. Hash Table, Dictionary로 불리기도 한다.</p>\n<h3>특징</h3>\n<p>Value는 중복되어도 상관 없으나 Key는 중복되어선 안된다. Key로 값을 찾기 때문.</p>\n<p>Key를 기준으로 정렬된다.</p>\n<h2>Hash Table</h2>\n<p>Key가 hash로 결정되는 연관 배열.</p>\n<h3>Hash?</h3>\n<p>일련의 정보를 문자열로 재배열 하는 것.</p>\n<p>암호화를 의미하는 것이 아님.</p>\n<p>One-way이므로 hash를 원래 데이터로 복구할 수 없음.</p>\n<p>같은 hash가 나타나는 현상인 충돌(collision)이 발생할 수 있음.</p>\n<h4>간단한 예</h4>\n<p>사용자 정보(성, 이름, 생년월일)을 표현하는 간단한 구조를 Hashing.</p>\n<pre><code>       Sam (19 + 1 + 13)\n     Jones (10 + 15 + 14 + 5)    = (77)\n04/04/1990 (04 + 04 + 1990)      = (1998)  Hash : 2075\n\n       Fay (6 + 1 + 25)\n     Adams (1 + 4 + 1 + 13 + 19) = (70)\n10/10/1985 (10 + 10 + 1985)      = (2005)  Hash : 2075\n</code></pre>\n<p>위 두 정보는 같은 hash를 가지는 충돌이 발생함.</p>\n<h3>그 외</h3>\n<p>충돌을 대비하는 알고리즘이 필요하다.</p>\n<h1>Graph</h1>\n<p>Vertex와 Edge로 이루어진 자료구조.</p>\n<p>Linked List, Graph, Heap은 모두 Graph의 일종.</p>\n<p>Edge에 가중치를 준 Weighted Graph도 있다.</p>\n<p>가중치를 준 그래프는 길찾기 알고리즘 등에 사용된다.</p>\n<h1>Heap</h1>\n<p>정렬된 완전 이진 트리.</p>\n<p>Priority Queue (우선순위 큐)라고 불리기도 함.</p>\n<p>내림차순 / 오름차순으로 정렬되었는지에 따라 Min Heap, Max Heap라고 불린다.</p>\n<p>Min Heap : 부모가 항상 자식보다 작은 값을 가짐.</p>\n<p>Max Heap : 부모가 항상 자식보다 큰 값을 가짐.</p>\n<ul>\n<li>Fully Sorted 상태는 아님 - 형제간 대소구분을 하지 않음</li>\n<li>insert 시점에 부모와 비교, swap, 전파(swap 후 영향이 있는 인접 노드들에 전파) 함</li>\n</ul>\n<h1>Set - 집합</h1>\n<p>해시 테이블의 일종</p>\n<ul>\n<li>정렬되지 않음</li>\n<li>Key, Index, Sequence가 없음</li>\n<li>중복을 허용하지 않음</li>\n<li>Fast lookup</li>\n</ul>"}},"pageContext":{"id":"f95f93d8-2a13-5e67-ac96-d5743396a20e","__params":{"id":"f95f93d8-2a13-5e67-ac96-d5743396a20e"}}},"staticQueryHashes":[],"slicesMap":{}}