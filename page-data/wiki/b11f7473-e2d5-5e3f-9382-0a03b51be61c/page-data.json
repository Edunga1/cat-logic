{"componentChunkName":"component---src-pages-wiki-markdown-remark-id-tsx","path":"/wiki/b11f7473-e2d5-5e3f-9382-0a03b51be61c/","result":{"data":{"markdownRemark":{"id":"b11f7473-e2d5-5e3f-9382-0a03b51be61c","tableOfContents":"<ul>\n<li><a href=\"#vue-js\">Vue JS</a></li>\n<li><a href=\"#transition\"><code>&#x3C;transition></code></a></li>\n</ul>","html":"<h1>Vue JS</h1>\n<h1><code>&#x3C;transition></code></h1>\n<p><code>&#x3C;transition></code>을 이용한 모달 컴포넌트:<br>\n<a href=\"https://kr.vuejs.org/v2/examples/modal.html\">https://kr.vuejs.org/v2/examples/modal.html</a></p>\n<p>transition 컴포넌트 설명:<br>\n<a href=\"https://kr.vuejs.org/v2/guide/transitions.html\">https://kr.vuejs.org/v2/guide/transitions.html</a></p>\n<p><code>&#x3C;transition></code> 안에 엘리먼트를 작성하면\n<code>transition</code> 컴포넌트로 출력/감춤에 대한 다양한 상태를 관리할 수 있다.</p>\n<pre><code>&#x3C;transition name=\"FOO\">\n  &#x3C;div>Hello&#x3C;/div>\n&#x3C;/transition>\n</code></pre>\n<p>단순히 컨텐츠를 wrapping만 하고, CSS로 여러가지 일을 할 수 있다.</p>\n<pre><code class=\"language-css\">.FOO-enter {\n  opacity: 0;\n}\n.FOO-leave-active {\n  opacity: 0;\n}\n.FOO-enter .FOO-container,\n.FOO-leave-active .FOO-container {\n  -webkit-transform: scale(1.1);\n  transform: scale(1.1);\n}\n</code></pre>\n<p>이렇게 CSS를 설정하고 <code>&#x3C;transition></code> 태그를\n<code>v-if</code> 등으로 감추고 출력해보면 CSS에 명세한 애니메이션이 적용된다.</p>"}},"pageContext":{"id":"b11f7473-e2d5-5e3f-9382-0a03b51be61c","__params":{"id":"b11f7473-e2d5-5e3f-9382-0a03b51be61c"}}},"staticQueryHashes":[],"slicesMap":{}}