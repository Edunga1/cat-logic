{"componentChunkName":"component---src-pages-wiki-markdown-remark-id-tsx","path":"/wiki/ca1e8a19-f64d-57a4-acd3-6e37375a6dbc/","result":{"data":{"markdownRemark":{"id":"ca1e8a19-f64d-57a4-acd3-6e37375a6dbc","tableOfContents":"<ul>\n<li>\n<p><a href=\"#mac-os\">Mac OS</a></p>\n</li>\n<li>\n<p><a href=\"#ngrok%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A7%A5%EC%97%90%EC%84%9C-remote-login-%ED%95%98%EA%B8%B0\"><code>ngrok</code>을 이용하여 맥에서 Remote Login 하기</a></p>\n<ul>\n<li><a href=\"#1-%EB%A7%A5%EB%B6%81%EC%84%9C%EB%B2%84%EC%97%90%EC%84%9C-ssh-%EB%A6%AC%EB%AA%A8%ED%8A%B8-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%ED%97%88%EC%9A%A9\">1. 맥북(서버)에서 SSH 리모트 로그인 허용</a></li>\n<li><a href=\"#2-ngrok%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A7%A5%EB%B6%81%EC%84%9C%EB%B2%84-forwading\">2. <code>ngrok</code>을 이용하여 맥북(서버) forwading</a></li>\n<li><a href=\"#3-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EC%97%90%EC%84%9C-%EC%A0%91%EC%86%8D%ED%95%98%EA%B8%B0\">3. 클라이언트에서 접속하기</a></li>\n</ul>\n</li>\n</ul>","html":"<h1>Mac OS</h1>\n<h1><code>ngrok</code>을 이용하여 맥에서 Remote Login 하기</h1>\n<p>공인 IP없이 맥북에 ssh로 접속하기 위해선 중계자가 필수적이다.\n<code>ngrok</code>이 <code>hole punching</code>을 통해서 서버와 클라이언트를 연결하는지는 모르겠지만,\n<code>ngrok</code>을 사용하면 쉽게 해결할 수 있다.</p>\n<h2>1. 맥북(서버)에서 SSH 리모트 로그인 허용</h2>\n<p>먼저, 서버가 되는 맥북은 ssh 연결을 허용해야 한다.\n<code>System Preference</code> -> <code>Sharing</code>에서 <code>Remote Login</code>을 체크하면,\n초록불이 들어오면서 <code>Remote Login: On</code>으로 상태가 출력된다.\n그리고 <code>Allow access for</code>에서 외부 연결에서 사용할 계정을 추가하거나 모두 허용하면 된다.</p>\n<h2>2. <code>ngrok</code>을 이용하여 맥북(서버) forwading</h2>\n<p>접\u001e속하려는 PC든 서버가되는 맥북이든 공유기를 사용하여 Private Network 내에 있을거기 때문에,\n공인 IP를 가진 누군가를 통해서 연결해야 한다. <code>ngrok</code>은 그런 일을 도와준다.\n무료고 유용하다.</p>\n<p>여기에서 어떤 일들이 가능한지 알 수 있다:<br>\n<a href=\"https://ngrok.com/product\">https://ngrok.com/product</a></p>\n<p>맥북(서버)만 설치하면 된다. Homebrew로 쉽게 설치할 수 있다.</p>\n<pre><code class=\"language-bash\">$ brew cask install ngrok\n</code></pre>\n<p>처음 설치했다면, ngrok 서비스에 로그인이 필요할 수 있다.\n일단 진행해보고 인증받으라고 한다면, 로그인 페이지로 들어가서:<br>\n<a href=\"https://dashboard.ngrok.com/user/login\">https://dashboard.ngrok.com/user/login</a></p>\n<p>로그인하면, 인증 방법이 나온다. <code>ngrok authtoken ...</code>이 나오는 부분을 찾으면 된다.</p>\n<p>설치 했으면 ssh port를 ngrok을 통해서 forwarding 되도록 한다.</p>\n<pre><code class=\"language-bash\">$ ngrok tcp 22\nngrok by @inconshreveable\n\nSession Status                online\nAccount                       username (Plan: Free)\nVersion                       2.3.25\nRegion                        United States (us)\nWeb Interface                 http://127.0.0.1:4040\nForwarding                    tcp://0.tcp.ngrok.io:18844 -> localhost:22\n\nConnections                   ttl     opn     rt1     rt5     p50     p90\n                              0       0       0.00    0.00    0.00    0.00\n</code></pre>\n<p>위 화면이 나오면 성공이다.</p>\n<p>만약 위에서 ssh remote login 옵션을 허용하지 않았으면 에러가 난다.</p>\n<h2>3. 클라이언트에서 접속하기</h2>\n<p><code>ssh</code> 명령어로 접속할 수 있다.</p>\n<pre><code class=\"language-bash\">$ ssh username@0.tcp.ngrok.io -p18844\n</code></pre>\n<p><code>username</code>은 1번에서 sharing에 허용한 사용자 이름을 입력하면 된다.\n<code>$ whoami</code> 명령어로도 알 수 있지만.</p>\n<p><code>18844</code>는 포트 번호인데, <code>$ ngroc tcp 22</code> 출력되는 화면에서 포트번호를 확인할 수 있다.</p>\n<pre><code class=\"language-bash\">...\nForwarding                    tcp://0.tcp.ngrok.io:18844 -> localhost:22\n...\n</code></pre>"}},"pageContext":{"id":"ca1e8a19-f64d-57a4-acd3-6e37375a6dbc","__params":{"id":"ca1e8a19-f64d-57a4-acd3-6e37375a6dbc"}}},"staticQueryHashes":[],"slicesMap":{}}