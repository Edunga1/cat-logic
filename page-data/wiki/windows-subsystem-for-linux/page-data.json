{"componentChunkName":"component---src-components-gatsby-templates-wiki-tsx","path":"/wiki/windows-subsystem-for-linux/","result":{"data":{"file":{"fields":{"gitLogLatestHash":"9256de5ce919e4974a871d8fd7beef470f998fd5","gitLogLatestDate":"2024-05-31T12:42:14Z"},"childMarkdownRemark":{"headings":[{"value":"Windows Subsystem for Linux (WSL)"}],"fields":{"slug":"/windows-subsystem-for-linux/","relatedDocs":[{"slug":"javascript","similarity":0.611969423},{"slug":"web","similarity":0.6042377027},{"slug":"2016-08-27-gdg-webtech-workshop-nnn","similarity":0.5503631011},{"slug":"crontab","similarity":0.5236311774},{"slug":"gradle","similarity":0.4059131519},{"slug":"idea-methodology","similarity":0.3694352556},{"slug":"2016-11-16-google-campus-two-things-you-must-keep-in-google-play","similarity":0.4493867253},{"slug":"spring-framework","similarity":0.4624757099},{"slug":"aws","similarity":0.4830273106},{"slug":"git","similarity":0.5559027044},{"slug":"algorithm-practice","similarity":0.3667778635},{"slug":"docker","similarity":0.6761357873},{"slug":"scp","similarity":0.3464575765},{"slug":"mac-os","similarity":0.583474679},{"slug":"testing","similarity":0.4645404771},{"slug":"machine-learning","similarity":0.638471391},{"slug":"devops","similarity":0.403331918},{"slug":"python","similarity":0.5010735909},{"slug":"object-oriented-programming","similarity":0.4506424655},{"slug":"linux","similarity":0.3736093747},{"slug":"sfml","similarity":0.5498088017},{"slug":"windows","similarity":0.5906732352},{"slug":"markdown","similarity":0.4975963298},{"slug":"cat-logic","similarity":0.509866946},{"slug":"vuejs","similarity":0.3164493233},{"slug":"shell","similarity":0.6310360144},{"slug":"html","similarity":0.3528555867},{"slug":"vimenter-2023","similarity":0.5530783022},{"slug":"data-analysis","similarity":0.4356173833},{"slug":"hardware","similarity":0.4034728961},{"slug":"programming-convention","similarity":0.4415414386},{"slug":"webgl","similarity":0.444277825},{"slug":"sentry","similarity":0.3345454434},{"slug":"valve","similarity":0.3237590627},{"slug":"security","similarity":0.4465818612},{"slug":"reactjs","similarity":0.4810557381},{"slug":"airflow","similarity":0.404309537},{"slug":"computer-graphics","similarity":0.3172450565},{"slug":"elasticsearch","similarity":0.389851289},{"slug":"unicode","similarity":0.3693364941},{"slug":"logging","similarity":0.3303526273},{"slug":"tools","similarity":0.6045382825},{"slug":"programming-paradigm","similarity":0.4840106867},{"slug":"system-failures","similarity":0.364041142},{"slug":"amazon-redshift","similarity":0.2928240568},{"slug":"inspiration","similarity":0.4203109813},{"slug":"gatsbyjs","similarity":0.6370224634},{"slug":"design-pattern","similarity":0.4840291099},{"slug":"game","similarity":0.4302924705},{"slug":"kubernetes","similarity":0.4866782289},{"slug":"llm-tools","similarity":0.5499539839},{"slug":"nodejs","similarity":0.635542292},{"slug":"continuous-integration-and-deployment","similarity":0.3947144585},{"slug":"rust","similarity":0.5600214571},{"slug":"book","similarity":0.3304235534},{"slug":"jetbrains","similarity":0.6069181502},{"slug":"quotation","similarity":0.3103764577},{"slug":"postgresql","similarity":0.4186187469},{"slug":"jira","similarity":0.316305442},{"slug":"swagger","similarity":0.3189282196},{"slug":"architecture","similarity":0.5353092261},{"slug":"unity3d","similarity":0.5664638542},{"slug":"jargon","similarity":0.4063741487},{"slug":"language-server-protocol","similarity":0.4888567216},{"slug":"clean-code","similarity":0.379139245},{"slug":"java","similarity":0.4613235336},{"slug":"windows-subsystem-for-linux","similarity":1},{"slug":"test-driven-development","similarity":0.2554282307},{"slug":"philosophy","similarity":0.4963711202},{"slug":"github","similarity":0.5652412417},{"slug":"network","similarity":0.446984394},{"slug":"kotlin","similarity":0.449040748},{"slug":"c-sharp","similarity":0.3800492072},{"slug":"angularjs","similarity":0.4300517637},{"slug":"vim","similarity":0.5837802292},{"slug":"ionic-framework","similarity":0.4615913939},{"slug":"physics","similarity":0.3949344665},{"slug":"html-canvas","similarity":0.4100082466},{"slug":"reverse-engineering","similarity":0.3303365029},{"slug":"space","similarity":0.3185028395},{"slug":"css","similarity":0.423491801},{"slug":"code-review","similarity":0.4423638573},{"slug":"software-development","similarity":0.5047797107},{"slug":"database","similarity":0.5546271644},{"slug":"reactive-extensions","similarity":0.1981220599},{"slug":"redis","similarity":0.328169724},{"slug":"mail","similarity":0.284272598},{"slug":"experience-review","similarity":0.3924952938},{"slug":"google-analytics","similarity":0.3100698151},{"slug":"data-structure","similarity":0.3512518817},{"slug":"vimwiki","similarity":0.561100092},{"slug":"embeddings","similarity":0.4142571145},{"slug":"추론 애플리케이션","similarity":0.4070293048}]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#windows-subsystem-for-linux-wsl\">Windows Subsystem for Linux (WSL)</a></p>\n<ul>\n<li>\n<p><a href=\"#vim-%EC%84%A4%EC%A0%95\">vim 설정</a></p>\n<ul>\n<li><a href=\"#clipboard-%EA%B3%B5%EC%9C%A0\">clipboard 공유</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#ubuntu-%EB%B2%84%EC%A0%84-%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C\">Ubuntu 버전 업그레이드</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%AC%B8%EC%A0%9C%EC%A0%90\">문제점</a></p>\n<ul>\n<li><a href=\"#http-%EA%B4%80%EB%A0%A8-%EB%AA%85%EB%A0%B9%EC%96%B4%EA%B0%80-%EB%8F%99%EC%9E%91%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EB%AC%B8%EC%A0%9C\">http 관련 명령어가 동작하지 않는 문제</a></li>\n<li><a href=\"#%ED%81%B4%EB%A6%BD%EB%B3%B4%EB%93%9C%EB%A5%BC-%EC%9D%BD%EC%96%B4%EC%84%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80%EB%A5%BC-%EC%83%9D%EC%84%B1%ED%95%A0-%EC%88%98-%EC%97%86%EB%8A%94-%EB%AC%B8%EC%A0%9C%ED%95%B4%EA%B2%B0%ED%95%98%EC%A7%80-%EB%AA%BB%ED%95%A8\">클립보드를 읽어서 이미지를 생성할 수 없는 문제(해결하지 못함)</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"windows-subsystem-for-linux-wsl\" style=\"position:relative;\"><a href=\"#windows-subsystem-for-linux-wsl\" aria-label=\"windows subsystem for linux wsl permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Windows Subsystem for Linux (WSL)</h1>\n<p>줄여서 WSL. 윈도우10부터 리눅스를 실행할 수 있다.</p>\n<h2 id=\"vim-설정\" style=\"position:relative;\"><a href=\"#vim-%EC%84%A4%EC%A0%95\" aria-label=\"vim 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>vim 설정</h2>\n<h3 id=\"clipboard-공유\" style=\"position:relative;\"><a href=\"#clipboard-%EA%B3%B5%EC%9C%A0\" aria-label=\"clipboard 공유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>clipboard 공유</h3>\n<p>vim register와 wsl 환경에서 클립보드를 공유하려면 vim 설정에 다음과 같이 추가한다:</p>\n<div class=\"gatsby-highlight\" data-language=\"vim\"><pre class=\"language-vim\"><code class=\"language-vim\"><span class=\"token keyword\">let</span> g<span class=\"token punctuation\">:</span><span class=\"token builtin\">clipboard</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  \\   <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'win32yank-wsl'</span><span class=\"token punctuation\">,</span>\n  \\   <span class=\"token string\">'copy'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  \\      <span class=\"token string\">'+'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'win32yank.exe -i --crlf'</span><span class=\"token punctuation\">,</span>\n  \\      <span class=\"token string\">'*'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'win32yank.exe -i --crlf'</span><span class=\"token punctuation\">,</span>\n  \\    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  \\   <span class=\"token string\">'paste'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  \\      <span class=\"token string\">'+'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'win32yank.exe -o --lf'</span><span class=\"token punctuation\">,</span>\n  \\      <span class=\"token string\">'*'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'win32yank.exe -o --lf'</span><span class=\"token punctuation\">,</span>\n  \\   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  \\   <span class=\"token string\">'cache_enabled'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  \\ <span class=\"token punctuation\">}</span></code></pre></div>\n<p>win32yank.exe 실행파일 필요.</p>\n<p>다음은 <a href=\"../mac-os\">MacOS</a> 등 다른 환경에서 동작하지 않도록, WSL 확인하는 함수이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"vim\"><pre class=\"language-vim\"><code class=\"language-vim\"><span class=\"token keyword\">function</span><span class=\"token operator\">!</span> s<span class=\"token punctuation\">:</span><span class=\"token function\">IsWSL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unix\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">filereadable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/proc/version\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> <span class=\"token builtin\">lines</span> <span class=\"token operator\">=</span> <span class=\"token function\">readfile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/proc/version\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=~</span> <span class=\"token string\">\"Microsoft\"</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">endif</span>\n  <span class=\"token keyword\">endif</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">endfunction</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>s<span class=\"token punctuation\">:</span><span class=\"token function\">IsWSL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">finish</span>\n<span class=\"token keyword\">endif</span></code></pre></div>\n<p>ref. <a href=\"https://github.com/Edunga1/dotfiles/blob/master/vim/vim-include/_wsl.vim\">https://github.com/Edunga1/dotfiles/blob/master/vim/vim-include/_wsl.vim</a></p>\n<h2 id=\"ubuntu-버전-업그레이드\" style=\"position:relative;\"><a href=\"#ubuntu-%EB%B2%84%EC%A0%84-%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C\" aria-label=\"ubuntu 버전 업그레이드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ubuntu 버전 업그레이드</h2>\n<p>18.04 -> 20.04로 업그레이드했다. 이슈가 하나 있었는데, WSL 보다는 ubuntu 이슈라 봐도 될 듯.</p>\n<p>업그레이드를 위해선 <code class=\"language-text\">sudo do-release-upgrade -d</code> 명령어만 입력하면 되는데..</p>\n<p>문제는 <strong>설치된 패키지들을 모두 최신 버전으로 업데이트</strong> 해야 된다.</p>\n<p>명령어를 통해서 모든 패키지를 업데이트하자:</p>\n<ul>\n<li><code class=\"language-text\">sudo apt update</code></li>\n<li><code class=\"language-text\">sudo apt upgrade</code></li>\n<li><code class=\"language-text\">sudo apt dist-upgrade</code></li>\n</ul>\n<p>패키지 업데이트 도중 개인 패키지 저장소인 PPA(Personal Package Archive)를 추가한 적이 있고, 이 PPA가 사라졌으면 에러가 난다.\n404로 출력된다. 따라서 업데이트 하지 않도록 PPA를 제거해야 했다.</p>\n<p>나는 <code class=\"language-text\">CMake</code>를 PPA를 통해서 설치 했었는데. 이 PPA가 사라져서 에러가 발생했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Ubuntu <span class=\"token number\">18.04</span> ppa.launchpad.net/george-edison55/cmake-3.x/ubuntu bionic Release <span class=\"token number\">404</span> Not Found <span class=\"token punctuation\">[</span>IP: <span class=\"token number\">91.189</span>.95.83 <span class=\"token number\">80</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>제거하기 위해 2가지 방법이 있다.</p>\n<ul>\n<li>파일을 지운다: <code class=\"language-text\">sudo rm /etc/apt/sources.list.d/george-edison55-ubuntu-cmake-3_x-bionic.list</code></li>\n<li>명령어를 통해 지운다: <code class=\"language-text\">sudo add-apt-repository --remove ppa:whatever/ppa</code></li>\n</ul>\n<p>문제는 PPA 이름을 알아야 하는데, 에러 메시지에 출력되지 않는다. 패키지 이름만 포함될 뿐이다. 그냥 에러메시지로 검색해서 지우는게 속편하다...</p>\n<p>이제 <code class=\"language-text\">sudo do-release-upgrade -d</code> 하면 되는데..</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token class-name\">Checking</span> <span class=\"token keyword\">for</span> a new <span class=\"token class-name\">Ubuntu</span> release\n<span class=\"token class-name\">You</span> have not rebooted after updating a package which requires a reboot<span class=\"token punctuation\">.</span> <span class=\"token class-name\">Please</span> reboot before upgrading<span class=\"token punctuation\">.</span></code></pre></div>\n<p>업그레이드 후에는 리붓 해야한다... :(</p>\n<h2 id=\"문제점\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C%EC%A0%90\" aria-label=\"문제점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제점</h2>\n<p><a href=\"../mac-os\">MacOS</a>와 다르게 문제점들이 좀 있다.\n<a href=\"../jetbrains\">Jetbrains IDE</a>가 WSL 경로에서 프로젝트를 실행을 잘 지원하지 못한다거나\nWSL 내 git 바이너리가 윈도우 마운트 경로(<code class=\"language-text\">/mnt/c/...</code>로 접근한다)에서 느린 문제 등 매끄럽지 못한 부분이 있다.</p>\n<p>운영체제 지식이 부족해서 정확한 원인을 알기 어렵다.\n특히 윈도우와 리눅스 두 환경을 고려해야 하다보니 관련된 정보를 찾기가 어렵다.</p>\n<h3 id=\"http-관련-명령어가-동작하지-않는-문제\" style=\"position:relative;\"><a href=\"#http-%EA%B4%80%EB%A0%A8-%EB%AA%85%EB%A0%B9%EC%96%B4%EA%B0%80-%EB%8F%99%EC%9E%91%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EB%AC%B8%EC%A0%9C\" aria-label=\"http 관련 명령어가 동작하지 않는 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>http 관련 명령어가 동작하지 않는 문제</h3>\n<p><code class=\"language-text\">curl</code> <code class=\"language-text\">wget</code> <code class=\"language-text\">docker pull</code>  <code class=\"language-text\">npm install</code> 등 명령어가 일체 먹히지 않는다.\n<code class=\"language-text\">git</code> 등 간접적으로 http를 사용하는 명렁어도 동작하지 않는다.</p>\n<p><a href=\"https://github.com/microsoft/WSL/issues/4285#issuecomment-522201021\">https://github.com/microsoft/WSL/issues/4285#issuecomment-522201021</a></p>\n<ol>\n<li><code class=\"language-text\">/etc/wsl.conf</code> 파일을 만들고 아래 내용을 추가한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[network]\ngenerateResolvConf = false</code></pre></div>\n<ol start=\"2\">\n<li>window에서 <code class=\"language-text\">wsl --shutdown</code> 실행하고 다시 wsl을 실행한다.</li>\n<li><code class=\"language-text\">/etc/resolv.conf</code> 파일을 만들거나, 존재한다면 내용을 아래와 같이 수정하고 2번을 반복한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nameserver 8.8.8.8</code></pre></div>\n<h3 id=\"클립보드를-읽어서-이미지를-생성할-수-없는-문제해결하지-못함\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%A6%BD%EB%B3%B4%EB%93%9C%EB%A5%BC-%EC%9D%BD%EC%96%B4%EC%84%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80%EB%A5%BC-%EC%83%9D%EC%84%B1%ED%95%A0-%EC%88%98-%EC%97%86%EB%8A%94-%EB%AC%B8%EC%A0%9C%ED%95%B4%EA%B2%B0%ED%95%98%EC%A7%80-%EB%AA%BB%ED%95%A8\" aria-label=\"클립보드를 읽어서 이미지를 생성할 수 없는 문제해결하지 못함 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클립보드를 읽어서 이미지를 생성할 수 없는 문제(해결하지 못함)</h3>\n<p><code class=\"language-text\">xclip</code> 명령어로 클립보드를 읽어서 파일로 저장할 수 있다. 하지만 WSL에서는 그게 안된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ xclip <span class=\"token parameter variable\">-selection</span> clipboard <span class=\"token parameter variable\">-t</span> image/png <span class=\"token parameter variable\">-out</span> <span class=\"token operator\">></span> <span class=\"token string\">\"image.png\"</span>\nError: target image/png not available</code></pre></div>\n<p>원인은 클립보드와 관련되어 있는 것 같다.\n개인용 지식 관리 도구인 <a href=\"https://github.com/dendronhq/dendron/issues/2310\">Dendron이라는 저장소의 이슈</a>에서 같은 문제를 겪은 사람이 있었다.</p>\n<blockquote>\n<p>Then, when I tried to paste the image, it said no image on clipboard. That is because the image is on my windows clipboard, not in the ubuntu instance.</p>\n</blockquote>\n<p>ubuntu의 클립보드에는 이미지가 없기 때문이라고 한다.</p>\n<p>이건 알려진 문제점이다. 클립보드가 공유되지 않기 때문에 WSL에서는 powershell을 통해서 읽어야 한다:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ powershell.exe Get-Clipboard\nhello world</code></pre></div>\n<p>powershell 클립보드 접근을 통해서 이미지를 만드는 몇가지 예제를 찾았지만, 동작하지는 않았다:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ powershell.exe <span class=\"token parameter variable\">-Command</span> <span class=\"token string\">\"(Get-Clipboard -Format image).Save('foo.png')\"</span></code></pre></div>\n<p>ChatGPT에도 물어봤는데, 다음과 같이 말한다:</p>\n<blockquote>\n<p>WSL(Windows Subsystem for Linux)에서 윈도우의 클립보드에 복사된 이미지를 파일로 생성하려면 몇 가지 단계를 따라야 합니다.</p>\n<p>먼저, 복사된 이미지 데이터를 얻으려면 PowerShell의 Get-Clipboard 명령을 사용할 수 있습니다. 그러나 이 명령은 텍스트 데이터만 WSL로 전달할 수 있으므로, 이미지 데이터를 먼저 Base64로 인코딩해야 합니다.\n... 생략</p>\n</blockquote>\n<p>C# 스크립트를 작성하고, powershell을 통해서 실행하는 절차를 설명하는데, 복잡한 방법이라 판단해서 보류했다.</p>"}}},"pageContext":{"id":"dd92b7d1-125d-548a-bf6a-d41b0f877267"}},"staticQueryHashes":[],"slicesMap":{}}