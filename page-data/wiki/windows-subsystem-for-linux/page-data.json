{"componentChunkName":"component---src-components-gatsby-templates-wiki-tsx","path":"/wiki/windows-subsystem-for-linux/","result":{"data":{"markdownRemark":{"headings":[{"value":"Windows Subsystem for Linux (WSL)"}],"fields":{"relatedDocs":[{"slug":"javascript","similarity":0.7915479617},{"slug":"web","similarity":0.7822290336},{"slug":"2016-08-27-gdg-webtech-workshop-nnn","similarity":0.7922751498},{"slug":"crontab","similarity":0.8342651111},{"slug":"idea-methodology","similarity":0.7662325382},{"slug":"2016-11-16-google-campus-two-things-you-must-keep-in-google-play","similarity":0.7795407427},{"slug":"spring-framework","similarity":0.7720366313},{"slug":"aws","similarity":0.8412286593},{"slug":"git","similarity":0.8374523837},{"slug":"algorithm-practice","similarity":0.7387516937},{"slug":"docker","similarity":0.8685469362},{"slug":"scp","similarity":0.7899723773},{"slug":"mac-os","similarity":0.8650096284},{"slug":"testing","similarity":0.7774775659},{"slug":"machine-learning","similarity":0.82991118},{"slug":"devops","similarity":0.786910119},{"slug":"python","similarity":0.8377797341},{"slug":"object-oriented-programming","similarity":0.7584606699},{"slug":"linux","similarity":0.831303867},{"slug":"sfml","similarity":0.7967579566},{"slug":"windows","similarity":0.8056276917},{"slug":"markdown","similarity":0.8181656995},{"slug":"cat-logic","similarity":0.8015215264},{"slug":"vuejs","similarity":0.7545244694},{"slug":"shell","similarity":0.8406743788},{"slug":"html","similarity":0.7622772122},{"slug":"data-analysis","similarity":0.7619916556},{"slug":"hardware","similarity":0.7719484794},{"slug":"programming-convention","similarity":0.804422157},{"slug":"webgl","similarity":0.7747361726},{"slug":"sentry","similarity":0.7960488439},{"slug":"valve","similarity":0.7727647508},{"slug":"reactjs","similarity":0.8155873936},{"slug":"airflow","similarity":0.7911671248},{"slug":"computer-graphics","similarity":0.7424803251},{"slug":"programming-philosophy","similarity":0.8214182327},{"slug":"elasticsearch","similarity":0.7703135083},{"slug":"unicode","similarity":0.7517058085},{"slug":"logging","similarity":0.7535743156},{"slug":"tools","similarity":0.8356095293},{"slug":"programming-paradigm","similarity":0.7687814087},{"slug":"inspiration","similarity":0.8092169},{"slug":"gatsbyjs","similarity":0.8051731001},{"slug":"design-pattern","similarity":0.7509350707},{"slug":"game","similarity":0.7698876331},{"slug":"kubernetes","similarity":0.8024672566},{"slug":"nodejs","similarity":0.8094926134},{"slug":"continuous-integration-and-deployment","similarity":0.8087707291},{"slug":"rust","similarity":0.8195797804},{"slug":"book","similarity":0.7655448685},{"slug":"jetbrains","similarity":0.8415320327},{"slug":"quotation","similarity":0.7535693478},{"slug":"jira","similarity":0.7527052949},{"slug":"swagger","similarity":0.7533740887},{"slug":"architecture","similarity":0.8037738995},{"slug":"unity3d","similarity":0.8273305158},{"slug":"jargon","similarity":0.7629062651},{"slug":"language-server-protocol","similarity":0.839172918},{"slug":"clean-code","similarity":0.764489356},{"slug":"java","similarity":0.7540766309},{"slug":"windows-subsystem-for-linux","similarity":1},{"slug":"test-driven-development","similarity":0.7597249226},{"slug":"github","similarity":0.7806627915},{"slug":"network","similarity":0.7894635781},{"slug":"kotlin","similarity":0.7628696595},{"slug":"c-sharp","similarity":0.7377552119},{"slug":"angularjs","similarity":0.7698922693},{"slug":"vim","similarity":0.8521160858},{"slug":"ionic-framework","similarity":0.8256984336},{"slug":"physics","similarity":0.7623923988},{"slug":"html-canvas","similarity":0.7467942417},{"slug":"reverse-engineering","similarity":0.7622353581},{"slug":"css","similarity":0.7669908911},{"slug":"code-review","similarity":0.8035112005},{"slug":"software-development","similarity":0.7962813018},{"slug":"database","similarity":0.7802716589},{"slug":"reactive-extensions","similarity":0.7101871084},{"slug":"redis","similarity":0.7489426658},{"slug":"mail","similarity":0.7567937002},{"slug":"experience-review","similarity":0.7823321255},{"slug":"google-analytics","similarity":0.7625946493},{"slug":"data-structure","similarity":0.7297867048},{"slug":"vimwiki","similarity":0.84364646}]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#windows-subsystem-for-linux-wsl\">Windows Subsystem for Linux (WSL)</a></p>\n<ul>\n<li>\n<p><a href=\"#vim-%EC%84%A4%EC%A0%95\">vim 설정</a></p>\n<ul>\n<li><a href=\"#clipboard-%EA%B3%B5%EC%9C%A0\">clipboard 공유</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#http-%EA%B4%80%EB%A0%A8-%EB%AA%85%EB%A0%B9%EC%96%B4%EA%B0%80-%EB%8F%99%EC%9E%91%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EB%AC%B8%EC%A0%9C\">http 관련 명령어가 동작하지 않는 문제</a></p>\n</li>\n<li>\n<p><a href=\"#ubuntu-%EB%B2%84%EC%A0%84-%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C\">Ubuntu 버전 업그레이드</a></p>\n</li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"windows-subsystem-for-linux-wsl\" style=\"position:relative;\"><a href=\"#windows-subsystem-for-linux-wsl\" aria-label=\"windows subsystem for linux wsl permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Windows Subsystem for Linux (WSL)</h1>\n<p>줄여서 WSL. 윈도우10부터 리눅스를 실행할 수 있다.</p>\n<h2 id=\"vim-설정\" style=\"position:relative;\"><a href=\"#vim-%EC%84%A4%EC%A0%95\" aria-label=\"vim 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>vim 설정</h2>\n<h3 id=\"clipboard-공유\" style=\"position:relative;\"><a href=\"#clipboard-%EA%B3%B5%EC%9C%A0\" aria-label=\"clipboard 공유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>clipboard 공유</h3>\n<deckgo-highlight-code language=\"vim\"  >\n          <code slot=\"code\">let g:clipboard = {\n          \\   &#39;name&#39;: &#39;win32yank-wsl&#39;,\n          \\   &#39;copy&#39;: {\n          \\      &#39;+&#39;: &#39;win32yank.exe -i --crlf&#39;,\n          \\      &#39;*&#39;: &#39;win32yank.exe -i --crlf&#39;,\n          \\    },\n          \\   &#39;paste&#39;: {\n          \\      &#39;+&#39;: &#39;win32yank.exe -o --lf&#39;,\n          \\      &#39;*&#39;: &#39;win32yank.exe -o --lf&#39;,\n          \\   },\n          \\   &#39;cache_enabled&#39;: 0,\n          \\ }</code>\n        </deckgo-highlight-code>\n<p>win32yank.exe 실행파일 필요.</p>\n<p>다른 플랫폼 설정에 섞이지 않도록 예외처리 하자:</p>\n<deckgo-highlight-code language=\"vim\"  >\n          <code slot=\"code\">function! s:IsWSL()\n  if has(&quot;unix&quot;) &amp;&amp; filereadable(&quot;/proc/version&quot;)\n    let lines = readfile(&quot;/proc/version&quot;)\n    if lines[0] =~ &quot;Microsoft&quot;\n      return 1\n    endif\n  endif\n  return 0\nendfunction\n\nif !s:IsWSL()\n  finish\nendif</code>\n        </deckgo-highlight-code>\n<p>ref. <a href=\"https://github.com/Edunga1/dotfiles/blob/master/vim/vim-include/_wsl.vim\">https://github.com/Edunga1/dotfiles/blob/master/vim/vim-include/_wsl.vim</a></p>\n<h2 id=\"http-관련-명령어가-동작하지-않는-문제\" style=\"position:relative;\"><a href=\"#http-%EA%B4%80%EB%A0%A8-%EB%AA%85%EB%A0%B9%EC%96%B4%EA%B0%80-%EB%8F%99%EC%9E%91%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EB%AC%B8%EC%A0%9C\" aria-label=\"http 관련 명령어가 동작하지 않는 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>http 관련 명령어가 동작하지 않는 문제</h2>\n<p><code>curl</code> <code>wget</code> <code>docker pull</code>  <code>npm install</code> 등 명령어가 일체 먹히지 않는다.\n<code>git</code> 등 간접적으로 http를 사용하는 명렁어도 동작하지 않는다.</p>\n<p><a href=\"https://github.com/microsoft/WSL/issues/4285#issuecomment-522201021\">https://github.com/microsoft/WSL/issues/4285#issuecomment-522201021</a></p>\n<ol>\n<li><code>/etc/wsl.conf</code> 파일을 만들고 아래 내용을 추가한다.</li>\n</ol>\n<deckgo-highlight-code language=\"conf\"  >\n          <code slot=\"code\">[network]\ngenerateResolvConf = false</code>\n        </deckgo-highlight-code>\n<ol start=\"2\">\n<li>window에서 <code>wsl --shutdown</code> 실행하고 다시 wsl을 실행한다.</li>\n<li><code>/etc/resolv.conf</code> 파일을 만들거나, 존재한다면 내용을 아래와 같이 수정하고 2번을 반복한다.</li>\n</ol>\n<deckgo-highlight-code language=\"conf\"  >\n          <code slot=\"code\">nameserver 8.8.8.8</code>\n        </deckgo-highlight-code>\n<h2 id=\"ubuntu-버전-업그레이드\" style=\"position:relative;\"><a href=\"#ubuntu-%EB%B2%84%EC%A0%84-%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C\" aria-label=\"ubuntu 버전 업그레이드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ubuntu 버전 업그레이드</h2>\n<p>18.04 -> 20.04로 업그레이드했다. 이슈가 하나 있었는데, WSL 보다는 ubuntu 이슈라 봐도 될 듯.</p>\n<p>업그레이드를 위해선 <code>sudo do-release-upgrade -d</code> 명령어만 입력하면 되는데..</p>\n<p>문제는 <strong>설치된 패키지들을 모두 최신 버전으로 업데이트</strong> 해야 된다.</p>\n<p>명령어를 통해서 모든 패키지를 업데이트하자:</p>\n<ul>\n<li><code>sudo apt update</code></li>\n<li><code>sudo apt upgrade</code></li>\n<li><code>sudo apt dist-upgrade</code></li>\n</ul>\n<p>패키지 업데이트 도중 개인 패키지 저장소인 PPA(Personal Package Archive)를 추가한 적이 있고, 이 PPA가 사라졌으면 에러가 난다.\n404로 출력된다. 따라서 업데이트 하지 않도록 PPA를 제거해야 했다.</p>\n<p>나는 <code>CMake</code>를 PPA를 통해서 설치 했었는데. 이 PPA가 사라져서 에러가 발생했다.</p>\n<deckgo-highlight-code language=\"bash\"  >\n          <code slot=\"code\">Ubuntu 18.04 ppa.launchpad.net/george-edison55/cmake-3.x/ubuntu bionic Release 404 Not Found [IP: 91.189.95.83 80]</code>\n        </deckgo-highlight-code>\n<p>제거하기 위해 2가지 방법이 있다.</p>\n<ul>\n<li>파일을 지운다: <code>sudo rm /etc/apt/sources.list.d/george-edison55-ubuntu-cmake-3_x-bionic.list</code></li>\n<li>명령어를 통해 지운다: <code>sudo add-apt-repository --remove ppa:whatever/ppa</code></li>\n</ul>\n<p>문제는 PPA 이름을 알아야 하는데, 에러 메시지에 출력되지 않는다. 패키지 이름만 포함될 뿐이다. 그냥 에러메시지로 검색해서 지우는게 속편하다...</p>\n<p>이제 <code>sudo do-release-upgrade -d</code> 하면 되는데..</p>\n<deckgo-highlight-code language=\"rust\"  >\n          <code slot=\"code\">Checking for a new Ubuntu release\nYou have not rebooted after updating a package which requires a reboot. Please reboot before upgrading.</code>\n        </deckgo-highlight-code>\n<p>업그레이드 후에는 리붓 해야한다... :(</p>"}},"pageContext":{"id":"6dd38d95-69ea-5949-843b-1b685fca79de"}},"staticQueryHashes":[],"slicesMap":{}}