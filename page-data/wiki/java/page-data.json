{"componentChunkName":"component---src-components-gatsby-templates-wiki-tsx","path":"/wiki/java/","result":{"data":{"file":{"fields":{"gitLogs":[{"hash":"99d921091dd640ea9df06c0f92583b84028544a5","date":"2024-10-30T09:49:11+09:00"},{"hash":"0667ab02ab5bbcfc2a7e4082e2a9c755fede574c","date":"2024-08-14T11:10:23Z"},{"hash":"c554cc7c94e192dabf364484a9eeea8e165a0cc5","date":"2024-05-09T11:17:37Z"},{"hash":"d117161c8777260ca84daf0fbc4bab6537ee32f8","date":"2023-12-10T07:41:38Z"},{"hash":"ee34ec929ca5967011a21066c20f3f1b9f8c7fbe","date":"2023-07-22T21:53:32Z"},{"hash":"e200a64234770c06ffa5e0c8123117d22a8d4df3","date":"2023-07-02T08:45:07Z"},{"hash":"ab7787a0c7bc0c4ab6555a73e95283e61d2baa19","date":"2023-06-18T11:39:53Z"},{"hash":"f8bf378083a512e439de6eb9d87c8a258b69eba4","date":"2023-06-11T11:46:42Z"},{"hash":"d908e7d0911ae26e03b89694c9b9a9469921469b","date":"2023-05-20T13:04:28Z"},{"hash":"1c0076771741c60459928003d891993f44d2e9c7","date":"2023-03-05T15:03:57Z"}]},"childMarkdownRemark":{"headings":[{"value":"Java Programming Language"}],"fields":{"slug":"/java/","relatedDocs":[{"slug":"reverse-engineering","similarity":0.2463606165},{"slug":"kubernetes","similarity":0.3870664766},{"slug":"hardware","similarity":0.2323871906},{"slug":"network","similarity":0.2973427409},{"slug":"physics","similarity":0.2923406612},{"slug":"experience-review","similarity":0.2862895735},{"slug":"css","similarity":0.3122859169},{"slug":"gradle","similarity":0.4061385759},{"slug":"redis","similarity":0.30883608},{"slug":"apm","similarity":0.3372055369},{"slug":"bk","similarity":0.2026257037},{"slug":"embeddings","similarity":0.2964244367},{"slug":"openai","similarity":0.2840714855},{"slug":"clean-code","similarity":0.3371919105},{"slug":"scp","similarity":0.249806286},{"slug":"vimwiki","similarity":0.2450538341},{"slug":"amazon-redshift","similarity":0.283575532},{"slug":"github","similarity":0.2733027722},{"slug":"jargon","similarity":0.4342046568},{"slug":"windows","similarity":0.2387450955},{"slug":"test-driven-development","similarity":0.2658944129},{"slug":"c-sharp","similarity":0.3280617657},{"slug":"linux","similarity":0.2600755248},{"slug":"testing","similarity":0.4214564603},{"slug":"valve","similarity":0.2859594822},{"slug":"sentry","similarity":0.274463545},{"slug":"phidata","similarity":0.2895723916},{"slug":"continuous-integration-and-deployment","similarity":0.31468314},{"slug":"object-oriented-programming","similarity":0.5372028035},{"slug":"webgl","similarity":0.2519205308},{"slug":"quotation","similarity":0.2893817183},{"slug":"airflow","similarity":0.261983079},{"slug":"reactjs","similarity":0.3531186809},{"slug":"unicode","similarity":0.2811759398},{"slug":"sfml","similarity":0.3408677291},{"slug":"data-structure","similarity":0.3859289152},{"slug":"java","similarity":1},{"slug":"system-failures","similarity":0.3029175605},{"slug":"swagger","similarity":0.3826450248},{"slug":"postgresql","similarity":0.3903999068},{"slug":"vimenter-2023","similarity":0.2747477851},{"slug":"reactive-extensions","similarity":0.3131343592},{"slug":"windows-subsystem-for-linux","similarity":0.2663692006},{"slug":"mail","similarity":0.270953431},{"slug":"godot","similarity":0.3527156654},{"slug":"unity3d","similarity":0.2792061548},{"slug":"code-review","similarity":0.289226323},{"slug":"language-server-protocol","similarity":0.3273311953},{"slug":"programming-paradigm","similarity":0.4958550962},{"slug":"elasticsearch","similarity":0.3849882379},{"slug":"idea-methodology","similarity":0.3231133256},{"slug":"software-development","similarity":0.4323143698},{"slug":"docker","similarity":0.3917574264},{"slug":"devops","similarity":0.2832562487},{"slug":"html-canvas","similarity":0.2769316736},{"slug":"podman","similarity":0.2896119905},{"slug":"ionic-framework","similarity":0.291874273},{"slug":"data-analysis","similarity":0.398909458},{"slug":"large-language-model","similarity":0.2785643297},{"slug":"security","similarity":0.2451974345},{"slug":"html","similarity":0.3504736551},{"slug":"computer-graphics","similarity":0.2600049354},{"slug":"vuejs","similarity":0.2876425546},{"slug":"crontab","similarity":0.2686873637},{"slug":"database","similarity":0.4604125703},{"slug":"추론 애플리케이션","similarity":0.3067220838},{"slug":"python","similarity":0.3801052957},{"slug":"tools","similarity":0.328985242},{"slug":"nodejs","similarity":0.3638825484},{"slug":"ollama","similarity":0.2529483559},{"slug":"web","similarity":0.3698775086},{"slug":"space","similarity":0.2360112958},{"slug":"rust","similarity":0.3954348738},{"slug":"treesitter","similarity":0.3412520782},{"slug":"spring-framework","similarity":0.4996368617},{"slug":"chrome-browser","similarity":0.2933075731},{"slug":"markdown","similarity":0.2929569789},{"slug":"shell","similarity":0.3073261264},{"slug":"logging","similarity":0.2900321741},{"slug":"jetbrains","similarity":0.4406517187},{"slug":"google-analytics","similarity":0.2150525951},{"slug":"company","similarity":0.3014824039},{"slug":"curl","similarity":0.2731474718},{"slug":"inspiration","similarity":0.367947002},{"slug":"philosophy","similarity":0.3997211464},{"slug":"programming-convention","similarity":0.3911580956},{"slug":"tmux","similarity":0.2844499516},{"slug":"2016-11-16-google-campus-two-things-you-must-keep-in-google-play","similarity":0.3519974082},{"slug":"git","similarity":0.3105801378},{"slug":"kotlin","similarity":0.5164048995},{"slug":"design-pattern","similarity":0.5296784222},{"slug":"cat-logic","similarity":0.3271030387},{"slug":"machine-learning","similarity":0.2630452194},{"slug":"algorithm","similarity":0.2646357885},{"slug":"javascript","similarity":0.4566031543},{"slug":"mac-os","similarity":0.3108006144},{"slug":"architecture","similarity":0.4096196288},{"slug":"playwright","similarity":0.1796540691},{"slug":"jira","similarity":0.3639766467},{"slug":"book","similarity":0.3394481374},{"slug":"model-context-protocol","similarity":0.2996904236},{"slug":"vim","similarity":0.3027467081},{"slug":"angularjs","similarity":0.4066803171},{"slug":"2016-08-27-gdg-webtech-workshop-nnn","similarity":0.3330871837},{"slug":"vim-plugins","similarity":0.3250150272},{"slug":"aws","similarity":0.370751941},{"slug":"gatsbyjs","similarity":0.3377196352},{"slug":"game","similarity":0.3263228261}]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#java-programming-language\">Java Programming Language</a></p>\n<ul>\n<li>\n<p><a href=\"#%EA%B0%9C%EB%85%90\">개념</a></p>\n<ul>\n<li><a href=\"#servlet-container-web-container\">Servlet Container (Web Container)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#jakarta-ee-aka-java-ee\">Jakarta EE (a.k.a. Java EE)</a></p>\n<ul>\n<li>\n<p><a href=\"#%ED%8F%AC%ED%95%A8%ED%95%98%EB%8A%94-%EA%B8%B0%EC%88%A0\">포함하는 기술</a></p>\n<ul>\n<li>\n<p><a href=\"#http\">HTTP</a></p>\n</li>\n<li>\n<p><a href=\"#jndi-java-naming-and-directory-interface\">JNDI (Java Naming and Directory Interface)</a></p>\n</li>\n<li>\n<p><a href=\"#jta-java-transaction-api\">JTA (Java Transaction API)</a></p>\n</li>\n<li>\n<p><a href=\"#jakarta-persistence-api-jpa-java-persistence-api\">Jakarta Persistence API (JPA, Java Persistence API)</a></p>\n<ul>\n<li>\n<p><a href=\"#jpa-repository\">JPA Repository</a></p>\n<ul>\n<li><a href=\"#query-methods\">Query Methods</a></li>\n<li><a href=\"#query\">@Query</a></li>\n<li><a href=\"#query-by-example-qbe\">Query By Example (QBE)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#querydsl\">QueryDSL</a></p>\n</li>\n<li>\n<p><a href=\"#querydsl-sql\">querydsl-sql</a></p>\n<ul>\n<li><a href=\"#infobip-spring-data-querydsl\">infobip-spring-data-querydsl</a></li>\n<li><a href=\"#jpa-%EA%B8%B0%EB%B3%B8-%EB%A9%94%EC%84%9C%EB%93%9C%EB%8A%94-%EB%8B%A4%EB%A5%B8-method%EC%9D%98-%EC%9C%84%EC%9E%84-%EC%9A%A9%EC%9C%BC%EB%A1%9C%EB%A7%8C-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%9C%EB%8B%A4\">JPA 기본 메서드는 다른 method의 위임 용으로만 사용해야 한다.</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%A4%91%EC%B2%A9-%ED%81%B4%EB%9E%98%EC%8A%A4nested-classes\">중첩 클래스(Nested Classes)</a></p>\n</li>\n<li>\n<p><a href=\"#jpa\">JPA</a></p>\n<ul>\n<li>\n<p><a href=\"#db%EC%97%90-%EC%BF%BC%EB%A6%AC%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\">DB에 쿼리하는 방법</a></p>\n</li>\n<li>\n<p><a href=\"#jpa%EC%99%80-mybatis\">JPA와 MyBatis</a></p>\n</li>\n<li>\n<p><a href=\"#trouble-shooting\">Trouble Shooting</a></p>\n<ul>\n<li><a href=\"#warning-model-domain-type-or-valid-projection-interface-expected-here\">Warning: 'Model' domain type or valid projection interface expected here</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%86%A0%EB%B9%84%EC%9D%98-%EB%B4%84-tv---%EB%B0%B1%EA%B8%B0%EC%84%A0%EB%8B%98\">토비의 봄 TV - 백기선님</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%86%A0%EB%B9%84%EC%9D%98-%EB%B4%84-tv---%EA%B9%80%EC%98%81%ED%95%9C%EB%8B%98\">토비의 봄 TV - 김영한님</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#reference\">Reference</a></p>\n</li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"java-programming-language\" style=\"position:relative;\"><a href=\"#java-programming-language\" aria-label=\"java programming language permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Java Programming Language</h1>\n<h2 id=\"개념\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%85%90\" aria-label=\"개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개념</h2>\n<h3 id=\"servlet-container-web-container\" style=\"position:relative;\"><a href=\"#servlet-container-web-container\" aria-label=\"servlet container web container permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Servlet Container (Web Container)</h3>\n<p><a href=\"https://en.wikipedia.org/wiki/Web_container\">https://en.wikipedia.org/wiki/Web_container</a></p>\n<blockquote>\n<p>A web container (also known as a servlet container;[1] and compare \"webcontainer\"[2]) is the component of a web server that interacts with Jakarta Servlets.</p>\n</blockquote>\n<p>웹 컨테이너는 웹 서버의 컴포넌트로, Servlet을 실행하는 역할을 한다. 서블릿 컨테이너라고도 한다.</p>\n<p>톰캣 서버도 Servlet Container이다.</p>\n<p>Spring Boot에서 제공하는 <code class=\"language-text\">TomcatServletWebServerFactory</code>를 사용하면 쉽게 컨테이너를 만들고, 시작할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Application</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">ServletWebServerFactory</span> factory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TomcatServletWebServerFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">WebServer</span> server <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">getWebServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    server<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>ref. <a href=\"https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory.html\">TomcatServletWebServerFactory</a>\nref. <a href=\"https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/web/server/WebServer.html\">WebServer</a></p>\n<h2 id=\"jakarta-ee-aka-java-ee\" style=\"position:relative;\"><a href=\"#jakarta-ee-aka-java-ee\" aria-label=\"jakarta ee aka java ee permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jakarta EE (a.k.a. Java EE)</h2>\n<p><a href=\"https://www.samsungsds.com/kr/insights/java_jakarta.html\">https://www.samsungsds.com/kr/insights/java_jakarta.html</a></p>\n<p>EE는 Enterprise Edition의 줄임말이다.</p>\n<p>명칭을 Java EE -> Jakarta EE 명칭을 변경하면서, 오픈소스로 전환했다.</p>\n<p>기업(enterise)용 애플리케이션을 개발 및 실행하기 위한 기술과 환경을 제공한다.</p>\n<h3 id=\"포함하는-기술\" style=\"position:relative;\"><a href=\"#%ED%8F%AC%ED%95%A8%ED%95%98%EB%8A%94-%EA%B8%B0%EC%88%A0\" aria-label=\"포함하는 기술 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>포함하는 기술</h3>\n<p><a href=\"https://jakarta.ee/specifications/platform/8/platform-spec-8.html#a84\">https://jakarta.ee/specifications/platform/8/platform-spec-8.html#a84</a></p>\n<h4 id=\"http\" style=\"position:relative;\"><a href=\"#http\" aria-label=\"http permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP</h4>\n<p>클라이언트 사이드 API를 <code class=\"language-text\">java.net</code>으로 제공한다. 서버 사이드는 Jakarta Servlet, Jakarta Server Pages,Jakarta Server Faces 등에서 제공한다.</p>\n<p>ref. <a href=\"https://reflectoring.io/comparison-of-java-http-clients/\">https://reflectoring.io/comparison-of-java-http-clients/</a></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">HttpClient</span> client <span class=\"token operator\">=</span> <span class=\"token class-name\">HttpClient</span><span class=\"token punctuation\">.</span><span class=\"token function\">newBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">version</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Version</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HTTP_2</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">followRedirects</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Redirect</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NORMAL</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">HttpRequest</span> request <span class=\"token operator\">=</span> <span class=\"token class-name\">HttpRequest</span><span class=\"token punctuation\">.</span><span class=\"token function\">newBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">.</span><span class=\"token function\">uri</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">URI</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">URLConstants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">.</span><span class=\"token function\">GET</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">URLConstants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">API_KEY_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">URLConstants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">API_KEY_VALUE</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">.</span><span class=\"token function\">timeout</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Duration</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\nclient<span class=\"token punctuation\">.</span><span class=\"token function\">sendAsync</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BodyHandlers</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">thenApply</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpResponse</span><span class=\"token operator\">::</span><span class=\"token function\">body</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">thenAccept</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"jndi-java-naming-and-directory-interface\" style=\"position:relative;\"><a href=\"#jndi-java-naming-and-directory-interface\" aria-label=\"jndi java naming and directory interface permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JNDI (Java Naming and Directory Interface)</h4>\n<blockquote>\n<p>JNDI는 디렉터리 서비스에서 제공하는 데이터 및 객체를 발견하고 참고하기 위한 자바 API다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">ds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DriverManagerDataSource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jdbc:h2:mem:mydb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"jta-java-transaction-api\" style=\"position:relative;\"><a href=\"#jta-java-transaction-api\" aria-label=\"jta java transaction api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JTA (Java Transaction API)</h4>\n<p><code class=\"language-text\">javax.transaction</code> 패키지로 제공한다.</p>\n<p><a href=\"https://www.baeldung.com/spring-vs-jta-transactional\">Transactional Annotations: Spring vs. JTA</a>\n스프링이 제공하는 <code class=\"language-text\">org.springframework.transaction.annotation.Transactional</code>. JTA가 제공하는 <code class=\"language-text\">javax.transaction.Transactional</code>. 두 개를 비교하는 글.</p>\n<p>Spring Framework 4.0부터 JTA 1.2를 지원해서 Spring에서 JTA Transactional을 사용할 수 있다고 한다.</p>\n<h4 id=\"jakarta-persistence-api-jpa-java-persistence-api\" style=\"position:relative;\"><a href=\"#jakarta-persistence-api-jpa-java-persistence-api\" aria-label=\"jakarta persistence api jpa java persistence api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jakarta Persistence API (JPA, Java Persistence API)</h4>\n<h5 id=\"jpa-repository\" style=\"position:relative;\"><a href=\"#jpa-repository\" aria-label=\"jpa repository permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JPA Repository</h5>\n<p>JPA를 이용해서 어떤 방법으로 데이터를 가져오는지 알아본다.</p>\n<p>쿼리를 실행하는데 @Query, <strong>Query Method</strong>. 크게 두 가지 방법을 사용하는 거 같다.</p>\n<h6 id=\"query-methods\" style=\"position:relative;\"><a href=\"#query-methods\" aria-label=\"query methods permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query Methods</h6>\n<p><a href=\"https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#repositories.query-methods\">https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#repositories.query-methods</a></p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token annotation builtin\">@Repository</span>\n<span class=\"token keyword\">interface</span> FooRepository<span class=\"token operator\">:</span> JpaRepository<span class=\"token operator\">&lt;</span>Foo<span class=\"token punctuation\">,</span> Int<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">fun</span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> List<span class=\"token operator\">&lt;</span>Foo<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>메서드 이름이 쿼리를 대신한다. <code class=\"language-text\">type</code>이라는 컬럼으로 조건을 걸고 싶으면\n<code class=\"language-text\">fun findAllByType(type: String)</code> 형태가 된다.</p>\n<h6 id=\"query\" style=\"position:relative;\"><a href=\"#query\" aria-label=\"query permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@Query</h6>\n<p><a href=\"https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#jpa.query-methods.at-query\">https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#jpa.query-methods.at-query</a></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n  f\n<span class=\"token keyword\">FROM</span> Foo f\n<span class=\"token keyword\">WHERE</span>\n  <span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> :<span class=\"token keyword\">type</span></code></pre></div>\n<p>SQL과 비슷해 보이지만, JPQL라는 이름을 사용한다. 메서드 이름은 직접 정해줄 수 있다.\n<code class=\"language-text\">:type</code>이 인자를 의미한다.  항상 alias를 사용해야 하고, <code class=\"language-text\">SELECT *</code> 를 Alias 이름으로 대체한다.</p>\n<p>Query Method 마찬가지지만, 컬럼 정보는 Entity를 참조한다.</p>\n<p>인자로 <code class=\"language-text\">nativeQuery = true</code>를 넘겨주면 JPQL 대신 SQL을 사용할 수 있다.</p>\n<h6 id=\"query-by-example-qbe\" style=\"position:relative;\"><a href=\"#query-by-example-qbe\" aria-label=\"query by example qbe permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query By Example (QBE)</h6>\n<p><a href=\"https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#query-by-example\">https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#query-by-example</a></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 검색 할 데이터 준비</span>\n<span class=\"token class-name\">Person</span> person <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nperson<span class=\"token punctuation\">.</span><span class=\"token function\">setFirstname</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dave\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 쿼리</span>\npersonRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Example</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>사용해보진 않았다. Entity 인스턴스가 쿼리 용도로 사용한다. 복잡한 쿼리의 경우 가독성이 떨어진다.</p>\n<h5 id=\"querydsl\" style=\"position:relative;\"><a href=\"#querydsl\" aria-label=\"querydsl permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>QueryDSL</h5>\n<p><a href=\"http://www.querydsl.com/static/querydsl/4.1.3/reference/html_single/#d0e321\">http://www.querydsl.com/static/querydsl/4.1.3/reference/html_single/#d0e321</a></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">QCustomer</span> customer <span class=\"token operator\">=</span> <span class=\"token class-name\">QCustomer</span><span class=\"token punctuation\">.</span>customer<span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Customer</span> bob <span class=\"token operator\">=</span> queryFactory<span class=\"token punctuation\">.</span><span class=\"token function\">selectFrom</span><span class=\"token punctuation\">(</span>customer<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span>customer<span class=\"token punctuation\">.</span>firstName<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bob\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">fetchOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Query Methods, JPQL, QBE는 JPA 내장되어 있지만 QueryDSL은 그렇지 않다.</p>\n<p>사용 방법은 python의 <a href=\"https://www.sqlalchemy.org/\">sqlalchemy</a>나 node의 <a href=\"http://knexjs.org/\">knexjs</a>와 비슷하다.\n다른 ORM이나 Query Builder도 사용 방법은 비슷하지 않을까.</p>\n<p>knexjs:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">knex</span><span class=\"token punctuation\">(</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">first_name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Test'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">last_name</span><span class=\"token operator\">:</span>  <span class=\"token string\">'User'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>sqlalcehmy:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">session<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">(</span>User<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>User<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'Edwardo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>sqlalchemy의 경우 python의 연산자 오버로딩을 힘입어 높은 가독성을 가진다.\nnumpy와 같은 <a href=\"../python\">python</a> 라이브러리도 같은 이유에서 사용하기 편리한 인터페이스를 가졌다.</p>\n<h5 id=\"querydsl-sql\" style=\"position:relative;\"><a href=\"#querydsl-sql\" aria-label=\"querydsl sql permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>querydsl-sql</h5>\n<p><a href=\"http://querydsl.com/static/querydsl/latest/reference/html/ch02s03.html\">http://querydsl.com/static/querydsl/latest/reference/html/ch02s03.html</a></p>\n<p>native query의 대안. Union 등 제공하지 않는 쿼리는 이 솔루션의 사용을 고려할 수 있다.\n다만 JPA를 사용하지 않아서 좀 불편하다.</p>\n<p><a href=\"https://youtu.be/zMAX7g6rO_Y?t=1169\">https://youtu.be/zMAX7g6rO_Y?t=1169</a></p>\n<p>영상에서도 설명하는데, 실제로도 해보면 사용하기 매우 번거롭다.\nlocal db로부터 q-class를 생성해야 한다. 이 것 때문에 배포 전략을 다시 변경해야 할 수도 있다.\nquerydsl-jpa가 entity로부터 생성한 q-class를 함께 사용할 수 없다.</p>\n<h6 id=\"infobip-spring-data-querydsl\" style=\"position:relative;\"><a href=\"#infobip-spring-data-querydsl\" aria-label=\"infobip spring data querydsl permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>infobip-spring-data-querydsl</h6>\n<p><a href=\"https://github.com/infobip/infobip-spring-data-querydsl\">https://github.com/infobip/infobip-spring-data-querydsl</a></p>\n<p>또다른 native query의 대안. Union 쿼리 등 동작하는 것을 확인했다.</p>\n<h6 id=\"jpa-기본-메서드는-다른-method의-위임-용으로만-사용해야-한다\" style=\"position:relative;\"><a href=\"#jpa-%EA%B8%B0%EB%B3%B8-%EB%A9%94%EC%84%9C%EB%93%9C%EB%8A%94-%EB%8B%A4%EB%A5%B8-method%EC%9D%98-%EC%9C%84%EC%9E%84-%EC%9A%A9%EC%9C%BC%EB%A1%9C%EB%A7%8C-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%9C%EB%8B%A4\" aria-label=\"jpa 기본 메서드는 다른 method의 위임 용으로만 사용해야 한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JPA 기본 메서드는 다른 method의 위임 용으로만 사용해야 한다.</h6>\n<p><a href=\"https://github.com/infobip/infobip-spring-data-querydsl\">https://github.com/infobip/infobip-spring-data-querydsl</a></p>\n<blockquote>\n<p>In production code persistence layer (SQL) shouldn't leak to service layer. See <a href=\"https://stackoverflow.com/a/26563841/607767\">this answer</a> by Oliver Drotbohm (Spring Data Project Lead @ Pivotal) on how to approach encapsulating persistence logic.</p>\n</blockquote>\n<p>persistence layer (SQL) 코드가 서비스에 노출되지 말아야 한다고 한다. Spring Data Project Lead 개발자가 stackoverflow에서 답변함.</p>\n<p>Stackoverflow Post: <a href=\"https://stackoverflow.com/questions/26543612/should-i-use-java-8-default-methods-for-manually-implemented-spring-data-reposit/26563841#26563841\">https://stackoverflow.com/questions/26543612/should-i-use-java-8-default-methods-for-manually-implemented-spring-data-reposit/26563841#26563841</a></p>\n<blockquote>\n<p>Default methods should only be used to delegate calls to other repository methods. Default methods - by definition - cannot access any state of an instance (as an interface has none). They only can delegate to other interface methods or call static ones of other classes.</p>\n</blockquote>\n<p><em>다른 메서드의 위임 용도로만 기본 메서드를 사용해야 합니다.</em></p>\n<h2 id=\"중첩-클래스nested-classes\" style=\"position:relative;\"><a href=\"#%EC%A4%91%EC%B2%A9-%ED%81%B4%EB%9E%98%EC%8A%A4nested-classes\" aria-label=\"중첩 클래스nested classes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>중첩 클래스(Nested Classes)</h2>\n<blockquote>\n<p>Terminology: Nested classes are divided into two categories: non-static and static. Non-static nested classes are called inner classes. Nested classes that are declared static are called static nested classes.</p>\n</blockquote>\n<p>중첩 클래스에는 두 가지 종류가 있다. static이 아닌 중첩 클래스는 <strong>inner class</strong>, static으로 선언된 중첩 클래스는 <strong>static nested class</strong>.<br>\n따라서 static이면서 inner class는 없다.</p>\n<h2 id=\"jpa\" style=\"position:relative;\"><a href=\"#jpa\" aria-label=\"jpa permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JPA</h2>\n<h3 id=\"db에-쿼리하는-방법\" style=\"position:relative;\"><a href=\"#db%EC%97%90-%EC%BF%BC%EB%A6%AC%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"db에 쿼리하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DB에 쿼리하는 방법</h3>\n<p><a href=\"https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#jpa.query-methods\"><strong>Query Methods</strong></a></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">UserRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Repository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findByEmailAddressAndLastname</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> emailAddress<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> lastname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>간단한 쿼리를 작성하는데 적합하다. 메서드 이름으로 쿼리를 작성한다.</p>\n<blockquote>\n<p>Although getting a query derived from the method name is quite convenient, one might face the situation in which either the method name parser does not support the keyword one wants to use or the method name would get unnecessarily ugly. So you can either use JPA named queries through a naming convention (see Using JPA Named Queries for more information) or rather annotate your query method with @Query</p>\n</blockquote>\n<p>길어지면 보기 어려울 수 있으므로 Named Query 또는 <code class=\"language-text\">@Query</code>를 사용을 권장한다.</p>\n<p><a href=\"https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#jpa.query-methods.at-query\"><code class=\"language-text\">@Query</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT u FROM User u WHERE u.status = 1\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findAllActiveUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a href=\"http://querydsl.com/static/querydsl/latest/reference/html/\"><strong>Querydsl</strong></a></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">QCustomer</span> customer <span class=\"token operator\">=</span> <span class=\"token class-name\">QCustomer</span><span class=\"token punctuation\">.</span>customer<span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Customer</span> bob <span class=\"token operator\">=</span> queryFactory<span class=\"token punctuation\">.</span><span class=\"token function\">selectFrom</span><span class=\"token punctuation\">(</span>customer<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span>customer<span class=\"token punctuation\">.</span>firstName<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bob\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">fetchOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a href=\"https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#core.extensions.querydsl\">Spring Data Querydsl Extension</a>을 사용하면 <code class=\"language-text\">Predicate</code>를 이용할 수 있다:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Predicate</span> predicate <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span>firstname<span class=\"token punctuation\">.</span><span class=\"token function\">equalsIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dave\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">and</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>lastname<span class=\"token punctuation\">.</span><span class=\"token function\">startsWithIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mathews\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nuserRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span>predicate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"jpa와-mybatis\" style=\"position:relative;\"><a href=\"#jpa%EC%99%80-mybatis\" aria-label=\"jpa와 mybatis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JPA와 MyBatis</h3>\n<p><a href=\"https://www.facebook.com/groups/springkorea/permalink/2803698513075093/\">.net에서 java로 건너와 (i)mybatis만 쓰다가 JPA란걸 해보고 있는데 큰 장점이 와닿지가 않습니다. - 한국 스프링 사용자 모임</a></p>\n<blockquote>\n<p>.net에서 java로 건너와 (i)mybatis만 쓰다가 JPA란걸 해보고 있는데 큰 장점이 와닿지가 않습니다. 익숙치 않아서 그럴것이지만 특히 집계(group by)하는 것은 @Query에 직접 쿼리문을 작성해 줘야 하고 select결과에 따라 별도의 class를 생성해야하는불편함(?)이 있는 것 같아요(다른 방법이 있으면 헬프미) 실무에서 jpa를 많이 사용하나요? 삽질하면서 많이 배울거라 생각하지만 너무 많은 시행착오를 겪는 것 같아요. Jpa나 querydsl 쉽고 잘 쓰는 방법이 있을까요?</p>\n</blockquote>\n<p>덧글 중</p>\n<blockquote>\n<p>사실 처음 쓰시면 장점을 크게 못 느끼시는게 맞습니다.</p>\n<p>더군다나 java 계열은 LINQ 도 없어서 ORM 주제에 쿼리 비슷한 JPQL 같은걸 써야 하는데, django 나 RoR 의 ORM 에 비하면 구려터진건 사실이죠.</p>\n<p>제가 느끼는 JPA 의 장점은 데이터베이스 자체를 추상화한다는 점인것 같습니다. 그 덕분에 데이터를 다루는 로직의 이식성이 크게 높아져서 시스템 확장에 유리한것 같아요. MSA 가 화두인 시대에 잘 어울리는것 같기도 하고요. 물론 Object 를 2차원 테이블로 옮기고 또 반대로 바꾸는게 완벽하진 않기 때문에 복잡한 객체관계를 다룰땐 ORM 이란것이 plain SQL 보단 많이 별로인게 사실이죠.</p>\n<p>JPA 는 만능이 아닙니다. 제 경험상으론 데이터 조회와 주기적 업데이트가 많은 어플리케이션 (admin) 에는 MyBatis 가 좋았고, 짧은 트랜잭션 동안 여러 테이블(entity)를 업데이트 해야하는 일반 어플리케이션에는 ORM 이 더 좋았습니다.</p>\n</blockquote>\n<p>데이터베이스 추상화의 장점은 테스트에서 더욱 두드러진다.\n운영에서는 MySQL, 테스트에서는 H2 In-Memory DB를 사용해도 특별히 작업없이 사용할 수 있다.</p>\n<h3 id=\"trouble-shooting\" style=\"position:relative;\"><a href=\"#trouble-shooting\" aria-label=\"trouble shooting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Trouble Shooting</h3>\n<h4 id=\"warning-model-domain-type-or-valid-projection-interface-expected-here\" style=\"position:relative;\"><a href=\"#warning-model-domain-type-or-valid-projection-interface-expected-here\" aria-label=\"warning model domain type or valid projection interface expected here permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Warning: 'Model' domain type or valid projection interface expected here</h4>\n<p><a href=\"https://stackoverflow.com/questions/44131207/could-any-one-tell-me-the-real-reason-of-spring-data-projection-in-my-case/56991872#56991872\">Could any one tell me the real reason of spring-data projection in my case?</a></p>\n<p>JPQL 사용했지만, 쿼리 메서드에서 사용하는 키워드가 포함된 경우 이런 경고 메시지가 출력된다.</p>\n<p>키워드는 <code class=\"language-text\">By</code> 였는데, <code class=\"language-text\">Using</code> 으로 대체해서 사용하여 해결했다.</p>\n<h3 id=\"토비의-봄-tv---백기선님\" style=\"position:relative;\"><a href=\"#%ED%86%A0%EB%B9%84%EC%9D%98-%EB%B4%84-tv---%EB%B0%B1%EA%B8%B0%EC%84%A0%EB%8B%98\" aria-label=\"토비의 봄 tv   백기선님 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>토비의 봄 TV - 백기선님</h3>\n<p><a href=\"https://www.youtube.com/live/xEqGW7Adqt8\">https://www.youtube.com/live/xEqGW7Adqt8</a></p>\n<p><a href=\"https://youtu.be/xEqGW7Adqt8?t=960\">16:00</a></p>\n<ul>\n<li>트랜잭션 작업(전) - 비동기 처리 - 트랜잭션 작업(후) 이렇게 되어 있을 때 전, 후 작업의 트랜잭션이 이어지지 않는다.</li>\n<li>RDB를 비동기처리 지원하지 않는다.</li>\n<li>ADBC라는 비동기 지원을 위한 기술이 드래프트되어 있다. 3년 이상.</li>\n</ul>\n<p><a href=\"https://youtu.be/xEqGW7Adqt8?t=1235\">20:35</a></p>\n<ul>\n<li>NodeJS처럼 모든 것을 비동기로 처리하고 싶다. 쓰레드는 코어 수 만큼.</li>\n</ul>\n<p><a href=\"https://youtu.be/xEqGW7Adqt8?t=2315\">38:35</a></p>\n<ul>\n<li>어노테이션에 대한 내용</li>\n<li>어노테이션이 의도를 파악하기 어렵다.</li>\n</ul>\n<h3 id=\"토비의-봄-tv---김영한님\" style=\"position:relative;\"><a href=\"#%ED%86%A0%EB%B9%84%EC%9D%98-%EB%B4%84-tv---%EA%B9%80%EC%98%81%ED%95%9C%EB%8B%98\" aria-label=\"토비의 봄 tv   김영한님 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>토비의 봄 TV - 김영한님</h3>\n<p><a href=\"https://www.youtube.com/watch?v=00qwDr_3MC4\">https://www.youtube.com/watch?v=00qwDr_3MC4</a></p>\n<p><a href=\"https://youtu.be/00qwDr_3MC4?t=5704\">1:35:04</a></p>\n<ul>\n<li>AOP 프록시를 사용했다. 프록시 패턴.</li>\n<li>여기에도 RDB와 Webflux 비동기 처리 이슈에 대해 다룬다.</li>\n</ul>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p><a href=\"https://docs.oracle.com/javase/tutorial/java/javaOO/nested.html\">https://docs.oracle.com/javase/tutorial/java/javaOO/nested.html</a></p>"}},"allMarkdownRemark":{"nodes":[{"headings":[{"value":"2016-08-27 GDG WebTech Workshop \"측정하는 놈, 로딩하는 놈, 그리는 놈\""}],"fields":{"slug":"/2016-08-27-gdg-webtech-workshop-nnn/"}},{"headings":[{"value":"2016-11-16 캠퍼스 스타트업 스쿨의 \"구글 플레이에서 꼭 지켜야 할 두 가지\""}],"fields":{"slug":"/2016-11-16-google-campus-two-things-you-must-keep-in-google-play/"}},{"headings":[{"value":"Airflow"}],"fields":{"slug":"/airflow/"}},{"headings":[{"value":"알고리즘"}],"fields":{"slug":"/algorithm/"}},{"headings":[{"value":"Amazon Redshift"}],"fields":{"slug":"/amazon-redshift/"}},{"headings":[{"value":"Angular JS"}],"fields":{"slug":"/angularjs/"}},{"headings":[{"value":"APM"}],"fields":{"slug":"/apm/"}},{"headings":[{"value":"Architecture"}],"fields":{"slug":"/architecture/"}},{"headings":[{"value":"Amazon Web Service"}],"fields":{"slug":"/aws/"}},{"headings":[],"fields":{"slug":"/bk/"}},{"headings":[{"value":"책"}],"fields":{"slug":"/book/"}},{"headings":[{"value":"C# Programming Language"}],"fields":{"slug":"/c-sharp/"}},{"headings":[{"value":"The Cat Logic"}],"fields":{"slug":"/cat-logic/"}},{"headings":[{"value":"크롬 브라우저"}],"fields":{"slug":"/chrome-browser/"}},{"headings":[{"value":"Clean Code"}],"fields":{"slug":"/clean-code/"}},{"headings":[{"value":"Computer Graphics"}],"fields":{"slug":"/computer-graphics/"}},{"headings":[{"value":"코드 리뷰"}],"fields":{"slug":"/code-review/"}},{"headings":[{"value":"회사"}],"fields":{"slug":"/company/"}},{"headings":[{"value":"CI/CD"}],"fields":{"slug":"/continuous-integration-and-deployment/"}},{"headings":[{"value":"crontab"}],"fields":{"slug":"/crontab/"}},{"headings":[{"value":"CURL"}],"fields":{"slug":"/curl/"}},{"headings":[{"value":"CSS"}],"fields":{"slug":"/css/"}},{"headings":[{"value":"자료구조"}],"fields":{"slug":"/data-structure/"}},{"headings":[{"value":"Data analysis"}],"fields":{"slug":"/data-analysis/"}},{"headings":[{"value":"Database"}],"fields":{"slug":"/database/"}},{"headings":[{"value":"DevOps"}],"fields":{"slug":"/devops/"}},{"headings":[{"value":"Design Pattern"}],"fields":{"slug":"/design-pattern/"}},{"headings":[{"value":"Docker"}],"fields":{"slug":"/docker/"}},{"headings":[{"value":"Elasticsearch"}],"fields":{"slug":"/elasticsearch/"}},{"headings":[{"value":"임베딩"}],"fields":{"slug":"/embeddings/"}},{"headings":[{"value":"세미나 및 컨퍼런스 후기"}],"fields":{"slug":"/experience-review/"}},{"headings":[{"value":"Game"}],"fields":{"slug":"/game/"}},{"headings":[{"value":"Git"}],"fields":{"slug":"/git/"}},{"headings":[{"value":"GatsbyJS"}],"fields":{"slug":"/gatsbyjs/"}},{"headings":[{"value":"Godot Engine"}],"fields":{"slug":"/godot/"}},{"headings":[{"value":"GitHub"}],"fields":{"slug":"/github/"}},{"headings":[{"value":"Gradle"}],"fields":{"slug":"/gradle/"}},{"headings":[{"value":"Canvas"}],"fields":{"slug":"/html-canvas/"}},{"headings":[{"value":"Hardware"}],"fields":{"slug":"/hardware/"}},{"headings":[{"value":"Google Analytics"}],"fields":{"slug":"/google-analytics/"}},{"headings":[{"value":"HTML"}],"fields":{"slug":"/html/"}},{"headings":[{"value":"아이디어 방법론"}],"fields":{"slug":"/idea-methodology/"}},{"headings":[{"value":"개발 용어"}],"fields":{"slug":"/jargon/"}},{"headings":[{"value":"영감을 주는 것"}],"fields":{"slug":"/inspiration/"}},{"headings":[{"value":"Ionic Framework"}],"fields":{"slug":"/ionic-framework/"}},{"headings":[{"value":"Java Programming Language"}],"fields":{"slug":"/java/"}},{"headings":[{"value":"Javascript & Typescript Programming Language"}],"fields":{"slug":"/javascript/"}},{"headings":[{"value":"JetBrains"}],"fields":{"slug":"/jetbrains/"}},{"headings":[{"value":"Kotlin Programming Language"}],"fields":{"slug":"/kotlin/"}},{"headings":[{"value":"Jira"}],"fields":{"slug":"/jira/"}},{"headings":[{"value":"Kubernetes"}],"fields":{"slug":"/kubernetes/"}},{"headings":[{"value":"Linux"}],"fields":{"slug":"/linux/"}},{"headings":[{"value":"Language Server Protocol"}],"fields":{"slug":"/language-server-protocol/"}},{"headings":[{"value":"Large Language Model"}],"fields":{"slug":"/large-language-model/"}},{"headings":[{"value":"Logging"}],"fields":{"slug":"/logging/"}},{"headings":[{"value":"Mac OS"}],"fields":{"slug":"/mac-os/"}},{"headings":[{"value":"Mail"}],"fields":{"slug":"/mail/"}},{"headings":[{"value":"Markdown"}],"fields":{"slug":"/markdown/"}},{"headings":[{"value":"Machine Learning"}],"fields":{"slug":"/machine-learning/"}},{"headings":[{"value":"Model Context Protocol(MCP)"}],"fields":{"slug":"/model-context-protocol/"}},{"headings":[{"value":"Network"}],"fields":{"slug":"/network/"}},{"headings":[{"value":"Node JS"}],"fields":{"slug":"/nodejs/"}},{"headings":[{"value":"Object Oriented Programming"}],"fields":{"slug":"/object-oriented-programming/"}},{"headings":[{"value":"Ollama"}],"fields":{"slug":"/ollama/"}},{"headings":[{"value":"OpenAI"}],"fields":{"slug":"/openai/"}},{"headings":[{"value":"Agno"}],"fields":{"slug":"/phidata/"}},{"headings":[{"value":"Physics"}],"fields":{"slug":"/physics/"}},{"headings":[{"value":"개인적인 철학"}],"fields":{"slug":"/philosophy/"}},{"headings":[{"value":"Playwright"}],"fields":{"slug":"/playwright/"}},{"headings":[{"value":"Podman"}],"fields":{"slug":"/podman/"}},{"headings":[{"value":"Programming Convention"}],"fields":{"slug":"/programming-convention/"}},{"headings":[{"value":"PostgreSQL"}],"fields":{"slug":"/postgresql/"}},{"headings":[{"value":"Programming Paradigm"}],"fields":{"slug":"/programming-paradigm/"}},{"headings":[{"value":"Reactive Extensions (Reactive X, RX)"}],"fields":{"slug":"/reactive-extensions/"}},{"headings":[{"value":"Python Programming Language"}],"fields":{"slug":"/python/"}},{"headings":[{"value":"React JS"}],"fields":{"slug":"/reactjs/"}},{"headings":[{"value":"인용문"}],"fields":{"slug":"/quotation/"}},{"headings":[{"value":"Redis"}],"fields":{"slug":"/redis/"}},{"headings":[{"value":"Reverse Engineering"}],"fields":{"slug":"/reverse-engineering/"}},{"headings":[{"value":"Rust Programming Language"}],"fields":{"slug":"/rust/"}},{"headings":[{"value":"보안"}],"fields":{"slug":"/security/"}},{"headings":[{"value":"SCP"}],"fields":{"slug":"/scp/"}},{"headings":[{"value":"Sentry - APM & Error Tracking"}],"fields":{"slug":"/sentry/"}},{"headings":[{"value":"SFML"}],"fields":{"slug":"/sfml/"}},{"headings":[{"value":"우주"}],"fields":{"slug":"/space/"}},{"headings":[{"value":"Shell 명령어"}],"fields":{"slug":"/shell/"}},{"headings":[{"value":"Swagger"}],"fields":{"slug":"/swagger/"}},{"headings":[{"value":"Spring framework"}],"fields":{"slug":"/spring-framework/"}},{"headings":[{"value":"시스템 장애"}],"fields":{"slug":"/system-failures/"}},{"headings":[{"value":"테스트 주도 개발 (Test Driven Development)"}],"fields":{"slug":"/test-driven-development/"}},{"headings":[{"value":"소프트웨어 개발"}],"fields":{"slug":"/software-development/"}},{"headings":[{"value":"Testing"}],"fields":{"slug":"/testing/"}},{"headings":[{"value":"Tmux"}],"fields":{"slug":"/tmux/"}},{"headings":[{"value":"Treesitter"}],"fields":{"slug":"/treesitter/"}},{"headings":[{"value":"개발/비개발 도구"}],"fields":{"slug":"/tools/"}},{"headings":[{"value":"Unicode"}],"fields":{"slug":"/unicode/"}},{"headings":[{"value":"Unity 3D"}],"fields":{"slug":"/unity3d/"}},{"headings":[{"value":"Vim Plugins"}],"fields":{"slug":"/vim-plugins/"}},{"headings":[{"value":"Valve사의 신규 입사자를 위한 핸드북"}],"fields":{"slug":"/valve/"}},{"headings":[{"value":"VimWiki"}],"fields":{"slug":"/vimwiki/"}},{"headings":[{"value":"VimEnter 2023"}],"fields":{"slug":"/vimenter-2023/"}},{"headings":[{"value":"Vim"}],"fields":{"slug":"/vim/"}},{"headings":[{"value":"웹 개발"}],"fields":{"slug":"/web/"}},{"headings":[{"value":"Vue JS"}],"fields":{"slug":"/vuejs/"}},{"headings":[{"value":"WebGL"}],"fields":{"slug":"/webgl/"}},{"headings":[{"value":"Windows"}],"fields":{"slug":"/windows/"}},{"headings":[{"value":"Windows Subsystem for Linux (WSL)"}],"fields":{"slug":"/windows-subsystem-for-linux/"}},{"headings":[{"value":"추론 애플리케이션"}],"fields":{"slug":"/인공지능/용어/추론 애플리케이션/"}}]},"site":{"siteMetadata":{"gitHubRepositoryUrl":"https://github.com/edunga1/cat-logic"}}},"pageContext":{"id":"50222bab-0a94-5e49-a10c-799dd3d78c70"}},"staticQueryHashes":[],"slicesMap":{}}