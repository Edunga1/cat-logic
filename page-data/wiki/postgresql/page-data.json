{"componentChunkName":"component---src-components-gatsby-templates-wiki-tsx","path":"/wiki/postgresql/","result":{"data":{"file":{"fields":{"gitLogs":[{"hash":"0cbe949a8c32d9b186831075e398e93e36fd0c26","date":"2025-10-06T18:26:37+09:00"},{"hash":"a371c2a69f3199810d2658f63943b89f2e15c20b","date":"2024-12-16T17:46:34+09:00"},{"hash":"14a570cbc4340afeff2143016b0c90a1b19eae0d","date":"2024-08-06T12:30:49+09:00"},{"hash":"cb4590e1f58929cfd4c676d06352efceb2165b8f","date":"2024-03-20T14:52:41Z"},{"hash":"9d9f1e10ec9bd0999a292193defa69ab9a030bd9","date":"2024-03-20T17:48:53+09:00"}]},"childMarkdownRemark":{"headings":[{"value":"PostgreSQL"}],"fields":{"slug":"/postgresql/","relatedDocs":[{"slug":"reverse-engineering","similarity":0.2602147367},{"slug":"hardware","similarity":0.2340362954},{"slug":"network","similarity":0.2948833072},{"slug":"physics","similarity":0.2133623015},{"slug":"experience-review","similarity":0.3441670548},{"slug":"css","similarity":0.3334259895},{"slug":"redis","similarity":0.4248852821},{"slug":"amazon-redshift","similarity":0.6922636014},{"slug":"jargon","similarity":0.3696937756},{"slug":"windows","similarity":0.3404597124},{"slug":"test-driven-development","similarity":0.2655538118},{"slug":"valve","similarity":0.2934988151},{"slug":"sentry","similarity":0.392285142},{"slug":"phidata","similarity":0.3494413047},{"slug":"continuous-integration-and-deployment","similarity":0.3369096084},{"slug":"sfml","similarity":0.3539918562},{"slug":"data-structure","similarity":0.412229709},{"slug":"java","similarity":0.3911785025},{"slug":"mail","similarity":0.3531371586},{"slug":"idea-methodology","similarity":0.2761601687},{"slug":"software-development","similarity":0.38877838},{"slug":"devops","similarity":0.3518705306},{"slug":"html-canvas","similarity":0.2708181084},{"slug":"podman","similarity":0.3819152202},{"slug":"data-analysis","similarity":0.517103188},{"slug":"security","similarity":0.3112768774},{"slug":"html","similarity":0.3160214492},{"slug":"computer-graphics","similarity":0.265239779},{"slug":"vuejs","similarity":0.2353520722},{"slug":"인공지능/용어/추론 애플리케이션","similarity":0.2726975416},{"slug":"rust","similarity":0.3824929866},{"slug":"treesitter","similarity":0.3370829892},{"slug":"chrome-browser","similarity":0.2852151713},{"slug":"logging","similarity":0.3377905394},{"slug":"google-analytics","similarity":0.2459870412},{"slug":"curl","similarity":0.3671429873},{"slug":"jira","similarity":0.3608818983},{"slug":"book","similarity":0.301812427},{"slug":"gatsbyjs","similarity":0.3893019314},{"slug":"bk","similarity":0.2151372141},{"slug":"cat-logic","similarity":0.3791673206},{"slug":"ollama","similarity":0.3194348723},{"slug":"tmux","similarity":0.333897361},{"slug":"design-pattern","similarity":0.352542642},{"slug":"kubernetes","similarity":0.3410203824},{"slug":"markdown","similarity":0.3470338822},{"slug":"kotlin","similarity":0.3443285627},{"slug":"vim","similarity":0.3289176247},{"slug":"architecture","similarity":0.4152173382},{"slug":"python","similarity":0.3567445244},{"slug":"2016-08-27-gdg-webtech-workshop-nnn","similarity":0.289557146},{"slug":"gradle","similarity":0.3641055965},{"slug":"apm","similarity":0.3680686456},{"slug":"embeddings","similarity":0.3409746744},{"slug":"openai","similarity":0.3043753949},{"slug":"clean-code","similarity":0.3159276333},{"slug":"scp","similarity":0.3103963246},{"slug":"vimwiki","similarity":0.3457700503},{"slug":"github","similarity":0.3377290992},{"slug":"2016-11-16-google-campus-two-things-you-must-keep-in-google-play","similarity":0.3226921297},{"slug":"space","similarity":0.2648016692},{"slug":"javascript","similarity":0.3742434999},{"slug":"c-sharp","similarity":0.2811272093},{"slug":"linux","similarity":0.3481198647},{"slug":"testing","similarity":0.3340378257},{"slug":"object-oriented-programming","similarity":0.3890718677},{"slug":"angularjs","similarity":0.3345183304},{"slug":"webgl","similarity":0.2943778859},{"slug":"company","similarity":0.3520644471},{"slug":"quotation","similarity":0.3358071803},{"slug":"playwright","similarity":0.2492076933},{"slug":"airflow","similarity":0.4286146128},{"slug":"reactjs","similarity":0.3601482637},{"slug":"unicode","similarity":0.2803065806},{"slug":"mac-os","similarity":0.326103793},{"slug":"inspiration","similarity":0.293708568},{"slug":"spring-framework","similarity":0.302134995},{"slug":"system-failures","similarity":0.2176290484},{"slug":"swagger","similarity":0.3155543021},{"slug":"postgresql","similarity":1},{"slug":"vimenter-2023","similarity":0.3036498521},{"slug":"reactive-extensions","similarity":0.2754392357},{"slug":"algorithm","similarity":0.3624940926},{"slug":"windows-subsystem-for-linux","similarity":0.3566665864},{"slug":"godot","similarity":0.379460883},{"slug":"unity3d","similarity":0.2567387086},{"slug":"web","similarity":0.3746339695},{"slug":"code-review","similarity":0.333378028},{"slug":"git","similarity":0.3767849518},{"slug":"language-server-protocol","similarity":0.2796621914},{"slug":"programming-paradigm","similarity":0.4337147222},{"slug":"elasticsearch","similarity":0.353181962},{"slug":"model-context-protocol","similarity":0.2647055657},{"slug":"philosophy","similarity":0.3832158866},{"slug":"docker","similarity":0.3877859796},{"slug":"aws","similarity":0.336483162},{"slug":"programming-convention","similarity":0.4710588915},{"slug":"jetbrains","similarity":0.392362021},{"slug":"ionic-framework","similarity":0.2722309783},{"slug":"game","similarity":0.3093289607},{"slug":"machine-learning","similarity":0.287622719},{"slug":"nodejs","similarity":0.3550739698},{"slug":"large-language-model","similarity":0.3412384267},{"slug":"shell","similarity":0.3650598999},{"slug":"tools","similarity":0.3936327233},{"slug":"crontab","similarity":0.393351318},{"slug":"database","similarity":0.5886701049},{"slug":"vim-plugins","similarity":0.3309369708},{"slug":"인공지능/프롬프트/youtube-summary","similarity":0.2922857548}]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#postgresql\">PostgreSQL</a></p>\n<ul>\n<li>\n<p><a href=\"#%EC%83%8C%EB%93%9C%EB%B0%95%EC%8A%A4-%ED%99%98%EA%B2%BD\">샌드박스 환경</a></p>\n<ul>\n<li><a href=\"#%EA%B8%B0%EB%B3%B8-%EB%AA%85%EB%A0%B9%EC%96%B4\">기본 명령어</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#mysql-%EC%BF%BC%EB%A6%AC-%EC%B0%A8%EC%9D%B4%EC%A0%90\">MySQL 쿼리 차이점</a></p>\n</li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"postgresql\" style=\"position:relative;\"><a href=\"#postgresql\" aria-label=\"postgresql permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PostgreSQL</h1>\n<p>객체-관계형 데이터베이스 관리 시스템.</p>\n<p>제대로 사용한 적은 없고, <a href=\"../amazon-redshift\">Amazon Redshift</a>를 통해서 쿼리 작성만 해보았다.</p>\n<h2 id=\"샌드박스-환경\" style=\"position:relative;\"><a href=\"#%EC%83%8C%EB%93%9C%EB%B0%95%EC%8A%A4-%ED%99%98%EA%B2%BD\" aria-label=\"샌드박스 환경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>샌드박스 환경</h2>\n<p>도커로 Postgres를 실행해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">--rm</span> <span class=\"token parameter variable\">--name</span> some-postgres <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">POSTGRES_PASSWORD</span><span class=\"token operator\">=</span>password postgres</code></pre></div>\n<p><code class=\"language-text\">POSTGRES_PASSWORD</code>는 필수 환경 변수이다. 컨테이너 내에서 접속할 거라 외울 필요는 없다.</p>\n<p>이제 <code class=\"language-text\">psql</code>로 접속한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ <span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-ti</span> some-postgres psql <span class=\"token parameter variable\">-U</span> postgres\npsql <span class=\"token punctuation\">(</span><span class=\"token number\">16.2</span> <span class=\"token punctuation\">(</span>Debian <span class=\"token number\">16.2</span>-1.pgdg120+2<span class=\"token punctuation\">))</span>\nType <span class=\"token string\">\"help\"</span> <span class=\"token keyword\">for</span> help.\n\n<span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># help</span>\nYou are using psql, the command-line interface to PostgreSQL.\nType:  <span class=\"token punctuation\">\\</span>copyright <span class=\"token keyword\">for</span> distribution terms\n       <span class=\"token punctuation\">\\</span>h <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">help</span> with SQL commands\n       <span class=\"token punctuation\">\\</span>? <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">help</span> with psql commands\n       <span class=\"token punctuation\">\\</span>g or terminate with semicolon to execute query\n       <span class=\"token punctuation\">\\</span>q to quit</code></pre></div>\n<h3 id=\"기본-명령어\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-label=\"기본 명령어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 명령어</h3>\n<p><code class=\"language-text\">\\l</code> : 데이터베이스 목록</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\l</span>\n                                                      List of databases\n   Name    <span class=\"token operator\">|</span>  Owner   <span class=\"token operator\">|</span> Encoding <span class=\"token operator\">|</span> Locale Provider <span class=\"token operator\">|</span>  Collate   <span class=\"token operator\">|</span>   Ctype    <span class=\"token operator\">|</span> ICU Locale <span class=\"token operator\">|</span> ICU Rules <span class=\"token operator\">|</span>   Access privileges\n-----------+----------+----------+-----------------+------------+------------+------------+-----------+-----------------------\n postgres  <span class=\"token operator\">|</span> postgres <span class=\"token operator\">|</span> UTF8     <span class=\"token operator\">|</span> libc            <span class=\"token operator\">|</span> en_US.utf8 <span class=\"token operator\">|</span> en_US.utf8 <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span>\n template0 <span class=\"token operator\">|</span> postgres <span class=\"token operator\">|</span> UTF8     <span class=\"token operator\">|</span> libc            <span class=\"token operator\">|</span> en_US.utf8 <span class=\"token operator\">|</span> en_US.utf8 <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token operator\">=</span>c/postgres          +\n           <span class=\"token operator\">|</span>          <span class=\"token operator\">|</span>          <span class=\"token operator\">|</span>                 <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span>CTc/postgres\n template1 <span class=\"token operator\">|</span> postgres <span class=\"token operator\">|</span> UTF8     <span class=\"token operator\">|</span> libc            <span class=\"token operator\">|</span> en_US.utf8 <span class=\"token operator\">|</span> en_US.utf8 <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token operator\">=</span>c/postgres          +\n           <span class=\"token operator\">|</span>          <span class=\"token operator\">|</span>          <span class=\"token operator\">|</span>                 <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span>CTc/postgres\n<span class=\"token punctuation\">(</span><span class=\"token number\">3</span> rows<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">\\c</code> : 데이터베이스 접속<br>\n<code class=\"language-text\">\\d</code> : 테이블, 뷰, 시퀀스 목록</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\c postgres</span>\nYou are now connected to database <span class=\"token string\">\"postgres\"</span> as user <span class=\"token string\">\"postgres\"</span><span class=\"token builtin class-name\">.</span>\n<span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\d</span>\nDid not <span class=\"token function\">find</span> any relations.</code></pre></div>\n<p>아무 테이블도 없다. 테이블을 만들어보자.</p>\n<p>ChatGPT에 부탁해서 학생 테이블 생성 쿼리를 받았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> students <span class=\"token punctuation\">(</span>\n    id <span class=\"token keyword\">SERIAL</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n    name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    age <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n    gender <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># CREATE TABLE students (</span>\n    <span class=\"token function\">id</span> SERIAL PRIMARY KEY,\n    name VARCHAR<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>,\n    age INT,\n    gender VARCHAR<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nCREATE TABLE\n<span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\d</span>\n               List of relations\n Schema <span class=\"token operator\">|</span>      Name       <span class=\"token operator\">|</span>   Type   <span class=\"token operator\">|</span>  Owner\n--------+-----------------+----------+----------\n public <span class=\"token operator\">|</span> students        <span class=\"token operator\">|</span> table    <span class=\"token operator\">|</span> postgres\n public <span class=\"token operator\">|</span> students_id_seq <span class=\"token operator\">|</span> sequence <span class=\"token operator\">|</span> postgres\n<span class=\"token punctuation\">(</span><span class=\"token number\">2</span> rows<span class=\"token punctuation\">)</span></code></pre></div>\n<p>이제 <code class=\"language-text\">\\d</code>로 테이블이 생성되었음을 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># select * from students;</span>\n <span class=\"token function\">id</span> <span class=\"token operator\">|</span> name <span class=\"token operator\">|</span> age <span class=\"token operator\">|</span> gender\n----+------+-----+--------\n<span class=\"token punctuation\">(</span><span class=\"token number\">0</span> rows<span class=\"token punctuation\">)</span></code></pre></div>\n<p>이제 기본적인 쿼리는 다른 SQL과 비슷하므로 사용하는데 큰 어려움은 없다.</p>\n<h2 id=\"mysql-쿼리-차이점\" style=\"position:relative;\"><a href=\"#mysql-%EC%BF%BC%EB%A6%AC-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"mysql 쿼리 차이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MySQL 쿼리 차이점</h2>\n<p>MySQL과 다르게, group by로 aggregation 시 aggregation function을 사용하지 않는 컬럼을 select에 포함할 수 없다.</p>\n<p>이를 해결하기 위해서, 모든 값을 보고싶다면 <code class=\"language-text\">listagg</code>를 사용하자. MySQL의 <code class=\"language-text\">group_concat</code>와 비슷하다.<br>\n아무 값이나 보고 싶다면 <code class=\"language-text\">any_value</code>를 사용하자. MySQL의 그냥 컬럼을 select하는 것과 비슷하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span>\n  family<span class=\"token punctuation\">,</span>\n  listagg<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">', '</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> names<span class=\"token punctuation\">,</span>\n  any_value<span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> age\n<span class=\"token keyword\">from</span> users\n<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> family<span class=\"token punctuation\">;</span></code></pre></div>\n<p>날짜 차이를 구할때는 <code class=\"language-text\">-</code> 연산자를 사용하면 human readable한 값으로 출력된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token keyword\">TIMESTAMP</span> <span class=\"token string\">'2024-02-01 11:55:30'</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">TIMESTAMP</span> <span class=\"token string\">'2024-01-30 04:11:05'</span> <span class=\"token keyword\">as</span> diff<span class=\"token punctuation\">;</span>\n      diff\n<span class=\"token comment\">-----------------</span>\n <span class=\"token number\">2</span> days <span class=\"token number\">07</span>:<span class=\"token number\">44</span>:<span class=\"token number\">25</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token keyword\">row</span><span class=\"token punctuation\">)</span></code></pre></div>\n<hr>\n<p>group by, where 절 등에서 <code class=\"language-text\">DATE_FORMAT()</code> 사용한다면, PostgreSQL에서는 <code class=\"language-text\">DATE_TRUNC</code>를 고려하자.\n지정한 단위로 날짜를 잘라준다. 예를 들어 <code class=\"language-text\">MONTH</code>가 기준이라면 일자 아래는 가장 작은 값으로 변경된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">postgres<span class=\"token operator\">=</span><span class=\"token comment\"># select NOW(), DATE_TRUNC('YEAR', NOW());</span>\n              now              <span class=\"token operator\">|</span>       date_trunc\n<span class=\"token comment\">-------------------------------+------------------------</span>\n <span class=\"token number\">2024</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">16</span> <span class=\"token number\">08</span>:<span class=\"token number\">39</span>:<span class=\"token number\">44.096672</span><span class=\"token operator\">+</span><span class=\"token number\">00</span> <span class=\"token operator\">|</span> <span class=\"token number\">2024</span><span class=\"token operator\">-</span><span class=\"token number\">01</span><span class=\"token operator\">-</span><span class=\"token number\">01</span> <span class=\"token number\">00</span>:<span class=\"token number\">00</span>:<span class=\"token number\">00</span><span class=\"token operator\">+</span><span class=\"token number\">00</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token keyword\">row</span><span class=\"token punctuation\">)</span>\n\npostgres<span class=\"token operator\">=</span><span class=\"token comment\"># select NOW(), DATE_TRUNC('MONTH', NOW());</span>\n              now              <span class=\"token operator\">|</span>       date_trunc\n<span class=\"token comment\">-------------------------------+------------------------</span>\n <span class=\"token number\">2024</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">16</span> <span class=\"token number\">08</span>:<span class=\"token number\">39</span>:<span class=\"token number\">20.209035</span><span class=\"token operator\">+</span><span class=\"token number\">00</span> <span class=\"token operator\">|</span> <span class=\"token number\">2024</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">01</span> <span class=\"token number\">00</span>:<span class=\"token number\">00</span>:<span class=\"token number\">00</span><span class=\"token operator\">+</span><span class=\"token number\">00</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token keyword\">row</span><span class=\"token punctuation\">)</span>\n\npostgres<span class=\"token operator\">=</span><span class=\"token comment\"># select NOW(), DATE_TRUNC('HOUR', NOW());</span>\n              now              <span class=\"token operator\">|</span>       date_trunc\n<span class=\"token comment\">-------------------------------+------------------------</span>\n <span class=\"token number\">2024</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">16</span> <span class=\"token number\">08</span>:<span class=\"token number\">39</span>:<span class=\"token number\">47.338668</span><span class=\"token operator\">+</span><span class=\"token number\">00</span> <span class=\"token operator\">|</span> <span class=\"token number\">2024</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">16</span> <span class=\"token number\">08</span>:<span class=\"token number\">00</span>:<span class=\"token number\">00</span><span class=\"token operator\">+</span><span class=\"token number\">00</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token keyword\">row</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">DATE_FORMAT()</code>과 같은 기능이 필요하다면 <code class=\"language-text\">TO_CHAR()</code>를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">postgres<span class=\"token operator\">=</span><span class=\"token comment\"># select TO_CHAR(NOW(), 'YYYY-MM-DD HH24:MI:SS');</span>\n       to_char\n<span class=\"token comment\">---------------------</span>\n <span class=\"token number\">2024</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">16</span> <span class=\"token number\">08</span>:<span class=\"token number\">45</span>:<span class=\"token number\">27</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token keyword\">row</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>MySQL의 포맷과 다르다.</p>"}},"allMarkdownRemark":{"nodes":[{"headings":[{"value":"2016-11-16 캠퍼스 스타트업 스쿨의 \"구글 플레이에서 꼭 지켜야 할 두 가지\""}],"fields":{"slug":"/2016-11-16-google-campus-two-things-you-must-keep-in-google-play/"}},{"headings":[{"value":"2016-08-27 GDG WebTech Workshop \"측정하는 놈, 로딩하는 놈, 그리는 놈\""}],"fields":{"slug":"/2016-08-27-gdg-webtech-workshop-nnn/"}},{"headings":[{"value":"2025년"}],"fields":{"slug":"/2025/"}},{"headings":[{"value":"알고리즘"}],"fields":{"slug":"/algorithm/"}},{"headings":[{"value":"Airflow"}],"fields":{"slug":"/airflow/"}},{"headings":[{"value":"Amazon Redshift"}],"fields":{"slug":"/amazon-redshift/"}},{"headings":[{"value":"Angular JS"}],"fields":{"slug":"/angularjs/"}},{"headings":[{"value":"Amazon Web Services"}],"fields":{"slug":"/aws/"}},{"headings":[{"value":"Architecture"}],"fields":{"slug":"/architecture/"}},{"headings":[{"value":"APM"}],"fields":{"slug":"/apm/"}},{"headings":[],"fields":{"slug":"/bk/"}},{"headings":[{"value":"C# Programming Language"}],"fields":{"slug":"/c-sharp/"}},{"headings":[{"value":"The Cat Logic"}],"fields":{"slug":"/cat-logic/"}},{"headings":[{"value":"크롬 브라우저"}],"fields":{"slug":"/chrome-browser/"}},{"headings":[{"value":"책"}],"fields":{"slug":"/book/"}},{"headings":[{"value":"코드 리뷰"}],"fields":{"slug":"/code-review/"}},{"headings":[{"value":"Clean Code"}],"fields":{"slug":"/clean-code/"}},{"headings":[{"value":"Computer Graphics"}],"fields":{"slug":"/computer-graphics/"}},{"headings":[{"value":"회사"}],"fields":{"slug":"/company/"}},{"headings":[{"value":"CI/CD"}],"fields":{"slug":"/continuous-integration-and-deployment/"}},{"headings":[{"value":"crontab"}],"fields":{"slug":"/crontab/"}},{"headings":[{"value":"CSS"}],"fields":{"slug":"/css/"}},{"headings":[{"value":"CURL"}],"fields":{"slug":"/curl/"}},{"headings":[{"value":"Data analysis"}],"fields":{"slug":"/data-analysis/"}},{"headings":[{"value":"자료구조"}],"fields":{"slug":"/data-structure/"}},{"headings":[{"value":"Database"}],"fields":{"slug":"/database/"}},{"headings":[{"value":"DevOps"}],"fields":{"slug":"/devops/"}},{"headings":[{"value":"Design Pattern"}],"fields":{"slug":"/design-pattern/"}},{"headings":[{"value":"Elasticsearch"}],"fields":{"slug":"/elasticsearch/"}},{"headings":[{"value":"세미나 및 컨퍼런스 후기"}],"fields":{"slug":"/experience-review/"}},{"headings":[{"value":"Docker"}],"fields":{"slug":"/docker/"}},{"headings":[{"value":"Game"}],"fields":{"slug":"/game/"}},{"headings":[{"value":"임베딩"}],"fields":{"slug":"/embeddings/"}},{"headings":[{"value":"GatsbyJS"}],"fields":{"slug":"/gatsbyjs/"}},{"headings":[{"value":"Git"}],"fields":{"slug":"/git/"}},{"headings":[{"value":"Godot Engine"}],"fields":{"slug":"/godot/"}},{"headings":[{"value":"GitHub"}],"fields":{"slug":"/github/"}},{"headings":[{"value":"Google Analytics"}],"fields":{"slug":"/google-analytics/"}},{"headings":[{"value":"Gradle"}],"fields":{"slug":"/gradle/"}},{"headings":[{"value":"Hardware"}],"fields":{"slug":"/hardware/"}},{"headings":[{"value":"HTML"}],"fields":{"slug":"/html/"}},{"headings":[{"value":"아이디어 방법론"}],"fields":{"slug":"/idea-methodology/"}},{"headings":[{"value":"영감을 주는 것"}],"fields":{"slug":"/inspiration/"}},{"headings":[{"value":"Canvas"}],"fields":{"slug":"/html-canvas/"}},{"headings":[{"value":"개발 용어"}],"fields":{"slug":"/jargon/"}},{"headings":[{"value":"Ionic Framework"}],"fields":{"slug":"/ionic-framework/"}},{"headings":[{"value":"Java Programming Language"}],"fields":{"slug":"/java/"}},{"headings":[{"value":"Javascript & Typescript Programming Language"}],"fields":{"slug":"/javascript/"}},{"headings":[{"value":"JetBrains"}],"fields":{"slug":"/jetbrains/"}},{"headings":[{"value":"Kotlin Programming Language"}],"fields":{"slug":"/kotlin/"}},{"headings":[{"value":"Kubernetes"}],"fields":{"slug":"/kubernetes/"}},{"headings":[{"value":"Jira"}],"fields":{"slug":"/jira/"}},{"headings":[{"value":"Language Server Protocol"}],"fields":{"slug":"/language-server-protocol/"}},{"headings":[{"value":"Linux"}],"fields":{"slug":"/linux/"}},{"headings":[{"value":"Large Language Model"}],"fields":{"slug":"/large-language-model/"}},{"headings":[{"value":"Mac OS"}],"fields":{"slug":"/mac-os/"}},{"headings":[{"value":"Logging"}],"fields":{"slug":"/logging/"}},{"headings":[{"value":"Machine Learning"}],"fields":{"slug":"/machine-learning/"}},{"headings":[{"value":"Mail"}],"fields":{"slug":"/mail/"}},{"headings":[{"value":"Model Context Protocol(MCP)"}],"fields":{"slug":"/model-context-protocol/"}},{"headings":[{"value":"Network"}],"fields":{"slug":"/network/"}},{"headings":[{"value":"Markdown"}],"fields":{"slug":"/markdown/"}},{"headings":[{"value":"Object Oriented Programming"}],"fields":{"slug":"/object-oriented-programming/"}},{"headings":[{"value":"Ollama"}],"fields":{"slug":"/ollama/"}},{"headings":[{"value":"Node JS"}],"fields":{"slug":"/nodejs/"}},{"headings":[{"value":"Agno"}],"fields":{"slug":"/phidata/"}},{"headings":[{"value":"OpenAI"}],"fields":{"slug":"/openai/"}},{"headings":[{"value":"개인적인 철학"}],"fields":{"slug":"/philosophy/"}},{"headings":[{"value":"Physics"}],"fields":{"slug":"/physics/"}},{"headings":[{"value":"Playwright"}],"fields":{"slug":"/playwright/"}},{"headings":[{"value":"Podman"}],"fields":{"slug":"/podman/"}},{"headings":[{"value":"PostgreSQL"}],"fields":{"slug":"/postgresql/"}},{"headings":[{"value":"Programming Convention"}],"fields":{"slug":"/programming-convention/"}},{"headings":[{"value":"Python Programming Language"}],"fields":{"slug":"/python/"}},{"headings":[{"value":"인용문"}],"fields":{"slug":"/quotation/"}},{"headings":[{"value":"Programming Paradigm"}],"fields":{"slug":"/programming-paradigm/"}},{"headings":[{"value":"Reactive Extensions"}],"fields":{"slug":"/reactive-extensions/"}},{"headings":[{"value":"React JS"}],"fields":{"slug":"/reactjs/"}},{"headings":[{"value":"Redis"}],"fields":{"slug":"/redis/"}},{"headings":[{"value":"Reverse Engineering"}],"fields":{"slug":"/reverse-engineering/"}},{"headings":[{"value":"Rust Programming Language"}],"fields":{"slug":"/rust/"}},{"headings":[{"value":"SCP"}],"fields":{"slug":"/scp/"}},{"headings":[{"value":"보안"}],"fields":{"slug":"/security/"}},{"headings":[{"value":"소프트웨어 개발"}],"fields":{"slug":"/software-development/"}},{"headings":[{"value":"Sentry - APM & Error Tracking"}],"fields":{"slug":"/sentry/"}},{"headings":[{"value":"Shell 명령어"}],"fields":{"slug":"/shell/"}},{"headings":[{"value":"SFML"}],"fields":{"slug":"/sfml/"}},{"headings":[{"value":"Spring framework"}],"fields":{"slug":"/spring-framework/"}},{"headings":[{"value":"우주"}],"fields":{"slug":"/space/"}},{"headings":[{"value":"시스템 장애"}],"fields":{"slug":"/system-failures/"}},{"headings":[{"value":"Swagger"}],"fields":{"slug":"/swagger/"}},{"headings":[{"value":"테스트 주도 개발 (Test Driven Development)"}],"fields":{"slug":"/test-driven-development/"}},{"headings":[{"value":"Testing"}],"fields":{"slug":"/testing/"}},{"headings":[{"value":"Tmux"}],"fields":{"slug":"/tmux/"}},{"headings":[{"value":"Unicode"}],"fields":{"slug":"/unicode/"}},{"headings":[{"value":"Treesitter"}],"fields":{"slug":"/treesitter/"}},{"headings":[{"value":"개발/비개발 도구"}],"fields":{"slug":"/tools/"}},{"headings":[{"value":"Unity 3D"}],"fields":{"slug":"/unity3d/"}},{"headings":[{"value":"Valve사의 신규 입사자를 위한 핸드북"}],"fields":{"slug":"/valve/"}},{"headings":[{"value":"Vim Plugins"}],"fields":{"slug":"/vim-plugins/"}},{"headings":[{"value":"Vim"}],"fields":{"slug":"/vim/"}},{"headings":[{"value":"VimWiki"}],"fields":{"slug":"/vimwiki/"}},{"headings":[{"value":"VimEnter 2023"}],"fields":{"slug":"/vimenter-2023/"}},{"headings":[{"value":"Vue JS"}],"fields":{"slug":"/vuejs/"}},{"headings":[{"value":"Windows Subsystem for Linux (WSL)"}],"fields":{"slug":"/windows-subsystem-for-linux/"}},{"headings":[{"value":"WebGL"}],"fields":{"slug":"/webgl/"}},{"headings":[{"value":"웹 개발"}],"fields":{"slug":"/web/"}},{"headings":[{"value":"Windows"}],"fields":{"slug":"/windows/"}},{"headings":[{"value":"추론 애플리케이션"}],"fields":{"slug":"/인공지능/용어/추론 애플리케이션/"}},{"headings":[{"value":"유튜브 요약 프롬프트"}],"fields":{"slug":"/인공지능/프롬프트/youtube-summary/"}}]},"site":{"siteMetadata":{"gitHubRepositoryUrl":"https://github.com/edunga1/cat-logic"}}},"pageContext":{"id":"9e145bd8-078e-5e11-9236-d3866772756f"}},"staticQueryHashes":[],"slicesMap":{}}