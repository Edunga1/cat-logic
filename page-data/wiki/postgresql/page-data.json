{"componentChunkName":"component---src-components-gatsby-templates-wiki-tsx","path":"/wiki/postgresql/","result":{"data":{"markdownRemark":{"headings":[{"value":"PostgreSQL"}],"fields":{"slug":"/postgresql/","relatedDocs":[{"slug":"javascript","similarity":0.4459473974},{"slug":"web","similarity":0.4419718468},{"slug":"2016-08-27-gdg-webtech-workshop-nnn","similarity":0.3764030153},{"slug":"crontab","similarity":0.4271692802},{"slug":"idea-methodology","similarity":0.3563168845},{"slug":"2016-11-16-google-campus-two-things-you-must-keep-in-google-play","similarity":0.3758222852},{"slug":"spring-framework","similarity":0.3483887308},{"slug":"aws","similarity":0.4647772349},{"slug":"git","similarity":0.4320294205},{"slug":"algorithm-practice","similarity":0.405193606},{"slug":"docker","similarity":0.4368027182},{"slug":"scp","similarity":0.3164178776},{"slug":"mac-os","similarity":0.4252080335},{"slug":"testing","similarity":0.4377966193},{"slug":"machine-learning","similarity":0.4641840469},{"slug":"devops","similarity":0.3002960661},{"slug":"python","similarity":0.4835292361},{"slug":"object-oriented-programming","similarity":0.4476605019},{"slug":"linux","similarity":0.4020226424},{"slug":"sfml","similarity":0.3789091038},{"slug":"windows","similarity":0.293845018},{"slug":"markdown","similarity":0.3017937976},{"slug":"cat-logic","similarity":0.3826012509},{"slug":"vuejs","similarity":0.2944308648},{"slug":"shell","similarity":0.4655413438},{"slug":"html","similarity":0.4154829872},{"slug":"vimenter-2023","similarity":0.3273831043},{"slug":"data-analysis","similarity":0.5056128357},{"slug":"hardware","similarity":0.2339196882},{"slug":"programming-convention","similarity":0.4117447153},{"slug":"webgl","similarity":0.3461324029},{"slug":"sentry","similarity":0.3736748414},{"slug":"valve","similarity":0.2570564185},{"slug":"reactjs","similarity":0.4302100705},{"slug":"airflow","similarity":0.3726921328},{"slug":"computer-graphics","similarity":0.2625172164},{"slug":"programming-philosophy","similarity":0.3888043376},{"slug":"elasticsearch","similarity":0.4537100187},{"slug":"unicode","similarity":0.3570027388},{"slug":"logging","similarity":0.2906603148},{"slug":"tools","similarity":0.3956042343},{"slug":"programming-paradigm","similarity":0.4929155801},{"slug":"system-failures","similarity":0.2325078159},{"slug":"amazon-redshift","similarity":0.5781446707},{"slug":"inspiration","similarity":0.2737016613},{"slug":"gatsbyjs","similarity":0.4569326477},{"slug":"design-pattern","similarity":0.450173724},{"slug":"game","similarity":0.4132649823},{"slug":"kubernetes","similarity":0.3758523237},{"slug":"llm-tools","similarity":0.4100299174},{"slug":"nodejs","similarity":0.4808605408},{"slug":"continuous-integration-and-deployment","similarity":0.2934208349},{"slug":"rust","similarity":0.3457897723},{"slug":"book","similarity":0.3020039283},{"slug":"jetbrains","similarity":0.4430704545},{"slug":"quotation","similarity":0.3932877438},{"slug":"postgresql","similarity":1},{"slug":"jira","similarity":0.3321301382},{"slug":"swagger","similarity":0.3420403392},{"slug":"architecture","similarity":0.4390218946},{"slug":"unity3d","similarity":0.3452151425},{"slug":"jargon","similarity":0.4057229281},{"slug":"language-server-protocol","similarity":0.2895227112},{"slug":"clean-code","similarity":0.3797086419},{"slug":"java","similarity":0.5448242036},{"slug":"windows-subsystem-for-linux","similarity":0.4186187469},{"slug":"test-driven-development","similarity":0.265251722},{"slug":"github","similarity":0.4390737025},{"slug":"network","similarity":0.3272690479},{"slug":"kotlin","similarity":0.4557103048},{"slug":"c-sharp","similarity":0.3105838336},{"slug":"angularjs","similarity":0.3725279269},{"slug":"vim","similarity":0.4071202369},{"slug":"ionic-framework","similarity":0.2845885664},{"slug":"physics","similarity":0.2938803401},{"slug":"html-canvas","similarity":0.2676957879},{"slug":"reverse-engineering","similarity":0.2989810457},{"slug":"space","similarity":0.2417528051},{"slug":"css","similarity":0.3811769176},{"slug":"code-review","similarity":0.3465288345},{"slug":"software-development","similarity":0.389954071},{"slug":"database","similarity":0.5701775764},{"slug":"reactive-extensions","similarity":0.2895404811},{"slug":"redis","similarity":0.3254592287},{"slug":"mail","similarity":0.2702878292},{"slug":"experience-review","similarity":0.3128844036},{"slug":"google-analytics","similarity":0.2712094091},{"slug":"data-structure","similarity":0.4815044824},{"slug":"vimwiki","similarity":0.3491189606},{"slug":"embeddings","similarity":0.3792294781},{"slug":"추론 애플리케이션","similarity":0.2611260222}]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#postgresql\">PostgreSQL</a></p>\n<ul>\n<li>\n<p><a href=\"#%EC%83%8C%EB%93%9C%EB%B0%95%EC%8A%A4-%ED%99%98%EA%B2%BD\">샌드박스 환경</a></p>\n<ul>\n<li><a href=\"#%EA%B8%B0%EB%B3%B8-%EB%AA%85%EB%A0%B9%EC%96%B4\">기본 명령어</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#mysql-%EC%BF%BC%EB%A6%AC-%EC%B0%A8%EC%9D%B4%EC%A0%90\">MySQL 쿼리 차이점</a></p>\n</li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"postgresql\" style=\"position:relative;\"><a href=\"#postgresql\" aria-label=\"postgresql permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PostgreSQL</h1>\n<p>객체-관계형 데이터베이스 관리 시스템.</p>\n<p>제대로 사용한 적은 없고, <a href=\"../amazon-redshift\">Amazon Redshift</a>를 통해서 쿼리 작성만 해보았다.</p>\n<h2 id=\"샌드박스-환경\" style=\"position:relative;\"><a href=\"#%EC%83%8C%EB%93%9C%EB%B0%95%EC%8A%A4-%ED%99%98%EA%B2%BD\" aria-label=\"샌드박스 환경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>샌드박스 환경</h2>\n<p>도커로 Postgres를 실행해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">--rm</span> <span class=\"token parameter variable\">--name</span> some-postgres <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">POSTGRES_PASSWORD</span><span class=\"token operator\">=</span>password postgres</code></pre></div>\n<p><code class=\"language-text\">POSTGRES_PASSWORD</code>는 필수 환경 변수이다. 컨테이너 내에서 접속할 거라 외울 필요는 없다.</p>\n<p>이제 <code class=\"language-text\">psql</code>로 접속한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ <span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-ti</span> some-postgres psql <span class=\"token parameter variable\">-U</span> postgres\npsql <span class=\"token punctuation\">(</span><span class=\"token number\">16.2</span> <span class=\"token punctuation\">(</span>Debian <span class=\"token number\">16.2</span>-1.pgdg120+2<span class=\"token punctuation\">))</span>\nType <span class=\"token string\">\"help\"</span> <span class=\"token keyword\">for</span> help.\n\n<span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># help</span>\nYou are using psql, the command-line interface to PostgreSQL.\nType:  <span class=\"token punctuation\">\\</span>copyright <span class=\"token keyword\">for</span> distribution terms\n       <span class=\"token punctuation\">\\</span>h <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">help</span> with SQL commands\n       <span class=\"token punctuation\">\\</span>? <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">help</span> with psql commands\n       <span class=\"token punctuation\">\\</span>g or terminate with semicolon to execute query\n       <span class=\"token punctuation\">\\</span>q to quit</code></pre></div>\n<h3 id=\"기본-명령어\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-label=\"기본 명령어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 명령어</h3>\n<p><code class=\"language-text\">\\l</code> : 데이터베이스 목록</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\l</span>\n                                                      List of databases\n   Name    <span class=\"token operator\">|</span>  Owner   <span class=\"token operator\">|</span> Encoding <span class=\"token operator\">|</span> Locale Provider <span class=\"token operator\">|</span>  Collate   <span class=\"token operator\">|</span>   Ctype    <span class=\"token operator\">|</span> ICU Locale <span class=\"token operator\">|</span> ICU Rules <span class=\"token operator\">|</span>   Access privileges\n-----------+----------+----------+-----------------+------------+------------+------------+-----------+-----------------------\n postgres  <span class=\"token operator\">|</span> postgres <span class=\"token operator\">|</span> UTF8     <span class=\"token operator\">|</span> libc            <span class=\"token operator\">|</span> en_US.utf8 <span class=\"token operator\">|</span> en_US.utf8 <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span>\n template0 <span class=\"token operator\">|</span> postgres <span class=\"token operator\">|</span> UTF8     <span class=\"token operator\">|</span> libc            <span class=\"token operator\">|</span> en_US.utf8 <span class=\"token operator\">|</span> en_US.utf8 <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token operator\">=</span>c/postgres          +\n           <span class=\"token operator\">|</span>          <span class=\"token operator\">|</span>          <span class=\"token operator\">|</span>                 <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span>CTc/postgres\n template1 <span class=\"token operator\">|</span> postgres <span class=\"token operator\">|</span> UTF8     <span class=\"token operator\">|</span> libc            <span class=\"token operator\">|</span> en_US.utf8 <span class=\"token operator\">|</span> en_US.utf8 <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token operator\">=</span>c/postgres          +\n           <span class=\"token operator\">|</span>          <span class=\"token operator\">|</span>          <span class=\"token operator\">|</span>                 <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> <span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span>CTc/postgres\n<span class=\"token punctuation\">(</span><span class=\"token number\">3</span> rows<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">\\c</code> : 데이터베이스 접속<br>\n<code class=\"language-text\">\\d</code> : 테이블, 뷰, 시퀀스 목록</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\c postgres</span>\nYou are now connected to database <span class=\"token string\">\"postgres\"</span> as user <span class=\"token string\">\"postgres\"</span><span class=\"token builtin class-name\">.</span>\n<span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\d</span>\nDid not <span class=\"token function\">find</span> any relations.</code></pre></div>\n<p>아무 테이블도 없다. 테이블을 만들어보자.</p>\n<p>ChatGPT에 부탁해서 학생 테이블 생성 쿼리를 받았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> students <span class=\"token punctuation\">(</span>\n    id <span class=\"token keyword\">SERIAL</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n    name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    age <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n    gender <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># CREATE TABLE students (</span>\n    <span class=\"token function\">id</span> SERIAL PRIMARY KEY,\n    name VARCHAR<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>,\n    age INT,\n    gender VARCHAR<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nCREATE TABLE\n<span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\d</span>\n               List of relations\n Schema <span class=\"token operator\">|</span>      Name       <span class=\"token operator\">|</span>   Type   <span class=\"token operator\">|</span>  Owner\n--------+-----------------+----------+----------\n public <span class=\"token operator\">|</span> students        <span class=\"token operator\">|</span> table    <span class=\"token operator\">|</span> postgres\n public <span class=\"token operator\">|</span> students_id_seq <span class=\"token operator\">|</span> sequence <span class=\"token operator\">|</span> postgres\n<span class=\"token punctuation\">(</span><span class=\"token number\">2</span> rows<span class=\"token punctuation\">)</span></code></pre></div>\n<p>이제 <code class=\"language-text\">\\d</code>로 테이블이 생성되었음을 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># select * from students;</span>\n <span class=\"token function\">id</span> <span class=\"token operator\">|</span> name <span class=\"token operator\">|</span> age <span class=\"token operator\">|</span> gender\n----+------+-----+--------\n<span class=\"token punctuation\">(</span><span class=\"token number\">0</span> rows<span class=\"token punctuation\">)</span></code></pre></div>\n<p>이제 기본적인 쿼리는 다른 SQL과 비슷하므로 사용하는데 큰 어려움은 없다.</p>\n<h2 id=\"mysql-쿼리-차이점\" style=\"position:relative;\"><a href=\"#mysql-%EC%BF%BC%EB%A6%AC-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"mysql 쿼리 차이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MySQL 쿼리 차이점</h2>\n<p>MySQL과 다르게, group by로 aggregation 시 aggregation function을 사용하지 않는 컬럼을 select에 포함할 수 없다.</p>\n<p>이를 해결하기 위해서, 모든 값을 보고싶다면 <code class=\"language-text\">listagg</code>를 사용하자. MySQL의 <code class=\"language-text\">group_concat</code>와 비슷하다.<br>\n아무 값이나 보고 싶다면 <code class=\"language-text\">any_value</code>를 사용하자. MySQL의 그냥 컬럼을 select하는 것과 비슷하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span>\n  family<span class=\"token punctuation\">,</span>\n  listagg<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">', '</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> names<span class=\"token punctuation\">,</span>\n  any_value<span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> age\n<span class=\"token keyword\">from</span> users\n<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> family<span class=\"token punctuation\">;</span></code></pre></div>"}},"pageContext":{"id":"0f0d5fb2-5bf4-55bf-8fc7-f3011370f9c3"}},"staticQueryHashes":[],"slicesMap":{}}