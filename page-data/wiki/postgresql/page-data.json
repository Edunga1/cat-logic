{"componentChunkName":"component---src-components-gatsby-templates-wiki-tsx","path":"/wiki/postgresql/","result":{"data":{"markdownRemark":{"headings":[{"value":"PostgreSQL"}],"fields":{"slug":"/postgresql/","relatedDocs":[]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#postgresql\">PostgreSQL</a></p>\n<ul>\n<li><a href=\"#mysql-%EC%BF%BC%EB%A6%AC-%EC%B0%A8%EC%9D%B4%EC%A0%90\">MySQL 쿼리 차이점</a></li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"postgresql\" style=\"position:relative;\"><a href=\"#postgresql\" aria-label=\"postgresql permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PostgreSQL</h1>\n<p>객체-관계형 데이터베이스 관리 시스템.</p>\n<p>제대로 사용한 적은 없고, <a href=\"../amazon-redshift\">Amazon Redshift</a>를 통해서 쿼리 작성만 해보았다.</p>\n<h2 id=\"mysql-쿼리-차이점\" style=\"position:relative;\"><a href=\"#mysql-%EC%BF%BC%EB%A6%AC-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"mysql 쿼리 차이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MySQL 쿼리 차이점</h2>\n<p>MySQL과 다르게, group by로 aggregation 시 aggregation function을 사용하지 않는 컬럼을 select에 포함할 수 없다.</p>\n<p>이를 해결하기 위해서, 모든 값을 보고싶다면 <code class=\"language-text\">listagg</code>를 사용하자. MySQL의 <code class=\"language-text\">group_concat</code>와 비슷하다.<br>\n아무 값이나 보고 싶다면 <code class=\"language-text\">any_value</code>를 사용하자. MySQL의 그냥 컬럼을 select하는 것과 비슷하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span>\n  family<span class=\"token punctuation\">,</span>\n  listagg<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">', '</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> names<span class=\"token punctuation\">,</span>\n  any_value<span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> age\n<span class=\"token keyword\">from</span> users\n<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> family<span class=\"token punctuation\">;</span></code></pre></div>"}},"pageContext":{"id":"0f0d5fb2-5bf4-55bf-8fc7-f3011370f9c3"}},"staticQueryHashes":[],"slicesMap":{}}