{"componentChunkName":"component---src-pages-wiki-markdown-remark-id-tsx","path":"/wiki/946c6c52-c601-5704-898f-3aca85f58ef0/","result":{"data":{"markdownRemark":{"tableOfContents":"<ul>\n<li>\n<p><a href=\"#airflow\">Airflow</a></p>\n<ul>\n<li><a href=\"#airflow-%EC%97%B0%EC%8A%B5\">Airflow 연습</a></li>\n<li><a href=\"#airflow%EA%B0%80-dag-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%9D%B8%EC%8B%9D%ED%95%98%EB%8A%94-%EB%B0%A9%EC%8B%9D\">airflow가 DAG 파일을 인식하는 방식</a></li>\n<li><a href=\"#%EB%8B%A4%EC%9D%8C-dag-%EC%8B%A4%ED%96%89-%EC%8B%9C%EA%B0%84\">다음 DAG 실행 시간</a></li>\n</ul>\n</li>\n</ul>","html":"<h1>Airflow</h1>\n<h2>Airflow 연습</h2>\n<p><a href=\"https://github.com/Edunga1/practice-airflow\">https://github.com/Edunga1/practice-airflow</a></p>\n<p>docker-compose로 airflow 환경 구축하고 테스트할 수 있다.</p>\n<p><a href=\"https://airflow.apache.org/docs/apache-airflow/stable/howto/docker-compose/index.html\">Airflow 공식 문서</a>에서 docker로 실행하는 방법을 잘 설명해놓았다.</p>\n<h2>airflow가 DAG 파일을 인식하는 방식</h2>\n<p><a href=\"https://airflow.apache.org/docs/apache-airflow/stable/core-concepts/dags.html#loading-dags\">Loading DAGs</a></p>\n<blockquote>\n<p>When searching for DAGs inside the DAG_FOLDER, Airflow only considers Python files that contain the strings airflow and dag (case-insensitively) as an optimization.</p>\n</blockquote>\n<p><code>airflow</code> 또는 <code>dag</code> 문자열을 포함하는 파이썬 파일만 DAG 파일로 인식한다.</p>\n<p>DAG 스크립트를 모듈화한다고 DAG 생성하는 부분을 중앙집중화한다면 DAG 파일을 인식하지 못할 수 있으니 주의해야 한다.</p>\n<blockquote>\n<p>To consider all Python files instead, disable the DAG_DISCOVERY_SAFE_MODE configuration flag.</p>\n</blockquote>\n<p>모든 파이썬 파일을 DAG 파일로 인식할 수 있는 옵션도 있다고 한다.</p>\n<h2>다음 DAG 실행 시간</h2>\n<pre><code class=\"language-sh\">airflow dags next-execution &#x3C;DAG_ID>\n</code></pre>\n<p>Paused 상태인 DAG는 다음 실행 시간을 알 수 없다.</p>\n<p>Web UI에서 확인하는 방법은 없는 듯.</p>"}},"pageContext":{"id":"946c6c52-c601-5704-898f-3aca85f58ef0","__params":{"id":"946c6c52-c601-5704-898f-3aca85f58ef0"}}},"staticQueryHashes":[],"slicesMap":{}}