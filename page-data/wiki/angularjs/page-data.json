{"componentChunkName":"component---src-pages-wiki-markdown-remark-fields-slug-tsx","path":"/wiki/angularjs/","result":{"data":{"markdownRemark":{"headings":[{"value":"Angular JS"}],"tableOfContents":"<ul>\n<li>\n<p><a href=\"#angular-js\">Angular JS</a></p>\n<ul>\n<li>\n<p><a href=\"#johnpapas-angularjs-style-guide\">Johnpapa's AngularJS Style Guide</a></p>\n<ul>\n<li>\n<p><a href=\"#component\">Component</a></p>\n<ul>\n<li>\n<p><a href=\"#%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC\">컨트롤러</a></p>\n<ul>\n<li><a href=\"#contolleras%EC%99%80-vm-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\"><code>contollerAs</code>와 <code>vm</code> 사용하기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%84%9C%EB%B9%84%EC%8A%A4-service-factory-provider\">서비스 (service, factory, provider)</a></p>\n<ul>\n<li><a href=\"#%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1%EC%9D%80-revealing-module-pattern\">서비스 코드 작성은 Revealing Module Pattern</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#modularity\">Modularity</a></p>\n<ul>\n<li><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%84%9C%EB%B9%84%EC%8A%A4%EB%A5%BC-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0\">데이터 서비스를 분리하기</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8\">테스트</a></p>\n<ul>\n<li><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%99%98%EA%B2%BD-%EB%AA%A8%EB%93%88\">테스트 환경 모듈</a></li>\n<li><a href=\"#karmaconfjs\">karma.conf.js</a></li>\n<li><a href=\"#%EC%8B%A4%ED%96%89\">실행</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#type-hinting\">type hinting</a></p>\n</li>\n<li>\n<p><a href=\"#migrating-15-to-16\">Migrating 1.5 to 1.6</a></p>\n<ul>\n<li><a href=\"#component-lifecycle\">Component Lifecycle</a></li>\n<li><a href=\"#http\">$http</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"angular-js\" style=\"position:relative;\"><a href=\"#angular-js\" aria-label=\"angular js permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Angular JS</h1>\n<p>AngularJS에 대한 이야기. 2017-11에 작성됨.</p>\n<h2 id=\"johnpapas-angularjs-style-guide\" style=\"position:relative;\"><a href=\"#johnpapas-angularjs-style-guide\" aria-label=\"johnpapas angularjs style guide permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Johnpapa's AngularJS Style Guide</h2>\n<p><a href=\"https://github.com/johnpapa/angular-styleguide\">https://github.com/johnpapa/angular-styleguide</a></p>\n<p>프론트엔드 자바스크립트 프레임워크의 과도기?에서 만들어진 프레임워크라 생각한다.\n그래서 bad practice를 만들기 쉬웠는데, 그래서 이 스타일 가이드의 인기가 많았다.</p>\n<h3 id=\"component\" style=\"position:relative;\"><a href=\"#component\" aria-label=\"component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Component</h3>\n<h4 id=\"컨트롤러\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC\" aria-label=\"컨트롤러 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨트롤러</h4>\n<h5 id=\"contolleras와-vm-사용하기\" style=\"position:relative;\"><a href=\"#contolleras%EC%99%80-vm-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"contolleras와 vm 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>contollerAs</code>와 <code>vm</code> 사용하기</h5>\n<p><a href=\"https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#style-y032\">https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#style-y032</a></p>\n<p>controllerAS + vm 사용하고 <code>this</code> 변수에 담고 직접 사용하지 않는다.</p>\n<pre><code class=\"language-javascript\">/* avoid */\nfunction CustomerController() {\n    this.name = {};\n    this.sendMessage = function() { };\n}\n</code></pre>\n<pre><code class=\"language-javascript\">/* recommended */\nfunction CustomerController() {\n    var vm = this;\n    vm.name = {};\n    vm.sendMessage = function() { };\n}\n</code></pre>\n<h4 id=\"서비스-service-factory-provider\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B9%84%EC%8A%A4-service-factory-provider\" aria-label=\"서비스 service factory provider permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서비스 (service, factory, provider)</h4>\n<h5 id=\"서비스-코드-작성은-revealing-module-pattern\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1%EC%9D%80-revealing-module-pattern\" aria-label=\"서비스 코드 작성은 revealing module pattern permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서비스 코드 작성은 Revealing Module Pattern</h5>\n<p><a href=\"https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#style-y052\">https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#style-y052</a></p>\n<p>멤버 변수 및 함수는 상단에 위치하여 바로 구분할 수 있도록한다:\n<a href=\"https://addyosmani.com/resources/essentialjsdesignpatterns/book/#revealingmodulepatternjavascript\">Revealing Module Pattern</a></p>\n<ol>\n<li>이는 서비스가 사용 가능한 정보를 파악하는데 도움을 주고 유닛 테스트 대상이며 Mocking 할 수 있음을 의미한다.</li>\n<li>구현 코드가 길어지더라도 스크롤을 내리지 않고 expose 된 기능 및 값을 한눈에 파악할 수 있다.</li>\n<li>함수 설정을 쉽게 할 수 있다. 구현 세부사항을 return 아래로, 호추가능한 인터페이스를 위로 두면 읽기 쉽다.</li>\n</ol>\n<pre><code class=\"language-javascript\">/* avoid */\nfunction dataService() {\n  var someValue = '';\n  function save() {\n    /* */\n  };\n  function validate() {\n    /* */\n  };\n\n  return {\n      save: save,\n      someValue: someValue,\n      validate: validate\n  };\n}\n</code></pre>\n<pre><code class=\"language-javascript\">/* recommended */\nfunction dataService() {\n    var someValue = '';\n    var service = {\n        save: save,\n        someValue: someValue,\n        validate: validate\n    };\n    return service;\n\n    ////////////\n\n    function save() {\n        /* */\n    };\n\n    function validate() {\n        /* */\n    };\n}\n</code></pre>\n<h3 id=\"modularity\" style=\"position:relative;\"><a href=\"#modularity\" aria-label=\"modularity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Modularity</h3>\n<h4 id=\"데이터-서비스를-분리하기\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%84%9C%EB%B9%84%EC%8A%A4%EB%A5%BC-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-label=\"데이터 서비스를 분리하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 서비스를 분리하기</h4>\n<p><a href=\"https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#data-services\">https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#data-services</a></p>\n<p>XHR calls, local storage, stashing in memory 등으로 부터 데이터를 얻는 로직은 factory로 분리한다.</p>\n<ol>\n<li>컨틀롤러의 역할은 정보(데이터)를 모으고 뷰에 출력하는 것이므로 데이터 관리를 해선 안된다.</li>\n<li>테스트 할 때 Mock 구성을 쉽게 만든다.</li>\n<li>데이터 저장소(server, local storage, memory)로부터 데이터 핸들링하는 코드가 더 명확해 진다.\n<ul>\n<li>\n<p>http header를 포함하는 코드</p>\n</li>\n<li>\n<p><code>$http</code>와 같은 다른 서비스나 데이터와 커뮤니케이션 하는 코드</p>\n</li>\n<li>\n<p>컨틀롤러와 같이 데이터 서비스를 호출자가 하나의 지점으로 통하게 하고 데이터를 감추어 캡슐화 함</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"테스트\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트</h2>\n<h3 id=\"테스트-환경-모듈\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%99%98%EA%B2%BD-%EB%AA%A8%EB%93%88\" aria-label=\"테스트 환경 모듈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트 환경 모듈</h3>\n<p>Karma + Mocha + Chai, Angular Mocks</p>\n<p>NPM modules:</p>\n<ul>\n<li>angular-mocks</li>\n<li>karma</li>\n<li>karma-mocha</li>\n<li>karma-mocha-repoter</li>\n<li>karma-chai</li>\n<li>karma-chrome-launcher</li>\n<li>mocha</li>\n<li>chai</li>\n<li>sinon</li>\n</ul>\n<p>karma의 경우 글로벌로 <code>karma-cli</code>를 설치하라는 글들이 많이 보였지만</p>\n<p>로컬에 <code>karma</code>만 설치하여 <code>./node_modules/karma/bin/karma</code>로 명령어를 실행할 수 있었다.</p>\n<h3 id=\"karmaconfjs\" style=\"position:relative;\"><a href=\"#karmaconfjs\" aria-label=\"karmaconfjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>karma.conf.js</h3>\n<p><code>karma init</code>을 통해 생성되는 카르마 설정파일을 수정한다.</p>\n<pre><code class=\"language-javascript\">module.exports = function(config) {\n    config.set({\n        // ...\n\n        // 사용 할 테스트 모듈 목록\n        frameworks: ['mocha', 'chai', 'sinon'],\n\n\n        // list of files / patterns to load in the browser\n        files: [\n            // AnguarJS 등 프레임워크와 라이브러리 파일의 경로를 여기에 작성한다.\n            // 왠만하면 index.html 내에 &#x3C;script> 태그로 임포트하는 파일 순서 그대로 작성한다.\n            // karma가 브라우저에 웹 페이지를 띄울 때 여기에 작성한 파일들을 순서대로 가져오는 거 같다. (순서 중요)\n\n            // 테스트 대상이 되는 소스 코드를 포함한다.\n            'www/**/*.js',\n\n            // angular-mocks\n            'node_modules/angular-mocks/angular-mocks.js',\n\n            // 테스트 스크립트를 포함한다.\n            // test 폴더 아래에 abc.spec.js 와 같은 방식으로 작성했다.\n            'test/**/*.spec.js'\n        ],\n\n        // 콘솔에 출력되는 테스트 진행 상황에 관한 모듈.\n        // karma-mocha-repoter를 사용했다.\n        reporters: ['mocha'],\n\n        // ...\n  })\n}\n\n</code></pre>\n<h3 id=\"실행\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%ED%96%89\" aria-label=\"실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실행</h3>\n<p><code>karma start</code> 또는 <code> ./node_modules/karma/bin/karma start</code></p>\n<h2 id=\"type-hinting\" style=\"position:relative;\"><a href=\"#type-hinting\" aria-label=\"type hinting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>type hinting</h2>\n<p>컨트롤러 내에서 <code>vm</code>(ViewModel)으로 뷰 모델을 관리 할 때 타입 힌팅을 제대로 얻을 수 없다.</p>\n<pre><code class=\"language-javascript\">function controller() {\n    var vm = this;\n\n    /**\n     * @typedef CustomType\n     * @property {number} foo\n     * @property {string} var\n     */\n    /**\n     * @type {Array.&#x3C;CustomType>}\n     */\n    vm.list = []; // any\n}\n</code></pre>\n<p>따라서 뷰 모델에 <code>@typedef</code>로 하위 모델들을 명시하면서 해결했다.</p>\n<pre><code class=\"language-javascript\">function controller() {\n    /**\n     * @typedef CustomType\n     * @property {number} foo\n     * @property {string} var\n     */\n    /**\n     * @typedef {ViewModel}\n     * @property {Array.&#x3C;CustomType>} list\n     */\n    /**\n     * @type {ViewModel}\n     */\n    var vm = this;\n\n    vm.list = []; // Array.&#x3C;{}>\n}\n</code></pre>\n<h2 id=\"migrating-15-to-16\" style=\"position:relative;\"><a href=\"#migrating-15-to-16\" aria-label=\"migrating 15 to 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Migrating 1.5 to 1.6</h2>\n<h3 id=\"component-lifecycle\" style=\"position:relative;\"><a href=\"#component-lifecycle\" aria-label=\"component lifecycle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Component Lifecycle</h3>\n<p>Lifecycle이 생겼다.</p>\n<p>컴포넌트의 컨트롤러 내에서 this.$onInit을 구현하면(함수) 컴포넌트가 초기화 될 때 호출된다.\n이 방법으로 tabs를 구현한 공식 예제:</p>\n<p><a href=\"https://docs.angularjs.org/guide/component\">https://docs.angularjs.org/guide/component</a></p>\n<p>Intercomponent Communication 단락 참조</p>\n<h3 id=\"http\" style=\"position:relative;\"><a href=\"#http\" aria-label=\"http permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>$http</h3>\n<p>이제 success, error가 아니라 then, catch를 사용한다. 더 이상 $q.defer()로 wrapping 할 필요가 없다.</p>"}},"pageContext":{"id":"669d4439-adda-5af1-9199-3dd4327f5776","fields__slug":"/angularjs/","__params":{"fields__slug":"angularjs"}}},"staticQueryHashes":[],"slicesMap":{}}