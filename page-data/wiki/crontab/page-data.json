{"componentChunkName":"component---src-pages-wiki-markdown-remark-fields-slug-tsx","path":"/wiki/crontab/","result":{"data":{"markdownRemark":{"tableOfContents":"<ul>\n<li><a href=\"#crontab\">crontab</a></li>\n<li><a href=\"#crontab-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EC%8B%A4%ED%96%89\">crontab 등록 및 실행</a></li>\n<li><a href=\"#macos%EC%9D%98-%EA%B2%BD%EC%9A%B0-email%EB%A1%9C-%EA%B2%B0%EA%B3%BC%EA%B0%80-%EC%A0%84%EC%86%A1%EB%90%9C%EB%8B%A4\">macOS의 경우 email로 결과가 전송된다.</a></li>\n</ul>","html":"<h1 id=\"crontab\" style=\"position:relative;\"><a href=\"#crontab\" aria-label=\"crontab permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>crontab</h1>\n<p>작업 스케쥴링을 위한 명령어 도구.</p>\n<ul>\n<li><code>crontab -e</code>: crontab 파일을 열어서 수정한다.</li>\n<li><code>crontab -l</code>: crontab 파일을 출력한다.</li>\n<li><code>crontab -r</code>: crontab 파일을 삭제한다.</li>\n</ul>\n<p>각 명령어는 현재 사용자 기준으로 동작한다.</p>\n<h1 id=\"crontab-등록-및-실행\" style=\"position:relative;\"><a href=\"#crontab-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EC%8B%A4%ED%96%89\" aria-label=\"crontab 등록 및 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>crontab 등록 및 실행</h1>\n<p><code>crontab -e</code> 명령어를 입력하면 vi 에디터가 실행되며, 아래와 같이 작성한다.</p>\n<pre><code>PATH=/Users/username/bin:/usr/local/Cellar/pyenv-virtualenv/1.1.5/shims:/usr/local/Cellar/pyenv-virtualenv/1.1.5/shims\n\n21 * * * * docker-compose -f ~/workspace/my-api/docker-compose.local.yml run server python script.py >> ~/workspace/my-api/script.log\n</code></pre>\n<p>이제 <code>cron</code>을 통해 실행되면, <code>~/workspace/my-api/script.log</code> 파일에 결과가 기록된다.\n실행되지 않으면 daemon(<code>cron</code>)이 실행되고 있지 않은 것이므로, <code>cron</code>을 실행한다.\n이는 운영체제마다 다를 것으로 보인다. ubuntu(<a href=\"/cat-logic/e1ea7eadfb2879840f12dc0e6a0741c0/windows-subsystem-for-linux.md\">wsl</a>)의 경우 <code>cron</code>을 직접 실행시켜야 했다.(<code>sudo cron</code>)</p>\n<ul>\n<li>명령어의 실행 위치는 home directory다. 상대 경로로 사용시 주의해야 한다.</li>\n<li>사용자 로그인을 통해 shell에 접속한 것이 아니므로 profile 파일을 읽지 않는다. 따라서 명령어의 경우 PATH 환경변수를 명시적으로 지정해야 한다.</li>\n<li>예시와 같이 crontab 파일에 <code>PATH</code> 등 환경변수를 지정할 수 있다.</li>\n</ul>\n<p><strong>실행 결과</strong></p>\n<blockquote>\n<p>Output of the crontab jobs (including errors) is sent through</p>\n</blockquote>\n<p>email to the user the crontab file belongs to (unless redirected).</p>\n<p><em>- crontab 파일 내용중</em></p>\n<p>예시처럼, 출력은 redirection을 통해서 남기거나, 그렇지 않으면 사용자의 email로 전송된다고 한다.</p>\n<h1 id=\"macos의-경우-email로-결과가-전송된다\" style=\"position:relative;\"><a href=\"#macos%EC%9D%98-%EA%B2%BD%EC%9A%B0-email%EB%A1%9C-%EA%B2%B0%EA%B3%BC%EA%B0%80-%EC%A0%84%EC%86%A1%EB%90%9C%EB%8B%A4\" aria-label=\"macos의 경우 email로 결과가 전송된다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>macOS의 경우 email로 결과가 전송된다.</h1>\n<p>읽지 않은 메일이 있으면, 터미널에 접속하면 다음과 같은 메시지가 나온다:</p>\n<pre><code class=\"language-bash\">Last login: Sun Apr 25 15:44:23 on ttys000\nYou have new mail.\n</code></pre>\n<p><code>mail</code> 실행하면.</p>\n<pre><code class=\"language-bash\">❯ mail\nMail version 8.1 6/6/93.  Type ? for help.\n\"/var/mail/username\": 10 messages 10 new\n>N  1 username@usernameui-Mac  Sun Apr 25 16:39  21/862   \"Cron &#x3C;username@usernameui-MacBookPro> python ~/workspace/my-api/script.py\"\n N  2 username@usernameui-Mac  Sun Apr 25 16:41  18/742   \"Cron &#x3C;username@usernameui-MacBookPro> doco -f docker-compose.local.yml run server python script.py\"\n N  3 username@usernameui-Mac  Sun Apr 25 16:42  21/862   \"Cron &#x3C;username@usernameui-MacBookPro> python ~/workspace/my-api/script.py\"\n N  4 username@usernameui-Mac  Sun Apr 25 16:42  18/739   \"Cron &#x3C;username@ip-192-168-0-10> doco -f docker-compose.local.yml run server python script.py\"\n N  5 username@ip-192-168-0-1  Sun Apr 25 16:43  18/900   \"Cron &#x3C;username@ip-192-168-0-10> doco -f docker-compose.local.yml run server python script.py\"\n N  6 username@ip-192-168-0-1  Sun Apr 25 16:46  18/900   \"Cron &#x3C;username@ip-192-168-0-10> doco -f docker-compose.local.yml run server python script.py\"\n N  7 username@ip-192-168-0-1  Sun Apr 25 16:48  18/900   \"Cron &#x3C;username@ip-192-168-0-10> doco -f docker-compose.local.yml run server python script.py\"\n N  8 username@ip-192-168-0-1  Sun Apr 25 16:49  18/900   \"Cron &#x3C;username@ip-192-168-0-10> doco -f docker-compose.local.yml run server python script.py\"\n N  9 username@ip-192-168-0-1  Sun Apr 25 16:50  18/900   \"Cron &#x3C;username@ip-192-168-0-10> doco -f docker-compose.local.yml run server python script.py\"\n N 10 username@ip-192-168-0-1  Sun Apr 25 16:50  18/900   \"Cron &#x3C;username@ip-192-168-0-10> doco -f docker-compose.local.yml run server python script.py\"\n? 10\nMessage 10:\nFrom username@ip-192-168-0-10.ap-northeast-2.compute.internal  Sun Apr 25 16:50:02 2021\nX-Original-To: username\nDelivered-To: username@ip-192-168-0-10.ap-northeast-2.compute.internal\nFrom: username@ip-192-168-0-10.ap-northeast-2.compute.internal (Cron Daemon)\nTo: username@ip-192-168-0-10.ap-northeast-2.compute.internal\nSubject: Cron &#x3C;username@ip-192-168-0-10> doco -f docker-compose.local.yml run server python script.py\nX-Cron-Env: &#x3C;SHELL=/bin/sh>\nX-Cron-Env: &#x3C;PATH=/usr/bin:/bin>\nX-Cron-Env: &#x3C;LOGNAME=username>\nX-Cron-Env: &#x3C;USER=username>\nDate: Sun, 25 Apr 2021 16:50:01 +0900 (KST)\n\n/bin/sh: doco: command not found\n\n? q\nSaved 1 message in mbox\nHeld 9 messages in /var/mail/username\n</code></pre>\n<p>번호를 입력해서 메일을 읽을 수 있다. 위 같은 경우 cronjob에 입력한 명령어를 찾을 수 없어서 에러가 발생했다.</p>\n<p>읽은 메시지는 목록에서 사라지는데 <code>~/mbox</code> 파일에 텍스트로 저장된다.</p>"}},"pageContext":{"id":"10436a9b-726a-572c-9a5f-ef2b344b7c71","fields__slug":"/crontab/","__params":{"fields__slug":"crontab"}}},"staticQueryHashes":[],"slicesMap":{}}