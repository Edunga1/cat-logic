{"componentChunkName":"component---src-components-gatsby-templates-wiki-tsx","path":"/wiki/crontab/","result":{"data":{"markdownRemark":{"headings":[{"value":"crontab"}],"fields":{"slug":"/crontab/","relatedDocs":[{"slug":"javascript","similarity":0.487823803},{"slug":"web","similarity":0.5059139765},{"slug":"2016-08-27-gdg-webtech-workshop-nnn","similarity":0.3914071166},{"slug":"crontab","similarity":1},{"slug":"idea-methodology","similarity":0.3177229027},{"slug":"2016-11-16-google-campus-two-things-you-must-keep-in-google-play","similarity":0.3375514095},{"slug":"spring-framework","similarity":0.4080508195},{"slug":"aws","similarity":0.3951404473},{"slug":"git","similarity":0.43915956},{"slug":"algorithm-practice","similarity":0.3251062366},{"slug":"docker","similarity":0.5168129557},{"slug":"scp","similarity":0.4087744036},{"slug":"mac-os","similarity":0.5377427236},{"slug":"testing","similarity":0.3999299483},{"slug":"machine-learning","similarity":0.4142796234},{"slug":"devops","similarity":0.3666117623},{"slug":"python","similarity":0.5023299259},{"slug":"object-oriented-programming","similarity":0.3174962137},{"slug":"linux","similarity":0.337604982},{"slug":"sfml","similarity":0.4263732331},{"slug":"windows","similarity":0.4258657235},{"slug":"markdown","similarity":0.3651703316},{"slug":"cat-logic","similarity":0.3998608961},{"slug":"vuejs","similarity":0.291483185},{"slug":"shell","similarity":0.5812668588},{"slug":"html","similarity":0.3006691251},{"slug":"vimenter-2023","similarity":0.3790070431},{"slug":"data-analysis","similarity":0.3501031636},{"slug":"hardware","similarity":0.2714640754},{"slug":"programming-convention","similarity":0.4691438342},{"slug":"webgl","similarity":0.226921812},{"slug":"sentry","similarity":0.4046777394},{"slug":"valve","similarity":0.2246468577},{"slug":"reactjs","similarity":0.3858613886},{"slug":"airflow","similarity":0.4516084622},{"slug":"computer-graphics","similarity":0.2359369348},{"slug":"programming-philosophy","similarity":0.4504837462},{"slug":"elasticsearch","similarity":0.3495897627},{"slug":"unicode","similarity":0.3053615308},{"slug":"logging","similarity":0.334937474},{"slug":"tools","similarity":0.4834004324},{"slug":"programming-paradigm","similarity":0.4155143186},{"slug":"system-failures","similarity":0.3409217362},{"slug":"amazon-redshift","similarity":0.2291042035},{"slug":"inspiration","similarity":0.3370063636},{"slug":"gatsbyjs","similarity":0.4048012738},{"slug":"design-pattern","similarity":0.3546683568},{"slug":"game","similarity":0.3646263048},{"slug":"kubernetes","similarity":0.4358740384},{"slug":"llm-tools","similarity":0.4704208798},{"slug":"nodejs","similarity":0.4461947097},{"slug":"continuous-integration-and-deployment","similarity":0.3408209601},{"slug":"rust","similarity":0.3755548424},{"slug":"book","similarity":0.2447322785},{"slug":"jetbrains","similarity":0.3983953669},{"slug":"quotation","similarity":0.3228409663},{"slug":"postgresql","similarity":0.4271692802},{"slug":"jira","similarity":0.350972752},{"slug":"swagger","similarity":0.2940024006},{"slug":"architecture","similarity":0.4395170486},{"slug":"unity3d","similarity":0.4179701078},{"slug":"jargon","similarity":0.4165042109},{"slug":"language-server-protocol","similarity":0.2686834684},{"slug":"clean-code","similarity":0.3605909321},{"slug":"java","similarity":0.3616489624},{"slug":"windows-subsystem-for-linux","similarity":0.5236311774},{"slug":"test-driven-development","similarity":0.1954221923},{"slug":"github","similarity":0.465423441},{"slug":"network","similarity":0.4020315415},{"slug":"kotlin","similarity":0.3386291821},{"slug":"c-sharp","similarity":0.2683390023},{"slug":"angularjs","similarity":0.3796921457},{"slug":"vim","similarity":0.4255838559},{"slug":"ionic-framework","similarity":0.3499996295},{"slug":"physics","similarity":0.2813877005},{"slug":"html-canvas","similarity":0.3357319538},{"slug":"reverse-engineering","similarity":0.2703598883},{"slug":"space","similarity":0.2866236557},{"slug":"css","similarity":0.3525946349},{"slug":"code-review","similarity":0.3637923508},{"slug":"software-development","similarity":0.3419143256},{"slug":"database","similarity":0.4293225822},{"slug":"reactive-extensions","similarity":0.2723149529},{"slug":"redis","similarity":0.342626267},{"slug":"mail","similarity":0.397801735},{"slug":"experience-review","similarity":0.3072162046},{"slug":"google-analytics","similarity":0.241953094},{"slug":"data-structure","similarity":0.2785675762},{"slug":"vimwiki","similarity":0.3755026264},{"slug":"embeddings","similarity":0.4060211653},{"slug":"추론 애플리케이션","similarity":0.2376693063}]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#crontab\">crontab</a></p>\n<ul>\n<li><a href=\"#crontab-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EC%8B%A4%ED%96%89\">crontab 등록 및 실행</a></li>\n<li><a href=\"#macos%EC%9D%98-%EA%B2%BD%EC%9A%B0-email%EB%A1%9C-%EA%B2%B0%EA%B3%BC%EA%B0%80-%EC%A0%84%EC%86%A1%EB%90%9C%EB%8B%A4\">macOS의 경우 email로 결과가 전송된다.</a></li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"crontab\" style=\"position:relative;\"><a href=\"#crontab\" aria-label=\"crontab permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>crontab</h1>\n<p>작업 스케쥴링을 위한 명령어 도구.</p>\n<ul>\n<li><code class=\"language-text\">crontab -e</code>: crontab 파일을 열어서 수정한다.</li>\n<li><code class=\"language-text\">crontab -l</code>: crontab 파일을 출력한다.</li>\n<li><code class=\"language-text\">crontab -r</code>: crontab 파일을 삭제한다.</li>\n</ul>\n<p>각 명령어는 현재 사용자 기준으로 동작한다.</p>\n<h2 id=\"crontab-등록-및-실행\" style=\"position:relative;\"><a href=\"#crontab-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EC%8B%A4%ED%96%89\" aria-label=\"crontab 등록 및 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>crontab 등록 및 실행</h2>\n<p><code class=\"language-text\">crontab -e</code> 명령어를 입력하면 vi 에디터가 실행되며, 아래와 같이 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">PATH=/Users/username/bin:/usr/local/Cellar/pyenv-virtualenv/1.1.5/shims:/usr/local/Cellar/pyenv-virtualenv/1.1.5/shims\n\n21 * * * * docker-compose -f ~/workspace/my-api/docker-compose.local.yml run server python script.py >> ~/workspace/my-api/script.log</code></pre></div>\n<p>이제 <code class=\"language-text\">cron</code>을 통해 실행되면, <code class=\"language-text\">~/workspace/my-api/script.log</code> 파일에 결과가 기록된다.\n실행되지 않으면 daemon(<code class=\"language-text\">cron</code>)이 실행되고 있지 않은 것이므로, <code class=\"language-text\">cron</code>을 실행한다.\n이는 운영체제마다 다를 것으로 보인다. ubuntu(<a href=\"../windows-subsystem-for-linux\">wsl</a>)의 경우 <code class=\"language-text\">cron</code>을 직접 실행시켜야 했다.(<code class=\"language-text\">sudo cron</code>)</p>\n<ul>\n<li>명령어의 실행 위치는 home directory다. 상대 경로로 사용시 주의해야 한다.</li>\n<li>사용자 로그인을 통해 shell에 접속한 것이 아니므로 profile 파일을 읽지 않는다. 따라서 명령어의 경우 PATH 환경변수를 명시적으로 지정해야 한다.</li>\n<li>예시와 같이 crontab 파일에 <code class=\"language-text\">PATH</code> 등 환경변수를 지정할 수 있다.</li>\n</ul>\n<p><strong>실행 결과</strong></p>\n<blockquote>\n<p>Output of the crontab jobs (including errors) is sent through</p>\n</blockquote>\n<p>email to the user the crontab file belongs to (unless redirected).</p>\n<p><em>- crontab 파일 내용중</em></p>\n<p>예시처럼, 출력은 redirection을 통해서 남기거나, 그렇지 않으면 사용자의 email로 전송된다고 한다.</p>\n<h2 id=\"macos의-경우-email로-결과가-전송된다\" style=\"position:relative;\"><a href=\"#macos%EC%9D%98-%EA%B2%BD%EC%9A%B0-email%EB%A1%9C-%EA%B2%B0%EA%B3%BC%EA%B0%80-%EC%A0%84%EC%86%A1%EB%90%9C%EB%8B%A4\" aria-label=\"macos의 경우 email로 결과가 전송된다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>macOS의 경우 email로 결과가 전송된다.</h2>\n<p>읽지 않은 메일이 있으면, 터미널에 접속하면 다음과 같은 메시지가 나온다:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Last login: Sun Apr <span class=\"token number\">25</span> <span class=\"token number\">15</span>:44:23 on ttys000\nYou have new mail.</code></pre></div>\n<p><code class=\"language-text\">mail</code> 실행하면.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">❯ mail\nMail version <span class=\"token number\">8.1</span> <span class=\"token number\">6</span>/6/93.  Type ? <span class=\"token keyword\">for</span> help.\n<span class=\"token string\">\"/var/mail/username\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">10</span> messages <span class=\"token number\">10</span> new\n<span class=\"token operator\">></span>N  <span class=\"token number\">1</span> username@usernameui-Mac  Sun Apr <span class=\"token number\">25</span> <span class=\"token number\">16</span>:39  <span class=\"token number\">21</span>/862   <span class=\"token string\">\"Cron &lt;username@usernameui-MacBookPro> python ~/workspace/my-api/script.py\"</span>\n N  <span class=\"token number\">2</span> username@usernameui-Mac  Sun Apr <span class=\"token number\">25</span> <span class=\"token number\">16</span>:41  <span class=\"token number\">18</span>/742   <span class=\"token string\">\"Cron &lt;username@usernameui-MacBookPro> doco -f docker-compose.local.yml run server python script.py\"</span>\n N  <span class=\"token number\">3</span> username@usernameui-Mac  Sun Apr <span class=\"token number\">25</span> <span class=\"token number\">16</span>:42  <span class=\"token number\">21</span>/862   <span class=\"token string\">\"Cron &lt;username@usernameui-MacBookPro> python ~/workspace/my-api/script.py\"</span>\n N  <span class=\"token number\">4</span> username@usernameui-Mac  Sun Apr <span class=\"token number\">25</span> <span class=\"token number\">16</span>:42  <span class=\"token number\">18</span>/739   <span class=\"token string\">\"Cron &lt;username@ip-192-168-0-10> doco -f docker-compose.local.yml run server python script.py\"</span>\n N  <span class=\"token number\">5</span> username@ip-192-168-0-1  Sun Apr <span class=\"token number\">25</span> <span class=\"token number\">16</span>:43  <span class=\"token number\">18</span>/900   <span class=\"token string\">\"Cron &lt;username@ip-192-168-0-10> doco -f docker-compose.local.yml run server python script.py\"</span>\n N  <span class=\"token number\">6</span> username@ip-192-168-0-1  Sun Apr <span class=\"token number\">25</span> <span class=\"token number\">16</span>:46  <span class=\"token number\">18</span>/900   <span class=\"token string\">\"Cron &lt;username@ip-192-168-0-10> doco -f docker-compose.local.yml run server python script.py\"</span>\n N  <span class=\"token number\">7</span> username@ip-192-168-0-1  Sun Apr <span class=\"token number\">25</span> <span class=\"token number\">16</span>:48  <span class=\"token number\">18</span>/900   <span class=\"token string\">\"Cron &lt;username@ip-192-168-0-10> doco -f docker-compose.local.yml run server python script.py\"</span>\n N  <span class=\"token number\">8</span> username@ip-192-168-0-1  Sun Apr <span class=\"token number\">25</span> <span class=\"token number\">16</span>:49  <span class=\"token number\">18</span>/900   <span class=\"token string\">\"Cron &lt;username@ip-192-168-0-10> doco -f docker-compose.local.yml run server python script.py\"</span>\n N  <span class=\"token number\">9</span> username@ip-192-168-0-1  Sun Apr <span class=\"token number\">25</span> <span class=\"token number\">16</span>:50  <span class=\"token number\">18</span>/900   <span class=\"token string\">\"Cron &lt;username@ip-192-168-0-10> doco -f docker-compose.local.yml run server python script.py\"</span>\n N <span class=\"token number\">10</span> username@ip-192-168-0-1  Sun Apr <span class=\"token number\">25</span> <span class=\"token number\">16</span>:50  <span class=\"token number\">18</span>/900   <span class=\"token string\">\"Cron &lt;username@ip-192-168-0-10> doco -f docker-compose.local.yml run server python script.py\"</span>\n? <span class=\"token number\">10</span>\nMessage <span class=\"token number\">10</span>:\nFrom username@ip-192-168-0-10.ap-northeast-2.compute.internal  Sun Apr <span class=\"token number\">25</span> <span class=\"token number\">16</span>:50:02 <span class=\"token number\">2021</span>\nX-Original-To: username\nDelivered-To: username@ip-192-168-0-10.ap-northeast-2.compute.internal\nFrom: username@ip-192-168-0-10.ap-northeast-2.compute.internal <span class=\"token punctuation\">(</span>Cron Daemon<span class=\"token punctuation\">)</span>\nTo: username@ip-192-168-0-10.ap-northeast-2.compute.internal\nSubject: Cron <span class=\"token operator\">&lt;</span>username@ip-192-168-0-1<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span> doco <span class=\"token parameter variable\">-f</span> docker-compose.local.yml run server python script.py\nX-Cron-Env: <span class=\"token operator\">&lt;</span><span class=\"token environment constant\">SHELL</span><span class=\"token operator\">=</span>/bin/sh<span class=\"token operator\">></span>\nX-Cron-Env: <span class=\"token operator\">&lt;</span><span class=\"token environment constant\">PATH</span><span class=\"token operator\">=</span>/usr/bin:/bin<span class=\"token operator\">></span>\nX-Cron-Env: <span class=\"token operator\">&lt;</span><span class=\"token environment constant\">LOGNAME</span><span class=\"token operator\">=</span>username<span class=\"token operator\">></span>\nX-Cron-Env: <span class=\"token operator\">&lt;</span><span class=\"token environment constant\">USER</span><span class=\"token operator\">=</span>username<span class=\"token operator\">></span>\nDate: Sun, <span class=\"token number\">25</span> Apr <span class=\"token number\">2021</span> <span class=\"token number\">16</span>:50:01 +0900 <span class=\"token punctuation\">(</span>KST<span class=\"token punctuation\">)</span>\n\n/bin/sh: doco: <span class=\"token builtin class-name\">command</span> not found\n\n? q\nSaved <span class=\"token number\">1</span> message <span class=\"token keyword\">in</span> mbox\nHeld <span class=\"token number\">9</span> messages <span class=\"token keyword\">in</span> /var/mail/username</code></pre></div>\n<p>번호를 입력해서 메일을 읽을 수 있다. 위 같은 경우 cronjob에 입력한 명령어를 찾을 수 없어서 에러가 발생했다.</p>\n<p>읽은 메시지는 목록에서 사라지는데 <code class=\"language-text\">~/mbox</code> 파일에 텍스트로 저장된다.</p>"}},"pageContext":{"id":"de3fff30-6d9a-5ab3-ac1c-68d421a573c8"}},"staticQueryHashes":[],"slicesMap":{}}