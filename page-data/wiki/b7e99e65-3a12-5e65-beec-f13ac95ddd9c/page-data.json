{"componentChunkName":"component---src-pages-wiki-markdown-remark-id-tsx","path":"/wiki/b7e99e65-3a12-5e65-beec-f13ac95ddd9c/","result":{"data":{"markdownRemark":{"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EA%B0%9C%EB%B0%9C-%EC%9A%A9%EC%96%B4\">개발 용어</a></p>\n</li>\n<li>\n<p><a href=\"#business-rule-business-logic-logic\">Business Rule, Business Logic, Logic</a></p>\n<ul>\n<li><a href=\"#business-logic\">Business Logic</a></li>\n<li><a href=\"#logic\">Logic</a></li>\n<li><a href=\"#business-rule\">Business Rule</a></li>\n<li><a href=\"#%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4-%EA%B7%9C%EC%B9%99%EA%B3%BC-%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4-%EB%A1%9C%EC%A7%81%EC%9D%84-%EC%99%9C-%EB%B6%84%EB%A6%AC%ED%95%98%EC%97%AC-%EC%95%8C%EC%95%84%EC%95%BC-%ED%95%A0%EA%B9%8C-feat-clean-architecture\">비즈니스 규칙과 비즈니스 로직을 왜 분리하여 알아야 할까? (feat. Clean Architecture)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%99%80-%EA%B4%80%EB%A0%A8%EB%90%9C-%EC%9A%A9%EC%96%B4%EB%93%A4\">테스트와 관련된 용어들</a></p>\n<ul>\n<li><a href=\"#test-double\">Test Double</a></li>\n<li><a href=\"#test-stub\">Test Stub</a></li>\n<li><a href=\"#mock-object\">Mock Object</a></li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"개발-용어\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C-%EC%9A%A9%EC%96%B4\" aria-label=\"개발 용어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발 용어</h1>\n<h1 id=\"business-rule-business-logic-logic\" style=\"position:relative;\"><a href=\"#business-rule-business-logic-logic\" aria-label=\"business rule business logic logic permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Business Rule, Business Logic, Logic</h1>\n<p>아키텍처에 대한 이야기가 나오면 위 단어들이 빠지지 않는다.</p>\n<p>위 단어들이 무엇을 의미하고 왜 <strong>분리하여</strong> 알아야 하는지 알아본다.</p>\n<h2 id=\"business-logic\" style=\"position:relative;\"><a href=\"#business-logic\" aria-label=\"business logic permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Business Logic</h2>\n<p>비즈니스 로직은 말 그대로 비즈니스와 관계되어 있다.</p>\n<p>'출금' 기능을 구현한다고 하면 다음 처럼 구현할 수 있을 것이다:</p>\n<pre><code class=\"language-javascript\">if (amount &#x3C;= balance) {            // 잔고가 충분하면\n    balance -= amount;              // 잔고 감소\n    let sql = 'update...';          // 데이터베이스 잔고 업데이트 쿼리\n    query(sql, balance);            // 쿼리 전송\n} else {\n    alert('not enough balance.');   // 충분하지 않으면 사용자에게 알림\n}\n</code></pre>\n<p>기능을 동작시키기 위한 모든 코드가 비지니스 로직이 된다.</p>\n<h2 id=\"logic\" style=\"position:relative;\"><a href=\"#logic\" aria-label=\"logic permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Logic</h2>\n<p>그럼 일반 로직은 무엇인가?</p>\n<p>위 예시 코드에는 나타나지 않은 DB에 연결하거나, Server를 실행 시키는 등</p>\n<p>시스템이 동작하기 위한 코드들이다. 따라서 비즈니스와 별개로 반드시 필요한 코드다.</p>\n<h2 id=\"business-rule\" style=\"position:relative;\"><a href=\"#business-rule\" aria-label=\"business rule permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Business Rule</h2>\n<p>비즈니스 로직이 구현에 가깝다면 비즈니스 룰은 말 그대로 원칙이다.</p>\n<p>위 예시 코드에서 '잔고가 충분하면', '잔고 감소', '사용자에게 알림'과 같이 자연어로 표현 가능하다.</p>\n<p>클라이언트가 제시한 비즈니스 규칙을 개발자가 비즈니스 로직으로 구현할 수 있다.</p>\n<p>비즈니스 로직이 비즈니스 룰을 설명 할 수도 있다.</p>\n<h2 id=\"비즈니스-규칙과-비즈니스-로직을-왜-분리하여-알아야-할까-feat-clean-architecture\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4-%EA%B7%9C%EC%B9%99%EA%B3%BC-%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4-%EB%A1%9C%EC%A7%81%EC%9D%84-%EC%99%9C-%EB%B6%84%EB%A6%AC%ED%95%98%EC%97%AC-%EC%95%8C%EC%95%84%EC%95%BC-%ED%95%A0%EA%B9%8C-feat-clean-architecture\" aria-label=\"비즈니스 규칙과 비즈니스 로직을 왜 분리하여 알아야 할까 feat clean architecture permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비즈니스 규칙과 비즈니스 로직을 왜 분리하여 알아야 할까? (feat. Clean Architecture)</h2>\n<p>아키텍처를 설계하면 유지보수의 문제에 직면하게 된다.\n좋은 아키텍처는 좋은 유지보수성을 나타낸다.</p>\n<p>어느날 클라이언트가 '잔고가 없어도 사용자에게 알리지 않게 해주세요.'라고 말했다 치자.\n문제는</p>\n<p><strong>비즈니스 룰과 관련된 코드</strong>: '잔고가 충분하면', '잔고 감소', '사용자에게 알림'</p>\n<p><strong>그렇지 않은 코드</strong>: '데이터베이스 잔고 업데이트 쿼리', '쿼리 전송'</p>\n<p>위 코드들이 서로 섞여 있어서 가독성이 그렇게 좋지 않다는 것이다.\n따라서 어떤 코드를 변경해야 사용자에 대한 알림이 가지 않는지, 그리고 해당 코드는 몇 줄에 걸쳐 나타나는지 분석해야 한다.\n쿼리 수정을 할 때도 이런 문제는 발생한다.</p>\n<p><a href=\"https://blog.coderifleman.com/2017/12/18/the-clean-architecture/?utm_medium=social&#x26;utm_source=gaerae.com&#x26;utm_campaign=%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%8A%A4%EB%9F%BD%EB%8B%A4\">Clean Architecture</a>는\n비즈니스를 규칙을 명시적으로 작성하고 비즈니스 로직과 계층을 분리하고, 비즈니스 로직을 작게 만들도록 한다.</p>\n<p>계층을 분리함으로써 의존성을 분리하여 테스트하기 쉽게 한다. 잘 분리된 코드는 분석하기도 쉽다.</p>\n<h1 id=\"테스트와-관련된-용어들\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%99%80-%EA%B4%80%EB%A0%A8%EB%90%9C-%EC%9A%A9%EC%96%B4%EB%93%A4\" aria-label=\"테스트와 관련된 용어들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트와 관련된 용어들</h1>\n<h2 id=\"test-double\" style=\"position:relative;\"><a href=\"#test-double\" aria-label=\"test double permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test Double</h2>\n<p>Stub, Mock, Fake 등 테스트 도구들을 통칭하는 말.</p>\n<h2 id=\"test-stub\" style=\"position:relative;\"><a href=\"#test-stub\" aria-label=\"test stub permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test Stub</h2>\n<p>결과가 정해진 기능(function).</p>\n<p>항상 같은 결과만 나오게 한다거나, 특정 인자에는 특정 결과만 반환하도록 한다.</p>\n<p>NodeJS에는 SinonJS가 그 역할을 한다.</p>\n<h2 id=\"mock-object\" style=\"position:relative;\"><a href=\"#mock-object\" aria-label=\"mock object permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mock Object</h2>\n<p>오브젝트를 흉내내는 것.</p>\n<p>의존하는 모듈이 사이드이펙트를 가지거나, 아직 구현이 안되어서 로직을 흉내내어 동작케하는 것.</p>\n<p>예:</p>\n<ul>\n<li>모듈이 데이터베이스를 업데이트하면 안되므로 모듈의 로직을 흉내내어 메모리에만 올려둔다.</li>\n<li>네트워크 요청이 필요한 경우 실제로 발생시키지 않고 해당 인자를 기반하여 결과를 반환한다.</li>\n<li>의존하는 모듈이 아직 구현 되지 않아서 임시로 흉내내어 사용한다.</li>\n</ul>"}},"pageContext":{"id":"b7e99e65-3a12-5e65-beec-f13ac95ddd9c","__params":{"id":"b7e99e65-3a12-5e65-beec-f13ac95ddd9c"}}},"staticQueryHashes":[],"slicesMap":{}}