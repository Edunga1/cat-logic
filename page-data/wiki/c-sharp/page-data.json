{"componentChunkName":"component---src-components-gatsby-templates-wiki-tsx","path":"/wiki/c-sharp/","result":{"data":{"file":{"fields":{"gitLogs":[{"hash":"c554cc7c94e192dabf364484a9eeea8e165a0cc5","date":"2024-05-09T11:17:37Z"},{"hash":"8bdada1b2e60755198be2a1c30d5af5ab278ef07","date":"2024-02-24T10:56:06Z"},{"hash":"808b668bdb24ed2973e299cfd248bea90b2618c2","date":"2024-01-19T09:46:31+09:00"},{"hash":"71038d6ac401e56c5d7049ea59e84d3c78c00370","date":"2023-12-17T09:00:43Z"},{"hash":"d117161c8777260ca84daf0fbc4bab6537ee32f8","date":"2023-12-10T07:41:38Z"},{"hash":"a02a54eafad783e6b136ef1411166ef05398f5fc","date":"2023-10-23T19:55:03+09:00"},{"hash":"ee34ec929ca5967011a21066c20f3f1b9f8c7fbe","date":"2023-07-22T21:53:32Z"},{"hash":"57e9f343cb75ac5644f858f5dd264e90c5550bbf","date":"2023-04-13T14:48:43Z"}]},"childMarkdownRemark":{"headings":[{"value":"C# Programming Language"}],"fields":{"slug":"/c-sharp/","relatedDocs":[{"slug":"javascript","similarity":0.2904132873},{"slug":"web","similarity":0.3984103899},{"slug":"2016-08-27-gdg-webtech-workshop-nnn","similarity":0.4320153287},{"slug":"crontab","similarity":0.2755867117},{"slug":"gradle","similarity":0.4173561439},{"slug":"idea-methodology","similarity":0.4115166539},{"slug":"2016-11-16-google-campus-two-things-you-must-keep-in-google-play","similarity":0.4923700477},{"slug":"spring-framework","similarity":0.3725079251},{"slug":"aws","similarity":0.3539600554},{"slug":"git","similarity":0.2946424525},{"slug":"algorithm-practice","similarity":0.3781143512},{"slug":"docker","similarity":0.2688959486},{"slug":"scp","similarity":0.2308152695},{"slug":"mac-os","similarity":0.3648819137},{"slug":"testing","similarity":0.4619816139},{"slug":"machine-learning","similarity":0.4047788482},{"slug":"devops","similarity":0.3526951082},{"slug":"python","similarity":0.3811566922},{"slug":"object-oriented-programming","similarity":0.5861996289},{"slug":"linux","similarity":0.2228242971},{"slug":"sfml","similarity":0.4012355166},{"slug":"windows","similarity":0.4855057464},{"slug":"markdown","similarity":0.3474882504},{"slug":"cat-logic","similarity":0.3282702005},{"slug":"vuejs","similarity":0.3506184081},{"slug":"shell","similarity":0.3641776721},{"slug":"html","similarity":0.3396251908},{"slug":"vimenter-2023","similarity":0.440479644},{"slug":"data-analysis","similarity":0.4895610744},{"slug":"hardware","similarity":0.2789959962},{"slug":"programming-convention","similarity":0.3678625205},{"slug":"webgl","similarity":0.4195434006},{"slug":"sentry","similarity":0.2976017376},{"slug":"valve","similarity":0.3383886063},{"slug":"security","similarity":0.2116875613},{"slug":"reactjs","similarity":0.4071194697},{"slug":"airflow","similarity":0.2539261537},{"slug":"computer-graphics","similarity":0.3444632961},{"slug":"elasticsearch","similarity":0.3806503125},{"slug":"unicode","similarity":0.33755077},{"slug":"logging","similarity":0.3064967252},{"slug":"tools","similarity":0.4008729614},{"slug":"programming-paradigm","similarity":0.5048513742},{"slug":"system-failures","similarity":0.2684485664},{"slug":"amazon-redshift","similarity":0.2733204958},{"slug":"inspiration","similarity":0.3940657967},{"slug":"gatsbyjs","similarity":0.335093768},{"slug":"design-pattern","similarity":0.5884517216},{"slug":"game","similarity":0.4407569051},{"slug":"kubernetes","similarity":0.3091670398},{"slug":"nodejs","similarity":0.4226618749},{"slug":"continuous-integration-and-deployment","similarity":0.3243376448},{"slug":"rust","similarity":0.4328098988},{"slug":"book","similarity":0.3211544112},{"slug":"jetbrains","similarity":0.3799081318},{"slug":"quotation","similarity":0.2991173482},{"slug":"postgresql","similarity":0.3200051754},{"slug":"jira","similarity":0.3012245795},{"slug":"large-language-model","similarity":0.3387359255},{"slug":"swagger","similarity":0.3055512979},{"slug":"architecture","similarity":0.4269118734},{"slug":"curl","similarity":0.3925832618},{"slug":"unity3d","similarity":0.4741662604},{"slug":"jargon","similarity":0.4359066189},{"slug":"language-server-protocol","similarity":0.4007061558},{"slug":"clean-code","similarity":0.4955951632},{"slug":"java","similarity":0.4480817473},{"slug":"windows-subsystem-for-linux","similarity":0.3959522264},{"slug":"test-driven-development","similarity":0.404015915},{"slug":"philosophy","similarity":0.440217877},{"slug":"github","similarity":0.3667886059},{"slug":"network","similarity":0.371259568},{"slug":"kotlin","similarity":0.4244029329},{"slug":"c-sharp","similarity":1},{"slug":"angularjs","similarity":0.4028905567},{"slug":"vim","similarity":0.405362572},{"slug":"ionic-framework","similarity":0.3071397641},{"slug":"physics","similarity":0.5002429445},{"slug":"html-canvas","similarity":0.4853805252},{"slug":"reverse-engineering","similarity":0.2686342567},{"slug":"space","similarity":0.2229951814},{"slug":"css","similarity":0.3732889767},{"slug":"code-review","similarity":0.3909259645},{"slug":"software-development","similarity":0.4473201635},{"slug":"database","similarity":0.4080644401},{"slug":"reactive-extensions","similarity":0.3735020131},{"slug":"redis","similarity":0.2474380259},{"slug":"mail","similarity":0.2448815534},{"slug":"experience-review","similarity":0.3522641843},{"slug":"google-analytics","similarity":0.2790098487},{"slug":"data-structure","similarity":0.4050873709},{"slug":"vimwiki","similarity":0.3301656025},{"slug":"embeddings","similarity":0.2918796505},{"slug":"추론 애플리케이션","similarity":0.3595850673}]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#c-programming-language\">C# Programming Language</a></p>\n<ul>\n<li><a href=\"#event\">Event</a></li>\n<li><a href=\"#events-or-an-observer-interface-proscons\">events or an observer interface? Pros/cons?</a></li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"c-programming-language\" style=\"position:relative;\"><a href=\"#c-programming-language\" aria-label=\"c programming language permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>C# Programming Language</h1>\n<p>윈도우 애플리케이션 보다는 게임 개발 도구나 게임 소스를 통해 많이 접했다.</p>\n<p>특히 <a href=\"../unity3d\">Unity 3D</a> 또는 <a href=\"../game\">Ultima Online</a>으로 C# 코드를 많이 본다.</p>\n<h2 id=\"event\" style=\"position:relative;\"><a href=\"#event\" aria-label=\"event permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Event</h2>\n<p>C#에서 옵저버 패턴과 유사한 기능을 하는 event가 있다.</p>\n<p>이벤트 정의:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">delegate</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PositionEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector3</span> position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">event</span> <span class=\"token class-name\">PositionEvent</span> onPositionChanged<span class=\"token punctuation\">;</span></code></pre></div>\n<p>delegate는 함수를 표현하는 방법이다.</p>\n<p>이벤트 등록:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">onPositionChanged <span class=\"token operator\">+=</span> SyncPosition<span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">SyncPosition</code>은 <code class=\"language-text\">PositionEvent</code>와 인터페이스가 같은 함수이어야 한다.\n<code class=\"language-text\">+</code> 연산자를 사용하여 이벤트에 함수를 등록한다.</p>\n<p>이벤트 발생:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token function\">onPositionChanged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이제 등록된 <code class=\"language-text\">SyncPosition</code>이 호출된다.</p>\n<h2 id=\"events-or-an-observer-interface-proscons\" style=\"position:relative;\"><a href=\"#events-or-an-observer-interface-proscons\" aria-label=\"events or an observer interface proscons permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>events or an observer interface? Pros/cons?</h2>\n<p><a href=\"https://stackoverflow.com/questions/550785\">https://stackoverflow.com/questions/550785</a></p>\n<p>첫 번째 답변은 이벤트를 사용함에 있어서 특징에 대해서 설명한다:</p>\n<blockquote>\n<p>Less maintenance\n적은 유지보수</p>\n<p>The pattern is built into the language so everybody knows how to use it\n패턴이 언어에 내장되어 있기 때문에, 누구나 사용하는 방법에 대해 알고 있습니다.</p>\n</blockquote>\n<p>두 번째 답변:</p>\n<blockquote>\n<p>Hmm, events can be used to implement the Observer pattern. In fact, using events can be regarded as another implementation of the observer-pattern imho.\n내 의견으로는, event를 이용하여 옵저버 패턴을 구현할 수 있습니다. 사실은, event를 사용하는 것은 옵저버 패턴을 구현했다고 볼 수 있습니다.</p>\n</blockquote>\n<p>두 번째 답변의 덧글 중:</p>\n<blockquote>\n<p>Absolutely. This is a bit like asking, \"Should I implement the iterator pattern or use foreach and IEnumerable?\n이건 이렇게 묻는 것과 같습니다. \"이터레이터 패턴을 구현해야 하나요? 아니면 foreach와 IEnumrable을 사용해야 하나요?\"</p>\n</blockquote>"}},"site":{"siteMetadata":{"gitHubRepositoryUrl":"https://github.com/edunga1/cat-logic"}}},"pageContext":{"id":"95432610-6ba8-5bb5-b602-16f205865727"}},"staticQueryHashes":[],"slicesMap":{}}