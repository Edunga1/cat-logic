{"componentChunkName":"component---src-components-gatsby-templates-wiki-tsx","path":"/wiki/c-sharp/","result":{"data":{"markdownRemark":{"headings":[{"value":"C#"}],"fields":{"slug":"/c-sharp/","relatedDocs":[{"slug":"javascript","similarity":0.2804455459},{"slug":"web","similarity":0.3818854843},{"slug":"2016-08-27-gdg-webtech-workshop-nnn","similarity":0.4302071103},{"slug":"crontab","similarity":0.2683390023},{"slug":"idea-methodology","similarity":0.4164467184},{"slug":"2016-11-16-google-campus-two-things-you-must-keep-in-google-play","similarity":0.4899759346},{"slug":"spring-framework","similarity":0.3640513097},{"slug":"aws","similarity":0.3496646288},{"slug":"git","similarity":0.2859622634},{"slug":"algorithm-practice","similarity":0.3571370238},{"slug":"docker","similarity":0.2654952952},{"slug":"scp","similarity":0.2287099696},{"slug":"mac-os","similarity":0.3545906434},{"slug":"testing","similarity":0.4639811281},{"slug":"machine-learning","similarity":0.3977218126},{"slug":"devops","similarity":0.3544435424},{"slug":"python","similarity":0.3845794862},{"slug":"object-oriented-programming","similarity":0.5765319076},{"slug":"linux","similarity":0.2441888717},{"slug":"sfml","similarity":0.3760761006},{"slug":"windows","similarity":0.4766648534},{"slug":"markdown","similarity":0.3186371706},{"slug":"cat-logic","similarity":0.3225289416},{"slug":"vuejs","similarity":0.3572582532},{"slug":"shell","similarity":0.3850834009},{"slug":"html","similarity":0.3375031574},{"slug":"vimenter-2023","similarity":0.4337371925},{"slug":"data-analysis","similarity":0.4849070017},{"slug":"hardware","similarity":0.2579000124},{"slug":"programming-convention","similarity":0.360777799},{"slug":"webgl","similarity":0.4122209022},{"slug":"sentry","similarity":0.3013063311},{"slug":"valve","similarity":0.326188764},{"slug":"reactjs","similarity":0.4057001391},{"slug":"airflow","similarity":0.2541759767},{"slug":"computer-graphics","similarity":0.323072279},{"slug":"programming-philosophy","similarity":0.4325666142},{"slug":"elasticsearch","similarity":0.3791696899},{"slug":"unicode","similarity":0.3304362649},{"slug":"logging","similarity":0.3086452692},{"slug":"tools","similarity":0.3842226978},{"slug":"programming-paradigm","similarity":0.4783006227},{"slug":"system-failures","similarity":0.2690743123},{"slug":"amazon-redshift","similarity":0.2706603609},{"slug":"inspiration","similarity":0.3800189861},{"slug":"gatsbyjs","similarity":0.3345532018},{"slug":"design-pattern","similarity":0.5869503742},{"slug":"game","similarity":0.4078030109},{"slug":"kubernetes","similarity":0.3053316388},{"slug":"llm-tools","similarity":0.3244555654},{"slug":"nodejs","similarity":0.4046482332},{"slug":"continuous-integration-and-deployment","similarity":0.3237928295},{"slug":"rust","similarity":0.3527361711},{"slug":"book","similarity":0.3325759285},{"slug":"jetbrains","similarity":0.3767982576},{"slug":"quotation","similarity":0.3033594055},{"slug":"postgresql","similarity":0.3105838336},{"slug":"jira","similarity":0.3000891399},{"slug":"swagger","similarity":0.3014431067},{"slug":"architecture","similarity":0.4227367538},{"slug":"unity3d","similarity":0.4583812891},{"slug":"jargon","similarity":0.4296731519},{"slug":"language-server-protocol","similarity":0.365249593},{"slug":"clean-code","similarity":0.4892928034},{"slug":"java","similarity":0.4393251893},{"slug":"windows-subsystem-for-linux","similarity":0.3802138371},{"slug":"test-driven-development","similarity":0.4001294349},{"slug":"github","similarity":0.3590580067},{"slug":"network","similarity":0.37046273},{"slug":"kotlin","similarity":0.4130105604},{"slug":"c-sharp","similarity":1},{"slug":"angularjs","similarity":0.4006291605},{"slug":"vim","similarity":0.388647414},{"slug":"ionic-framework","similarity":0.3089548665},{"slug":"physics","similarity":0.4995803045},{"slug":"html-canvas","similarity":0.4795373959},{"slug":"reverse-engineering","similarity":0.2617496635},{"slug":"space","similarity":0.2130531277},{"slug":"css","similarity":0.3728463794},{"slug":"code-review","similarity":0.3831062881},{"slug":"software-development","similarity":0.4348361859},{"slug":"database","similarity":0.3997842412},{"slug":"reactive-extensions","similarity":0.3830300697},{"slug":"redis","similarity":0.2619130018},{"slug":"mail","similarity":0.2482252968},{"slug":"experience-review","similarity":0.3544885247},{"slug":"google-analytics","similarity":0.2824894919},{"slug":"data-structure","similarity":0.3984209812},{"slug":"vimwiki","similarity":0.3295970689},{"slug":"embeddings","similarity":0.3445224965},{"slug":"추론 애플리케이션","similarity":0.3544160532}]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#c\">C#</a></p>\n<ul>\n<li><a href=\"#event\">Event</a></li>\n<li><a href=\"#events-or-an-observer-interface-proscons\">events or an observer interface? Pros/cons?</a></li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"c\" style=\"position:relative;\"><a href=\"#c\" aria-label=\"c permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>C#</h1>\n<p>윈도우 애플리케이션 보다는 게임 개발 도구나 게임 소스를 통해 많이 접했다.</p>\n<p>특히 <a href=\"../unity3d\">Unity 3D</a> 또는 <a href=\"../game\">Ultima Online</a>으로 C# 코드를 많이 본다.</p>\n<h2 id=\"event\" style=\"position:relative;\"><a href=\"#event\" aria-label=\"event permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Event</h2>\n<p>C#에서 옵저버 패턴과 유사한 기능을 하는 event가 있다.</p>\n<p>이벤트 정의:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">delegate</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PositionEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector3</span> position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">event</span> <span class=\"token class-name\">PositionEvent</span> onPositionChanged<span class=\"token punctuation\">;</span></code></pre></div>\n<p>delegate는 함수를 표현하는 방법이다.</p>\n<p>이벤트 등록:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">onPositionChanged <span class=\"token operator\">+=</span> SyncPosition<span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">SyncPosition</code>은 <code class=\"language-text\">PositionEvent</code>와 인터페이스가 같은 함수이어야 한다.\n<code class=\"language-text\">+</code> 연산자를 사용하여 이벤트에 함수를 등록한다.</p>\n<p>이벤트 발생:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token function\">onPositionChanged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이제 등록된 <code class=\"language-text\">SyncPosition</code>이 호출된다.</p>\n<h2 id=\"events-or-an-observer-interface-proscons\" style=\"position:relative;\"><a href=\"#events-or-an-observer-interface-proscons\" aria-label=\"events or an observer interface proscons permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>events or an observer interface? Pros/cons?</h2>\n<p><a href=\"https://stackoverflow.com/questions/550785\">https://stackoverflow.com/questions/550785</a></p>\n<p>첫 번째 답변은 이벤트를 사용함에 있어서 특징에 대해서 설명한다:</p>\n<blockquote>\n<p>Less maintenance\n적은 유지보수</p>\n<p>The pattern is built into the language so everybody knows how to use it\n패턴이 언어에 내장되어 있기 때문에, 누구나 사용하는 방법에 대해 알고 있습니다.</p>\n</blockquote>\n<p>두 번째 답변:</p>\n<blockquote>\n<p>Hmm, events can be used to implement the Observer pattern. In fact, using events can be regarded as another implementation of the observer-pattern imho.\n내 의견으로는, event를 이용하여 옵저버 패턴을 구현할 수 있습니다. 사실은, event를 사용하는 것은 옵저버 패턴을 구현했다고 볼 수 있습니다.</p>\n</blockquote>\n<p>두 번째 답변의 덧글 중:</p>\n<blockquote>\n<p>Absolutely. This is a bit like asking, \"Should I implement the iterator pattern or use foreach and IEnumerable?\n이건 이렇게 묻는 것과 같습니다. \"이터레이터 패턴을 구현해야 하나요? 아니면 foreach와 IEnumrable을 사용해야 하나요?\"</p>\n</blockquote>"}},"pageContext":{"id":"dda47636-ac01-532a-b8c5-c8ae24d9c39c"}},"staticQueryHashes":[],"slicesMap":{}}